; benchmark generated from python API
(set-info :status unknown)
(declare-fun alivenoise () Bool)
(declare-fun aliveintercept () Bool)
(declare-fun aliveslope () Bool)
(declare-fun aliveproboutlier () Bool)
(declare-fun aliveoutlier1 () Bool)
(declare-fun outlier1 () Int)
(declare-fun alivey1_1 () Bool)
(declare-fun alivey1_2 () Bool)
(declare-fun aliveoutlier2 () Bool)
(declare-fun outlier2 () Int)
(declare-fun alivey2_1 () Bool)
(declare-fun alivey2_2 () Bool)
(declare-fun aliveoutlier3 () Bool)
(declare-fun outlier3 () Int)
(declare-fun alivey3_1 () Bool)
(declare-fun alivey3_2 () Bool)
(declare-fun aliveoutlier4 () Bool)
(declare-fun outlier4 () Int)
(declare-fun alivey4_1 () Bool)
(declare-fun alivey4_2 () Bool)
(declare-fun aliveoutlier5 () Bool)
(declare-fun outlier5 () Int)
(declare-fun alivey5_1 () Bool)
(declare-fun alivey5_2 () Bool)
(declare-fun aliveoutlier6 () Bool)
(declare-fun outlier6 () Int)
(declare-fun alivey6_1 () Bool)
(declare-fun alivey6_2 () Bool)
(declare-fun aliveoutlier7 () Bool)
(declare-fun outlier7 () Int)
(declare-fun alivey7_1 () Bool)
(declare-fun alivey7_2 () Bool)
(declare-fun aliveoutlier8 () Bool)
(declare-fun outlier8 () Int)
(declare-fun alivey8_1 () Bool)
(declare-fun alivey8_2 () Bool)
(declare-fun aliveoutlier9 () Bool)
(declare-fun outlier9 () Int)
(declare-fun alivey9_1 () Bool)
(declare-fun alivey9_2 () Bool)
(declare-fun aliveoutlier10 () Bool)
(declare-fun outlier10 () Int)
(declare-fun alivey10_1 () Bool)
(declare-fun alivey10_2 () Bool)
(declare-fun aliveoutlier11 () Bool)
(declare-fun outlier11 () Int)
(declare-fun alivey11_1 () Bool)
(declare-fun alivey11_2 () Bool)
(declare-fun aliveoutlier12 () Bool)
(declare-fun outlier12 () Int)
(declare-fun alivey12_1 () Bool)
(declare-fun alivey12_2 () Bool)
(declare-fun aliveoutlier13 () Bool)
(declare-fun outlier13 () Int)
(declare-fun alivey13_1 () Bool)
(declare-fun alivey13_2 () Bool)
(declare-fun aliveoutlier14 () Bool)
(declare-fun outlier14 () Int)
(declare-fun alivey14_1 () Bool)
(declare-fun alivey14_2 () Bool)
(declare-fun aliveoutlier15 () Bool)
(declare-fun outlier15 () Int)
(declare-fun alivey15_1 () Bool)
(declare-fun alivey15_2 () Bool)
(declare-fun aliveoutlier16 () Bool)
(declare-fun outlier16 () Int)
(declare-fun alivey16_1 () Bool)
(declare-fun alivey16_2 () Bool)
(declare-fun aliveoutlier17 () Bool)
(declare-fun outlier17 () Int)
(declare-fun alivey17_1 () Bool)
(declare-fun alivey17_2 () Bool)
(declare-fun aliveoutlier18 () Bool)
(declare-fun outlier18 () Int)
(declare-fun alivey18_1 () Bool)
(declare-fun alivey18_2 () Bool)
(declare-fun aliveoutlier19 () Bool)
(declare-fun outlier19 () Int)
(declare-fun alivey19_1 () Bool)
(declare-fun alivey19_2 () Bool)
(declare-fun aliveoutlier20 () Bool)
(declare-fun outlier20 () Int)
(declare-fun alivey20_1 () Bool)
(declare-fun alivey20_2 () Bool)
(declare-fun aliveoutlier21 () Bool)
(declare-fun outlier21 () Int)
(declare-fun alivey21_1 () Bool)
(declare-fun alivey21_2 () Bool)
(declare-fun aliveoutlier22 () Bool)
(declare-fun outlier22 () Int)
(declare-fun alivey22_1 () Bool)
(declare-fun alivey22_2 () Bool)
(declare-fun aliveoutlier23 () Bool)
(declare-fun outlier23 () Int)
(declare-fun alivey23_1 () Bool)
(declare-fun alivey23_2 () Bool)
(declare-fun aliveoutlier24 () Bool)
(declare-fun outlier24 () Int)
(declare-fun alivey24_1 () Bool)
(declare-fun alivey24_2 () Bool)
(declare-fun aliveoutlier25 () Bool)
(declare-fun outlier25 () Int)
(declare-fun alivey25_1 () Bool)
(declare-fun alivey25_2 () Bool)
(declare-fun aliveoutlier26 () Bool)
(declare-fun outlier26 () Int)
(declare-fun alivey26_1 () Bool)
(declare-fun alivey26_2 () Bool)
(declare-fun aliveoutlier27 () Bool)
(declare-fun outlier27 () Int)
(declare-fun alivey27_1 () Bool)
(declare-fun alivey27_2 () Bool)
(declare-fun aliveoutlier28 () Bool)
(declare-fun outlier28 () Int)
(declare-fun alivey28_1 () Bool)
(declare-fun alivey28_2 () Bool)
(declare-fun aliveoutlier29 () Bool)
(declare-fun outlier29 () Int)
(declare-fun alivey29_1 () Bool)
(declare-fun alivey29_2 () Bool)
(declare-fun aliveoutlier30 () Bool)
(declare-fun outlier30 () Int)
(declare-fun alivey30_1 () Bool)
(declare-fun alivey30_2 () Bool)
(declare-fun aliveoutlier31 () Bool)
(declare-fun outlier31 () Int)
(declare-fun alivey31_1 () Bool)
(declare-fun alivey31_2 () Bool)
(declare-fun aliveoutlier32 () Bool)
(declare-fun outlier32 () Int)
(declare-fun alivey32_1 () Bool)
(declare-fun alivey32_2 () Bool)
(declare-fun aliveoutlier33 () Bool)
(declare-fun outlier33 () Int)
(declare-fun alivey33_1 () Bool)
(declare-fun alivey33_2 () Bool)
(declare-fun aliveoutlier34 () Bool)
(declare-fun outlier34 () Int)
(declare-fun alivey34_1 () Bool)
(declare-fun alivey34_2 () Bool)
(declare-fun aliveoutlier35 () Bool)
(declare-fun outlier35 () Int)
(declare-fun alivey35_1 () Bool)
(declare-fun alivey35_2 () Bool)
(declare-fun aliveoutlier36 () Bool)
(declare-fun outlier36 () Int)
(declare-fun alivey36_1 () Bool)
(declare-fun alivey36_2 () Bool)
(declare-fun aliveoutlier37 () Bool)
(declare-fun outlier37 () Int)
(declare-fun alivey37_1 () Bool)
(declare-fun alivey37_2 () Bool)
(declare-fun aliveoutlier38 () Bool)
(declare-fun outlier38 () Int)
(declare-fun alivey38_1 () Bool)
(declare-fun alivey38_2 () Bool)
(declare-fun aliveoutlier39 () Bool)
(declare-fun outlier39 () Int)
(declare-fun alivey39_1 () Bool)
(declare-fun alivey39_2 () Bool)
(declare-fun aliveoutlier40 () Bool)
(declare-fun outlier40 () Int)
(declare-fun alivey40_1 () Bool)
(declare-fun alivey40_2 () Bool)
(declare-fun aliveoutlier41 () Bool)
(declare-fun outlier41 () Int)
(declare-fun alivey41_1 () Bool)
(declare-fun alivey41_2 () Bool)
(declare-fun aliveoutlier42 () Bool)
(declare-fun outlier42 () Int)
(declare-fun alivey42_1 () Bool)
(declare-fun alivey42_2 () Bool)
(declare-fun aliveoutlier43 () Bool)
(declare-fun outlier43 () Int)
(declare-fun alivey43_1 () Bool)
(declare-fun alivey43_2 () Bool)
(declare-fun aliveoutlier44 () Bool)
(declare-fun outlier44 () Int)
(declare-fun alivey44_1 () Bool)
(declare-fun alivey44_2 () Bool)
(declare-fun aliveoutlier45 () Bool)
(declare-fun outlier45 () Int)
(declare-fun alivey45_1 () Bool)
(declare-fun alivey45_2 () Bool)
(declare-fun aliveoutlier46 () Bool)
(declare-fun outlier46 () Int)
(declare-fun alivey46_1 () Bool)
(declare-fun alivey46_2 () Bool)
(declare-fun aliveoutlier47 () Bool)
(declare-fun outlier47 () Int)
(declare-fun alivey47_1 () Bool)
(declare-fun alivey47_2 () Bool)
(declare-fun aliveoutlier48 () Bool)
(declare-fun outlier48 () Int)
(declare-fun alivey48_1 () Bool)
(declare-fun alivey48_2 () Bool)
(declare-fun aliveoutlier49 () Bool)
(declare-fun outlier49 () Int)
(declare-fun alivey49_1 () Bool)
(declare-fun alivey49_2 () Bool)
(declare-fun aliveoutlier50 () Bool)
(declare-fun outlier50 () Int)
(declare-fun alivey50_1 () Bool)
(declare-fun alivey50_2 () Bool)
(declare-fun aliveoutlier51 () Bool)
(declare-fun outlier51 () Int)
(declare-fun alivey51_1 () Bool)
(declare-fun alivey51_2 () Bool)
(declare-fun aliveoutlier52 () Bool)
(declare-fun outlier52 () Int)
(declare-fun alivey52_1 () Bool)
(declare-fun alivey52_2 () Bool)
(declare-fun aliveoutlier53 () Bool)
(declare-fun outlier53 () Int)
(declare-fun alivey53_1 () Bool)
(declare-fun alivey53_2 () Bool)
(declare-fun aliveoutlier54 () Bool)
(declare-fun outlier54 () Int)
(declare-fun alivey54_1 () Bool)
(declare-fun alivey54_2 () Bool)
(declare-fun aliveoutlier55 () Bool)
(declare-fun outlier55 () Int)
(declare-fun alivey55_1 () Bool)
(declare-fun alivey55_2 () Bool)
(declare-fun aliveoutlier56 () Bool)
(declare-fun outlier56 () Int)
(declare-fun alivey56_1 () Bool)
(declare-fun alivey56_2 () Bool)
(declare-fun aliveoutlier57 () Bool)
(declare-fun outlier57 () Int)
(declare-fun alivey57_1 () Bool)
(declare-fun alivey57_2 () Bool)
(declare-fun aliveoutlier58 () Bool)
(declare-fun outlier58 () Int)
(declare-fun alivey58_1 () Bool)
(declare-fun alivey58_2 () Bool)
(declare-fun aliveoutlier59 () Bool)
(declare-fun outlier59 () Int)
(declare-fun alivey59_1 () Bool)
(declare-fun alivey59_2 () Bool)
(declare-fun aliveoutlier60 () Bool)
(declare-fun outlier60 () Int)
(declare-fun alivey60_1 () Bool)
(declare-fun alivey60_2 () Bool)
(declare-fun aliveoutlier61 () Bool)
(declare-fun outlier61 () Int)
(declare-fun alivey61_1 () Bool)
(declare-fun alivey61_2 () Bool)
(declare-fun aliveoutlier62 () Bool)
(declare-fun outlier62 () Int)
(declare-fun alivey62_1 () Bool)
(declare-fun alivey62_2 () Bool)
(declare-fun aliveoutlier63 () Bool)
(declare-fun outlier63 () Int)
(declare-fun alivey63_1 () Bool)
(declare-fun alivey63_2 () Bool)
(declare-fun aliveoutlier64 () Bool)
(declare-fun outlier64 () Int)
(declare-fun alivey64_1 () Bool)
(declare-fun alivey64_2 () Bool)
(declare-fun aliveoutlier65 () Bool)
(declare-fun outlier65 () Int)
(declare-fun alivey65_1 () Bool)
(declare-fun alivey65_2 () Bool)
(declare-fun aliveoutlier66 () Bool)
(declare-fun outlier66 () Int)
(declare-fun alivey66_1 () Bool)
(declare-fun alivey66_2 () Bool)
(declare-fun aliveoutlier67 () Bool)
(declare-fun outlier67 () Int)
(declare-fun alivey67_1 () Bool)
(declare-fun alivey67_2 () Bool)
(declare-fun aliveoutlier68 () Bool)
(declare-fun outlier68 () Int)
(declare-fun alivey68_1 () Bool)
(declare-fun alivey68_2 () Bool)
(declare-fun aliveoutlier69 () Bool)
(declare-fun outlier69 () Int)
(declare-fun alivey69_1 () Bool)
(declare-fun alivey69_2 () Bool)
(declare-fun aliveoutlier70 () Bool)
(declare-fun outlier70 () Int)
(declare-fun alivey70_1 () Bool)
(declare-fun alivey70_2 () Bool)
(declare-fun aliveoutlier71 () Bool)
(declare-fun outlier71 () Int)
(declare-fun alivey71_1 () Bool)
(declare-fun alivey71_2 () Bool)
(declare-fun aliveoutlier72 () Bool)
(declare-fun outlier72 () Int)
(declare-fun alivey72_1 () Bool)
(declare-fun alivey72_2 () Bool)
(declare-fun aliveoutlier73 () Bool)
(declare-fun outlier73 () Int)
(declare-fun alivey73_1 () Bool)
(declare-fun alivey73_2 () Bool)
(declare-fun aliveoutlier74 () Bool)
(declare-fun outlier74 () Int)
(declare-fun alivey74_1 () Bool)
(declare-fun alivey74_2 () Bool)
(declare-fun aliveoutlier75 () Bool)
(declare-fun outlier75 () Int)
(declare-fun alivey75_1 () Bool)
(declare-fun alivey75_2 () Bool)
(declare-fun aliveoutlier76 () Bool)
(declare-fun outlier76 () Int)
(declare-fun alivey76_1 () Bool)
(declare-fun alivey76_2 () Bool)
(declare-fun aliveoutlier77 () Bool)
(declare-fun outlier77 () Int)
(declare-fun alivey77_1 () Bool)
(declare-fun alivey77_2 () Bool)
(declare-fun aliveoutlier78 () Bool)
(declare-fun outlier78 () Int)
(declare-fun alivey78_1 () Bool)
(declare-fun alivey78_2 () Bool)
(declare-fun aliveoutlier79 () Bool)
(declare-fun outlier79 () Int)
(declare-fun alivey79_1 () Bool)
(declare-fun alivey79_2 () Bool)
(declare-fun aliveoutlier80 () Bool)
(declare-fun outlier80 () Int)
(declare-fun alivey80_1 () Bool)
(declare-fun alivey80_2 () Bool)
(declare-fun aliveoutlier81 () Bool)
(declare-fun outlier81 () Int)
(declare-fun alivey81_1 () Bool)
(declare-fun alivey81_2 () Bool)
(declare-fun aliveoutlier82 () Bool)
(declare-fun outlier82 () Int)
(declare-fun alivey82_1 () Bool)
(declare-fun alivey82_2 () Bool)
(declare-fun aliveoutlier83 () Bool)
(declare-fun outlier83 () Int)
(declare-fun alivey83_1 () Bool)
(declare-fun alivey83_2 () Bool)
(declare-fun aliveoutlier84 () Bool)
(declare-fun outlier84 () Int)
(declare-fun alivey84_1 () Bool)
(declare-fun alivey84_2 () Bool)
(declare-fun aliveoutlier85 () Bool)
(declare-fun outlier85 () Int)
(declare-fun alivey85_1 () Bool)
(declare-fun alivey85_2 () Bool)
(declare-fun aliveoutlier86 () Bool)
(declare-fun outlier86 () Int)
(declare-fun alivey86_1 () Bool)
(declare-fun alivey86_2 () Bool)
(declare-fun aliveoutlier87 () Bool)
(declare-fun outlier87 () Int)
(declare-fun alivey87_1 () Bool)
(declare-fun alivey87_2 () Bool)
(declare-fun aliveoutlier88 () Bool)
(declare-fun outlier88 () Int)
(declare-fun alivey88_1 () Bool)
(declare-fun alivey88_2 () Bool)
(declare-fun aliveoutlier89 () Bool)
(declare-fun outlier89 () Int)
(declare-fun alivey89_1 () Bool)
(declare-fun alivey89_2 () Bool)
(declare-fun aliveoutlier90 () Bool)
(declare-fun outlier90 () Int)
(declare-fun alivey90_1 () Bool)
(declare-fun alivey90_2 () Bool)
(declare-fun aliveoutlier91 () Bool)
(declare-fun outlier91 () Int)
(declare-fun alivey91_1 () Bool)
(declare-fun alivey91_2 () Bool)
(declare-fun aliveoutlier92 () Bool)
(declare-fun outlier92 () Int)
(declare-fun alivey92_1 () Bool)
(declare-fun alivey92_2 () Bool)
(declare-fun aliveoutlier93 () Bool)
(declare-fun outlier93 () Int)
(declare-fun alivey93_1 () Bool)
(declare-fun alivey93_2 () Bool)
(declare-fun aliveoutlier94 () Bool)
(declare-fun outlier94 () Int)
(declare-fun alivey94_1 () Bool)
(declare-fun alivey94_2 () Bool)
(declare-fun aliveoutlier95 () Bool)
(declare-fun outlier95 () Int)
(declare-fun alivey95_1 () Bool)
(declare-fun alivey95_2 () Bool)
(declare-fun aliveoutlier96 () Bool)
(declare-fun outlier96 () Int)
(declare-fun alivey96_1 () Bool)
(declare-fun alivey96_2 () Bool)
(declare-fun aliveoutlier97 () Bool)
(declare-fun outlier97 () Int)
(declare-fun alivey97_1 () Bool)
(declare-fun alivey97_2 () Bool)
(declare-fun aliveoutlier98 () Bool)
(declare-fun outlier98 () Int)
(declare-fun alivey98_1 () Bool)
(declare-fun alivey98_2 () Bool)
(declare-fun aliveoutlier99 () Bool)
(declare-fun outlier99 () Int)
(declare-fun alivey99_1 () Bool)
(declare-fun alivey99_2 () Bool)
(declare-fun aliveoutlier100 () Bool)
(declare-fun outlier100 () Int)
(declare-fun alivey100_1 () Bool)
(declare-fun alivey100_2 () Bool)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun x10 () Real)
(declare-fun x11 () Real)
(declare-fun x12 () Real)
(declare-fun x13 () Real)
(declare-fun x14 () Real)
(declare-fun x15 () Real)
(declare-fun x16 () Real)
(declare-fun x17 () Real)
(declare-fun x18 () Real)
(declare-fun x19 () Real)
(declare-fun x20 () Real)
(declare-fun x21 () Real)
(declare-fun x22 () Real)
(declare-fun x23 () Real)
(declare-fun x24 () Real)
(declare-fun x25 () Real)
(declare-fun x26 () Real)
(declare-fun x27 () Real)
(declare-fun x28 () Real)
(declare-fun x29 () Real)
(declare-fun x30 () Real)
(declare-fun x31 () Real)
(declare-fun x32 () Real)
(declare-fun x33 () Real)
(declare-fun x34 () Real)
(declare-fun x35 () Real)
(declare-fun x36 () Real)
(declare-fun x37 () Real)
(declare-fun x38 () Real)
(declare-fun x39 () Real)
(declare-fun x40 () Real)
(declare-fun x41 () Real)
(declare-fun x42 () Real)
(declare-fun x43 () Real)
(declare-fun x44 () Real)
(declare-fun x45 () Real)
(declare-fun x46 () Real)
(declare-fun x47 () Real)
(declare-fun x48 () Real)
(declare-fun x49 () Real)
(declare-fun x50 () Real)
(declare-fun x51 () Real)
(declare-fun x52 () Real)
(declare-fun x53 () Real)
(declare-fun x54 () Real)
(declare-fun x55 () Real)
(declare-fun x56 () Real)
(declare-fun x57 () Real)
(declare-fun x58 () Real)
(declare-fun x59 () Real)
(declare-fun x60 () Real)
(declare-fun x61 () Real)
(declare-fun x62 () Real)
(declare-fun x63 () Real)
(declare-fun x64 () Real)
(declare-fun x65 () Real)
(declare-fun x66 () Real)
(declare-fun x67 () Real)
(declare-fun x68 () Real)
(declare-fun x69 () Real)
(declare-fun x70 () Real)
(declare-fun x71 () Real)
(declare-fun x72 () Real)
(declare-fun x73 () Real)
(declare-fun x74 () Real)
(declare-fun x75 () Real)
(declare-fun x76 () Real)
(declare-fun x77 () Real)
(declare-fun x78 () Real)
(declare-fun x79 () Real)
(declare-fun x80 () Real)
(declare-fun x81 () Real)
(declare-fun x82 () Real)
(declare-fun x83 () Real)
(declare-fun x84 () Real)
(declare-fun x85 () Real)
(declare-fun x86 () Real)
(declare-fun x87 () Real)
(declare-fun x88 () Real)
(declare-fun x89 () Real)
(declare-fun x90 () Real)
(declare-fun x91 () Real)
(declare-fun x92 () Real)
(declare-fun x93 () Real)
(declare-fun x94 () Real)
(declare-fun x95 () Real)
(declare-fun x96 () Real)
(declare-fun x97 () Real)
(declare-fun x98 () Real)
(declare-fun x99 () Real)
(declare-fun x100 () Real)
(declare-fun slope () Real)
(declare-fun intercept () Real)
(declare-fun mean1 () Real)
(declare-fun mean2 () Real)
(declare-fun mean3 () Real)
(declare-fun mean4 () Real)
(declare-fun mean5 () Real)
(declare-fun mean6 () Real)
(declare-fun mean7 () Real)
(declare-fun mean8 () Real)
(declare-fun mean9 () Real)
(declare-fun mean10 () Real)
(declare-fun mean11 () Real)
(declare-fun mean12 () Real)
(declare-fun mean13 () Real)
(declare-fun mean14 () Real)
(declare-fun mean15 () Real)
(declare-fun mean16 () Real)
(declare-fun mean17 () Real)
(declare-fun mean18 () Real)
(declare-fun mean19 () Real)
(declare-fun mean20 () Real)
(declare-fun mean21 () Real)
(declare-fun mean22 () Real)
(declare-fun mean23 () Real)
(declare-fun mean24 () Real)
(declare-fun mean25 () Real)
(declare-fun mean26 () Real)
(declare-fun mean27 () Real)
(declare-fun mean28 () Real)
(declare-fun mean29 () Real)
(declare-fun mean30 () Real)
(declare-fun mean31 () Real)
(declare-fun mean32 () Real)
(declare-fun mean33 () Real)
(declare-fun mean34 () Real)
(declare-fun mean35 () Real)
(declare-fun mean36 () Real)
(declare-fun mean37 () Real)
(declare-fun mean38 () Real)
(declare-fun mean39 () Real)
(declare-fun mean40 () Real)
(declare-fun mean41 () Real)
(declare-fun mean42 () Real)
(declare-fun mean43 () Real)
(declare-fun mean44 () Real)
(declare-fun mean45 () Real)
(declare-fun mean46 () Real)
(declare-fun mean47 () Real)
(declare-fun mean48 () Real)
(declare-fun mean49 () Real)
(declare-fun mean50 () Real)
(declare-fun mean51 () Real)
(declare-fun mean52 () Real)
(declare-fun mean53 () Real)
(declare-fun mean54 () Real)
(declare-fun mean55 () Real)
(declare-fun mean56 () Real)
(declare-fun mean57 () Real)
(declare-fun mean58 () Real)
(declare-fun mean59 () Real)
(declare-fun mean60 () Real)
(declare-fun mean61 () Real)
(declare-fun mean62 () Real)
(declare-fun mean63 () Real)
(declare-fun mean64 () Real)
(declare-fun mean65 () Real)
(declare-fun mean66 () Real)
(declare-fun mean67 () Real)
(declare-fun mean68 () Real)
(declare-fun mean69 () Real)
(declare-fun mean70 () Real)
(declare-fun mean71 () Real)
(declare-fun mean72 () Real)
(declare-fun mean73 () Real)
(declare-fun mean74 () Real)
(declare-fun mean75 () Real)
(declare-fun mean76 () Real)
(declare-fun mean77 () Real)
(declare-fun mean78 () Real)
(declare-fun mean79 () Real)
(declare-fun mean80 () Real)
(declare-fun mean81 () Real)
(declare-fun mean82 () Real)
(declare-fun mean83 () Real)
(declare-fun mean84 () Real)
(declare-fun mean85 () Real)
(declare-fun mean86 () Real)
(declare-fun mean87 () Real)
(declare-fun mean88 () Real)
(declare-fun mean89 () Real)
(declare-fun mean90 () Real)
(declare-fun mean91 () Real)
(declare-fun mean92 () Real)
(declare-fun mean93 () Real)
(declare-fun mean94 () Real)
(declare-fun mean95 () Real)
(declare-fun mean96 () Real)
(declare-fun mean97 () Real)
(declare-fun mean98 () Real)
(declare-fun mean99 () Real)
(declare-fun mean100 () Real)
(declare-fun noise_div () Real)
(declare-fun proboutlier_div () Real)
(declare-fun noise () Real)
(declare-fun y36 () Real)
(declare-fun y43 () Real)
(declare-fun y51 () Real)
(declare-fun y33 () Real)
(declare-fun y34 () Real)
(declare-fun y58 () Real)
(declare-fun y22 () Real)
(declare-fun y75 () Real)
(declare-fun y63 () Real)
(declare-fun y83 () Real)
(declare-fun y18 () Real)
(declare-fun y70 () Real)
(declare-fun y91 () Real)
(declare-fun y15 () Real)
(declare-fun y29 () Real)
(declare-fun y49 () Real)
(declare-fun y60 () Real)
(declare-fun y37 () Real)
(declare-fun y48 () Real)
(declare-fun y90 () Real)
(declare-fun y95 () Real)
(declare-fun y50 () Real)
(declare-fun y86 () Real)
(declare-fun y88 () Real)
(declare-fun y6 () Real)
(declare-fun y65 () Real)
(declare-fun y9 () Real)
(declare-fun y59 () Real)
(declare-fun y64 () Real)
(declare-fun y89 () Real)
(declare-fun y100 () Real)
(declare-fun y87 () Real)
(declare-fun y76 () Real)
(declare-fun y2 () Real)
(declare-fun y17 () Real)
(declare-fun y99 () Real)
(declare-fun y32 () Real)
(declare-fun y41 () Real)
(declare-fun y79 () Real)
(declare-fun y97 () Real)
(declare-fun y12 () Real)
(declare-fun y11 () Real)
(declare-fun y40 () Real)
(declare-fun y16 () Real)
(declare-fun y73 () Real)
(declare-fun y26 () Real)
(declare-fun y69 () Real)
(declare-fun y45 () Real)
(declare-fun y19 () Real)
(declare-fun y81 () Real)
(declare-fun y67 () Real)
(declare-fun y93 () Real)
(declare-fun y3 () Real)
(declare-fun y55 () Real)
(declare-fun y38 () Real)
(declare-fun y30 () Real)
(declare-fun y28 () Real)
(declare-fun y31 () Real)
(declare-fun y94 () Real)
(declare-fun y98 () Real)
(declare-fun y35 () Real)
(declare-fun y8 () Real)
(declare-fun y25 () Real)
(declare-fun y24 () Real)
(declare-fun y84 () Real)
(declare-fun y96 () Real)
(declare-fun y23 () Real)
(declare-fun y7 () Real)
(declare-fun y27 () Real)
(declare-fun y77 () Real)
(declare-fun y80 () Real)
(declare-fun y44 () Real)
(declare-fun y54 () Real)
(declare-fun y68 () Real)
(declare-fun y10 () Real)
(declare-fun y21 () Real)
(declare-fun y57 () Real)
(declare-fun y1 () Real)
(declare-fun y46 () Real)
(declare-fun y61 () Real)
(declare-fun y4 () Real)
(declare-fun y5 () Real)
(declare-fun y39 () Real)
(declare-fun y74 () Real)
(declare-fun y66 () Real)
(declare-fun y71 () Real)
(declare-fun y53 () Real)
(declare-fun y82 () Real)
(declare-fun y47 () Real)
(declare-fun y72 () Real)
(declare-fun y78 () Real)
(declare-fun y56 () Real)
(declare-fun y92 () Real)
(declare-fun y14 () Real)
(declare-fun y62 () Real)
(declare-fun y52 () Real)
(declare-fun y85 () Real)
(declare-fun y42 () Real)
(declare-fun y20 () Real)
(declare-fun y13 () Real)
(declare-fun preference1 () Int)
(declare-fun y1_1 () Real)
(declare-fun y1_2 () Real)
(declare-fun preference2 () Int)
(declare-fun y2_1 () Real)
(declare-fun y2_2 () Real)
(declare-fun preference3 () Int)
(declare-fun y3_1 () Real)
(declare-fun y3_2 () Real)
(declare-fun preference4 () Int)
(declare-fun y4_1 () Real)
(declare-fun y4_2 () Real)
(declare-fun preference5 () Int)
(declare-fun y5_1 () Real)
(declare-fun y5_2 () Real)
(declare-fun preference6 () Int)
(declare-fun y6_1 () Real)
(declare-fun y6_2 () Real)
(declare-fun preference7 () Int)
(declare-fun y7_1 () Real)
(declare-fun y7_2 () Real)
(declare-fun preference8 () Int)
(declare-fun y8_1 () Real)
(declare-fun y8_2 () Real)
(declare-fun preference9 () Int)
(declare-fun y9_1 () Real)
(declare-fun y9_2 () Real)
(declare-fun preference10 () Int)
(declare-fun y10_1 () Real)
(declare-fun y10_2 () Real)
(declare-fun preference11 () Int)
(declare-fun y11_1 () Real)
(declare-fun y11_2 () Real)
(declare-fun preference12 () Int)
(declare-fun y12_1 () Real)
(declare-fun y12_2 () Real)
(declare-fun preference13 () Int)
(declare-fun y13_1 () Real)
(declare-fun y13_2 () Real)
(declare-fun preference14 () Int)
(declare-fun y14_1 () Real)
(declare-fun y14_2 () Real)
(declare-fun preference15 () Int)
(declare-fun y15_1 () Real)
(declare-fun y15_2 () Real)
(declare-fun preference16 () Int)
(declare-fun y16_1 () Real)
(declare-fun y16_2 () Real)
(declare-fun preference17 () Int)
(declare-fun y17_1 () Real)
(declare-fun y17_2 () Real)
(declare-fun preference18 () Int)
(declare-fun y18_1 () Real)
(declare-fun y18_2 () Real)
(declare-fun preference19 () Int)
(declare-fun y19_1 () Real)
(declare-fun y19_2 () Real)
(declare-fun preference20 () Int)
(declare-fun y20_1 () Real)
(declare-fun y20_2 () Real)
(declare-fun preference21 () Int)
(declare-fun y21_1 () Real)
(declare-fun y21_2 () Real)
(declare-fun preference22 () Int)
(declare-fun y22_1 () Real)
(declare-fun y22_2 () Real)
(declare-fun preference23 () Int)
(declare-fun y23_1 () Real)
(declare-fun y23_2 () Real)
(declare-fun preference24 () Int)
(declare-fun y24_1 () Real)
(declare-fun y24_2 () Real)
(declare-fun preference25 () Int)
(declare-fun y25_1 () Real)
(declare-fun y25_2 () Real)
(declare-fun preference26 () Int)
(declare-fun y26_1 () Real)
(declare-fun y26_2 () Real)
(declare-fun preference27 () Int)
(declare-fun y27_1 () Real)
(declare-fun y27_2 () Real)
(declare-fun preference28 () Int)
(declare-fun y28_1 () Real)
(declare-fun y28_2 () Real)
(declare-fun preference29 () Int)
(declare-fun y29_1 () Real)
(declare-fun y29_2 () Real)
(declare-fun preference30 () Int)
(declare-fun y30_1 () Real)
(declare-fun y30_2 () Real)
(declare-fun preference31 () Int)
(declare-fun y31_1 () Real)
(declare-fun y31_2 () Real)
(declare-fun preference32 () Int)
(declare-fun y32_1 () Real)
(declare-fun y32_2 () Real)
(declare-fun preference33 () Int)
(declare-fun y33_1 () Real)
(declare-fun y33_2 () Real)
(declare-fun preference34 () Int)
(declare-fun y34_1 () Real)
(declare-fun y34_2 () Real)
(declare-fun preference35 () Int)
(declare-fun y35_1 () Real)
(declare-fun y35_2 () Real)
(declare-fun preference36 () Int)
(declare-fun y36_1 () Real)
(declare-fun y36_2 () Real)
(declare-fun preference37 () Int)
(declare-fun y37_1 () Real)
(declare-fun y37_2 () Real)
(declare-fun preference38 () Int)
(declare-fun y38_1 () Real)
(declare-fun y38_2 () Real)
(declare-fun preference39 () Int)
(declare-fun y39_1 () Real)
(declare-fun y39_2 () Real)
(declare-fun preference40 () Int)
(declare-fun y40_1 () Real)
(declare-fun y40_2 () Real)
(declare-fun preference41 () Int)
(declare-fun y41_1 () Real)
(declare-fun y41_2 () Real)
(declare-fun preference42 () Int)
(declare-fun y42_1 () Real)
(declare-fun y42_2 () Real)
(declare-fun preference43 () Int)
(declare-fun y43_1 () Real)
(declare-fun y43_2 () Real)
(declare-fun preference44 () Int)
(declare-fun y44_1 () Real)
(declare-fun y44_2 () Real)
(declare-fun preference45 () Int)
(declare-fun y45_1 () Real)
(declare-fun y45_2 () Real)
(declare-fun preference46 () Int)
(declare-fun y46_1 () Real)
(declare-fun y46_2 () Real)
(declare-fun preference47 () Int)
(declare-fun y47_1 () Real)
(declare-fun y47_2 () Real)
(declare-fun preference48 () Int)
(declare-fun y48_1 () Real)
(declare-fun y48_2 () Real)
(declare-fun preference49 () Int)
(declare-fun y49_1 () Real)
(declare-fun y49_2 () Real)
(declare-fun preference50 () Int)
(declare-fun y50_1 () Real)
(declare-fun y50_2 () Real)
(declare-fun preference51 () Int)
(declare-fun y51_1 () Real)
(declare-fun y51_2 () Real)
(declare-fun preference52 () Int)
(declare-fun y52_1 () Real)
(declare-fun y52_2 () Real)
(declare-fun preference53 () Int)
(declare-fun y53_1 () Real)
(declare-fun y53_2 () Real)
(declare-fun preference54 () Int)
(declare-fun y54_1 () Real)
(declare-fun y54_2 () Real)
(declare-fun preference55 () Int)
(declare-fun y55_1 () Real)
(declare-fun y55_2 () Real)
(declare-fun preference56 () Int)
(declare-fun y56_1 () Real)
(declare-fun y56_2 () Real)
(declare-fun preference57 () Int)
(declare-fun y57_1 () Real)
(declare-fun y57_2 () Real)
(declare-fun preference58 () Int)
(declare-fun y58_1 () Real)
(declare-fun y58_2 () Real)
(declare-fun preference59 () Int)
(declare-fun y59_1 () Real)
(declare-fun y59_2 () Real)
(declare-fun preference60 () Int)
(declare-fun y60_1 () Real)
(declare-fun y60_2 () Real)
(declare-fun preference61 () Int)
(declare-fun y61_1 () Real)
(declare-fun y61_2 () Real)
(declare-fun preference62 () Int)
(declare-fun y62_1 () Real)
(declare-fun y62_2 () Real)
(declare-fun preference63 () Int)
(declare-fun y63_1 () Real)
(declare-fun y63_2 () Real)
(declare-fun preference64 () Int)
(declare-fun y64_1 () Real)
(declare-fun y64_2 () Real)
(declare-fun preference65 () Int)
(declare-fun y65_1 () Real)
(declare-fun y65_2 () Real)
(declare-fun preference66 () Int)
(declare-fun y66_1 () Real)
(declare-fun y66_2 () Real)
(declare-fun preference67 () Int)
(declare-fun y67_1 () Real)
(declare-fun y67_2 () Real)
(declare-fun preference68 () Int)
(declare-fun y68_1 () Real)
(declare-fun y68_2 () Real)
(declare-fun preference69 () Int)
(declare-fun y69_1 () Real)
(declare-fun y69_2 () Real)
(declare-fun preference70 () Int)
(declare-fun y70_1 () Real)
(declare-fun y70_2 () Real)
(declare-fun preference71 () Int)
(declare-fun y71_1 () Real)
(declare-fun y71_2 () Real)
(declare-fun preference72 () Int)
(declare-fun y72_1 () Real)
(declare-fun y72_2 () Real)
(declare-fun preference73 () Int)
(declare-fun y73_1 () Real)
(declare-fun y73_2 () Real)
(declare-fun preference74 () Int)
(declare-fun y74_1 () Real)
(declare-fun y74_2 () Real)
(declare-fun preference75 () Int)
(declare-fun y75_1 () Real)
(declare-fun y75_2 () Real)
(declare-fun preference76 () Int)
(declare-fun y76_1 () Real)
(declare-fun y76_2 () Real)
(declare-fun preference77 () Int)
(declare-fun y77_1 () Real)
(declare-fun y77_2 () Real)
(declare-fun preference78 () Int)
(declare-fun y78_1 () Real)
(declare-fun y78_2 () Real)
(declare-fun preference79 () Int)
(declare-fun y79_1 () Real)
(declare-fun y79_2 () Real)
(declare-fun preference80 () Int)
(declare-fun y80_1 () Real)
(declare-fun y80_2 () Real)
(declare-fun preference81 () Int)
(declare-fun y81_1 () Real)
(declare-fun y81_2 () Real)
(declare-fun preference82 () Int)
(declare-fun y82_1 () Real)
(declare-fun y82_2 () Real)
(declare-fun preference83 () Int)
(declare-fun y83_1 () Real)
(declare-fun y83_2 () Real)
(declare-fun preference84 () Int)
(declare-fun y84_1 () Real)
(declare-fun y84_2 () Real)
(declare-fun preference85 () Int)
(declare-fun y85_1 () Real)
(declare-fun y85_2 () Real)
(declare-fun preference86 () Int)
(declare-fun y86_1 () Real)
(declare-fun y86_2 () Real)
(declare-fun preference87 () Int)
(declare-fun y87_1 () Real)
(declare-fun y87_2 () Real)
(declare-fun preference88 () Int)
(declare-fun y88_1 () Real)
(declare-fun y88_2 () Real)
(declare-fun preference89 () Int)
(declare-fun y89_1 () Real)
(declare-fun y89_2 () Real)
(declare-fun preference90 () Int)
(declare-fun y90_1 () Real)
(declare-fun y90_2 () Real)
(declare-fun preference91 () Int)
(declare-fun y91_1 () Real)
(declare-fun y91_2 () Real)
(declare-fun preference92 () Int)
(declare-fun y92_1 () Real)
(declare-fun y92_2 () Real)
(declare-fun preference93 () Int)
(declare-fun y93_1 () Real)
(declare-fun y93_2 () Real)
(declare-fun preference94 () Int)
(declare-fun y94_1 () Real)
(declare-fun y94_2 () Real)
(declare-fun preference95 () Int)
(declare-fun y95_1 () Real)
(declare-fun y95_2 () Real)
(declare-fun preference96 () Int)
(declare-fun y96_1 () Real)
(declare-fun y96_2 () Real)
(declare-fun preference97 () Int)
(declare-fun y97_1 () Real)
(declare-fun y97_2 () Real)
(declare-fun preference98 () Int)
(declare-fun y98_1 () Real)
(declare-fun y98_2 () Real)
(declare-fun preference99 () Int)
(declare-fun y99_1 () Real)
(declare-fun y99_2 () Real)
(declare-fun preference100 () Int)
(declare-fun y100_1 () Real)
(declare-fun y100_2 () Real)
(declare-fun proboutlier () Real)
(declare-fun likelihoodnoise () Real)
(declare-fun likelihoodintercept () Real)
(declare-fun likelihoodslope () Real)
(declare-fun likelihoodproboutlier () Real)
(declare-fun likelihoodoutlier1 () Real)
(declare-fun y1_1_endpoint3_1 () Real)
(declare-fun |piecewise for y1_1_endpoint3_1| () Bool)
(declare-fun y1_1_endpoint2_1 () Real)
(declare-fun |piecewise for y1_1_endpoint2_1| () Bool)
(declare-fun y1_1_endpoint1_1 () Real)
(declare-fun |piecewise for y1_1_endpoint1_1| () Bool)
(declare-fun y1_1_endpoint0_2 () Real)
(declare-fun |piecewise for y1_1_endpoint0_2| () Bool)
(declare-fun y1_1_endpoint1_2 () Real)
(declare-fun |piecewise for y1_1_endpoint1_2| () Bool)
(declare-fun y1_1_endpoint2_2 () Real)
(declare-fun |piecewise for y1_1_endpoint2_2| () Bool)
(declare-fun y1_1_endpoint3_2 () Real)
(declare-fun |piecewise for y1_1_endpoint3_2| () Bool)
(declare-fun likelihoody1_1 () Real)
(declare-fun likelihoody1_2 () Real)
(declare-fun likelihoodoutlier2 () Real)
(declare-fun y2_1_endpoint3_1 () Real)
(declare-fun |piecewise for y2_1_endpoint3_1| () Bool)
(declare-fun y2_1_endpoint2_1 () Real)
(declare-fun |piecewise for y2_1_endpoint2_1| () Bool)
(declare-fun y2_1_endpoint1_1 () Real)
(declare-fun |piecewise for y2_1_endpoint1_1| () Bool)
(declare-fun y2_1_endpoint0_2 () Real)
(declare-fun |piecewise for y2_1_endpoint0_2| () Bool)
(declare-fun y2_1_endpoint1_2 () Real)
(declare-fun |piecewise for y2_1_endpoint1_2| () Bool)
(declare-fun y2_1_endpoint2_2 () Real)
(declare-fun |piecewise for y2_1_endpoint2_2| () Bool)
(declare-fun y2_1_endpoint3_2 () Real)
(declare-fun |piecewise for y2_1_endpoint3_2| () Bool)
(declare-fun likelihoody2_1 () Real)
(declare-fun likelihoody2_2 () Real)
(declare-fun likelihoodoutlier3 () Real)
(declare-fun y3_1_endpoint3_1 () Real)
(declare-fun |piecewise for y3_1_endpoint3_1| () Bool)
(declare-fun y3_1_endpoint2_1 () Real)
(declare-fun |piecewise for y3_1_endpoint2_1| () Bool)
(declare-fun y3_1_endpoint1_1 () Real)
(declare-fun |piecewise for y3_1_endpoint1_1| () Bool)
(declare-fun y3_1_endpoint0_2 () Real)
(declare-fun |piecewise for y3_1_endpoint0_2| () Bool)
(declare-fun y3_1_endpoint1_2 () Real)
(declare-fun |piecewise for y3_1_endpoint1_2| () Bool)
(declare-fun y3_1_endpoint2_2 () Real)
(declare-fun |piecewise for y3_1_endpoint2_2| () Bool)
(declare-fun y3_1_endpoint3_2 () Real)
(declare-fun |piecewise for y3_1_endpoint3_2| () Bool)
(declare-fun likelihoody3_1 () Real)
(declare-fun likelihoody3_2 () Real)
(declare-fun likelihoodoutlier4 () Real)
(declare-fun y4_1_endpoint3_1 () Real)
(declare-fun |piecewise for y4_1_endpoint3_1| () Bool)
(declare-fun y4_1_endpoint2_1 () Real)
(declare-fun |piecewise for y4_1_endpoint2_1| () Bool)
(declare-fun y4_1_endpoint1_1 () Real)
(declare-fun |piecewise for y4_1_endpoint1_1| () Bool)
(declare-fun y4_1_endpoint0_2 () Real)
(declare-fun |piecewise for y4_1_endpoint0_2| () Bool)
(declare-fun y4_1_endpoint1_2 () Real)
(declare-fun |piecewise for y4_1_endpoint1_2| () Bool)
(declare-fun y4_1_endpoint2_2 () Real)
(declare-fun |piecewise for y4_1_endpoint2_2| () Bool)
(declare-fun y4_1_endpoint3_2 () Real)
(declare-fun |piecewise for y4_1_endpoint3_2| () Bool)
(declare-fun likelihoody4_1 () Real)
(declare-fun likelihoody4_2 () Real)
(declare-fun likelihoodoutlier5 () Real)
(declare-fun y5_1_endpoint3_1 () Real)
(declare-fun |piecewise for y5_1_endpoint3_1| () Bool)
(declare-fun y5_1_endpoint2_1 () Real)
(declare-fun |piecewise for y5_1_endpoint2_1| () Bool)
(declare-fun y5_1_endpoint1_1 () Real)
(declare-fun |piecewise for y5_1_endpoint1_1| () Bool)
(declare-fun y5_1_endpoint0_2 () Real)
(declare-fun |piecewise for y5_1_endpoint0_2| () Bool)
(declare-fun y5_1_endpoint1_2 () Real)
(declare-fun |piecewise for y5_1_endpoint1_2| () Bool)
(declare-fun y5_1_endpoint2_2 () Real)
(declare-fun |piecewise for y5_1_endpoint2_2| () Bool)
(declare-fun y5_1_endpoint3_2 () Real)
(declare-fun |piecewise for y5_1_endpoint3_2| () Bool)
(declare-fun likelihoody5_1 () Real)
(declare-fun likelihoody5_2 () Real)
(declare-fun likelihoodoutlier6 () Real)
(declare-fun y6_1_endpoint3_1 () Real)
(declare-fun |piecewise for y6_1_endpoint3_1| () Bool)
(declare-fun y6_1_endpoint2_1 () Real)
(declare-fun |piecewise for y6_1_endpoint2_1| () Bool)
(declare-fun y6_1_endpoint1_1 () Real)
(declare-fun |piecewise for y6_1_endpoint1_1| () Bool)
(declare-fun y6_1_endpoint0_2 () Real)
(declare-fun |piecewise for y6_1_endpoint0_2| () Bool)
(declare-fun y6_1_endpoint1_2 () Real)
(declare-fun |piecewise for y6_1_endpoint1_2| () Bool)
(declare-fun y6_1_endpoint2_2 () Real)
(declare-fun |piecewise for y6_1_endpoint2_2| () Bool)
(declare-fun y6_1_endpoint3_2 () Real)
(declare-fun |piecewise for y6_1_endpoint3_2| () Bool)
(declare-fun likelihoody6_1 () Real)
(declare-fun likelihoody6_2 () Real)
(declare-fun likelihoodoutlier7 () Real)
(declare-fun y7_1_endpoint3_1 () Real)
(declare-fun |piecewise for y7_1_endpoint3_1| () Bool)
(declare-fun y7_1_endpoint2_1 () Real)
(declare-fun |piecewise for y7_1_endpoint2_1| () Bool)
(declare-fun y7_1_endpoint1_1 () Real)
(declare-fun |piecewise for y7_1_endpoint1_1| () Bool)
(declare-fun y7_1_endpoint0_2 () Real)
(declare-fun |piecewise for y7_1_endpoint0_2| () Bool)
(declare-fun y7_1_endpoint1_2 () Real)
(declare-fun |piecewise for y7_1_endpoint1_2| () Bool)
(declare-fun y7_1_endpoint2_2 () Real)
(declare-fun |piecewise for y7_1_endpoint2_2| () Bool)
(declare-fun y7_1_endpoint3_2 () Real)
(declare-fun |piecewise for y7_1_endpoint3_2| () Bool)
(declare-fun likelihoody7_1 () Real)
(declare-fun likelihoody7_2 () Real)
(declare-fun likelihoodoutlier8 () Real)
(declare-fun y8_1_endpoint3_1 () Real)
(declare-fun |piecewise for y8_1_endpoint3_1| () Bool)
(declare-fun y8_1_endpoint2_1 () Real)
(declare-fun |piecewise for y8_1_endpoint2_1| () Bool)
(declare-fun y8_1_endpoint1_1 () Real)
(declare-fun |piecewise for y8_1_endpoint1_1| () Bool)
(declare-fun y8_1_endpoint0_2 () Real)
(declare-fun |piecewise for y8_1_endpoint0_2| () Bool)
(declare-fun y8_1_endpoint1_2 () Real)
(declare-fun |piecewise for y8_1_endpoint1_2| () Bool)
(declare-fun y8_1_endpoint2_2 () Real)
(declare-fun |piecewise for y8_1_endpoint2_2| () Bool)
(declare-fun y8_1_endpoint3_2 () Real)
(declare-fun |piecewise for y8_1_endpoint3_2| () Bool)
(declare-fun likelihoody8_1 () Real)
(declare-fun likelihoody8_2 () Real)
(declare-fun likelihoodoutlier9 () Real)
(declare-fun y9_1_endpoint3_1 () Real)
(declare-fun |piecewise for y9_1_endpoint3_1| () Bool)
(declare-fun y9_1_endpoint2_1 () Real)
(declare-fun |piecewise for y9_1_endpoint2_1| () Bool)
(declare-fun y9_1_endpoint1_1 () Real)
(declare-fun |piecewise for y9_1_endpoint1_1| () Bool)
(declare-fun y9_1_endpoint0_2 () Real)
(declare-fun |piecewise for y9_1_endpoint0_2| () Bool)
(declare-fun y9_1_endpoint1_2 () Real)
(declare-fun |piecewise for y9_1_endpoint1_2| () Bool)
(declare-fun y9_1_endpoint2_2 () Real)
(declare-fun |piecewise for y9_1_endpoint2_2| () Bool)
(declare-fun y9_1_endpoint3_2 () Real)
(declare-fun |piecewise for y9_1_endpoint3_2| () Bool)
(declare-fun likelihoody9_1 () Real)
(declare-fun likelihoody9_2 () Real)
(declare-fun likelihoodoutlier10 () Real)
(declare-fun y10_1_endpoint3_1 () Real)
(declare-fun |piecewise for y10_1_endpoint3_1| () Bool)
(declare-fun y10_1_endpoint2_1 () Real)
(declare-fun |piecewise for y10_1_endpoint2_1| () Bool)
(declare-fun y10_1_endpoint1_1 () Real)
(declare-fun |piecewise for y10_1_endpoint1_1| () Bool)
(declare-fun y10_1_endpoint0_2 () Real)
(declare-fun |piecewise for y10_1_endpoint0_2| () Bool)
(declare-fun y10_1_endpoint1_2 () Real)
(declare-fun |piecewise for y10_1_endpoint1_2| () Bool)
(declare-fun y10_1_endpoint2_2 () Real)
(declare-fun |piecewise for y10_1_endpoint2_2| () Bool)
(declare-fun y10_1_endpoint3_2 () Real)
(declare-fun |piecewise for y10_1_endpoint3_2| () Bool)
(declare-fun likelihoody10_1 () Real)
(declare-fun likelihoody10_2 () Real)
(declare-fun likelihoodoutlier11 () Real)
(declare-fun y11_1_endpoint3_1 () Real)
(declare-fun |piecewise for y11_1_endpoint3_1| () Bool)
(declare-fun y11_1_endpoint2_1 () Real)
(declare-fun |piecewise for y11_1_endpoint2_1| () Bool)
(declare-fun y11_1_endpoint1_1 () Real)
(declare-fun |piecewise for y11_1_endpoint1_1| () Bool)
(declare-fun y11_1_endpoint0_2 () Real)
(declare-fun |piecewise for y11_1_endpoint0_2| () Bool)
(declare-fun y11_1_endpoint1_2 () Real)
(declare-fun |piecewise for y11_1_endpoint1_2| () Bool)
(declare-fun y11_1_endpoint2_2 () Real)
(declare-fun |piecewise for y11_1_endpoint2_2| () Bool)
(declare-fun y11_1_endpoint3_2 () Real)
(declare-fun |piecewise for y11_1_endpoint3_2| () Bool)
(declare-fun likelihoody11_1 () Real)
(declare-fun likelihoody11_2 () Real)
(declare-fun likelihoodoutlier12 () Real)
(declare-fun y12_1_endpoint3_1 () Real)
(declare-fun |piecewise for y12_1_endpoint3_1| () Bool)
(declare-fun y12_1_endpoint2_1 () Real)
(declare-fun |piecewise for y12_1_endpoint2_1| () Bool)
(declare-fun y12_1_endpoint1_1 () Real)
(declare-fun |piecewise for y12_1_endpoint1_1| () Bool)
(declare-fun y12_1_endpoint0_2 () Real)
(declare-fun |piecewise for y12_1_endpoint0_2| () Bool)
(declare-fun y12_1_endpoint1_2 () Real)
(declare-fun |piecewise for y12_1_endpoint1_2| () Bool)
(declare-fun y12_1_endpoint2_2 () Real)
(declare-fun |piecewise for y12_1_endpoint2_2| () Bool)
(declare-fun y12_1_endpoint3_2 () Real)
(declare-fun |piecewise for y12_1_endpoint3_2| () Bool)
(declare-fun likelihoody12_1 () Real)
(declare-fun likelihoody12_2 () Real)
(declare-fun likelihoodoutlier13 () Real)
(declare-fun y13_1_endpoint3_1 () Real)
(declare-fun |piecewise for y13_1_endpoint3_1| () Bool)
(declare-fun y13_1_endpoint2_1 () Real)
(declare-fun |piecewise for y13_1_endpoint2_1| () Bool)
(declare-fun y13_1_endpoint1_1 () Real)
(declare-fun |piecewise for y13_1_endpoint1_1| () Bool)
(declare-fun y13_1_endpoint0_2 () Real)
(declare-fun |piecewise for y13_1_endpoint0_2| () Bool)
(declare-fun y13_1_endpoint1_2 () Real)
(declare-fun |piecewise for y13_1_endpoint1_2| () Bool)
(declare-fun y13_1_endpoint2_2 () Real)
(declare-fun |piecewise for y13_1_endpoint2_2| () Bool)
(declare-fun y13_1_endpoint3_2 () Real)
(declare-fun |piecewise for y13_1_endpoint3_2| () Bool)
(declare-fun likelihoody13_1 () Real)
(declare-fun likelihoody13_2 () Real)
(declare-fun likelihoodoutlier14 () Real)
(declare-fun y14_1_endpoint3_1 () Real)
(declare-fun |piecewise for y14_1_endpoint3_1| () Bool)
(declare-fun y14_1_endpoint2_1 () Real)
(declare-fun |piecewise for y14_1_endpoint2_1| () Bool)
(declare-fun y14_1_endpoint1_1 () Real)
(declare-fun |piecewise for y14_1_endpoint1_1| () Bool)
(declare-fun y14_1_endpoint0_2 () Real)
(declare-fun |piecewise for y14_1_endpoint0_2| () Bool)
(declare-fun y14_1_endpoint1_2 () Real)
(declare-fun |piecewise for y14_1_endpoint1_2| () Bool)
(declare-fun y14_1_endpoint2_2 () Real)
(declare-fun |piecewise for y14_1_endpoint2_2| () Bool)
(declare-fun y14_1_endpoint3_2 () Real)
(declare-fun |piecewise for y14_1_endpoint3_2| () Bool)
(declare-fun likelihoody14_1 () Real)
(declare-fun likelihoody14_2 () Real)
(declare-fun likelihoodoutlier15 () Real)
(declare-fun y15_1_endpoint3_1 () Real)
(declare-fun |piecewise for y15_1_endpoint3_1| () Bool)
(declare-fun y15_1_endpoint2_1 () Real)
(declare-fun |piecewise for y15_1_endpoint2_1| () Bool)
(declare-fun y15_1_endpoint1_1 () Real)
(declare-fun |piecewise for y15_1_endpoint1_1| () Bool)
(declare-fun y15_1_endpoint0_2 () Real)
(declare-fun |piecewise for y15_1_endpoint0_2| () Bool)
(declare-fun y15_1_endpoint1_2 () Real)
(declare-fun |piecewise for y15_1_endpoint1_2| () Bool)
(declare-fun y15_1_endpoint2_2 () Real)
(declare-fun |piecewise for y15_1_endpoint2_2| () Bool)
(declare-fun y15_1_endpoint3_2 () Real)
(declare-fun |piecewise for y15_1_endpoint3_2| () Bool)
(declare-fun likelihoody15_1 () Real)
(declare-fun likelihoody15_2 () Real)
(declare-fun likelihoodoutlier16 () Real)
(declare-fun y16_1_endpoint3_1 () Real)
(declare-fun |piecewise for y16_1_endpoint3_1| () Bool)
(declare-fun y16_1_endpoint2_1 () Real)
(declare-fun |piecewise for y16_1_endpoint2_1| () Bool)
(declare-fun y16_1_endpoint1_1 () Real)
(declare-fun |piecewise for y16_1_endpoint1_1| () Bool)
(declare-fun y16_1_endpoint0_2 () Real)
(declare-fun |piecewise for y16_1_endpoint0_2| () Bool)
(declare-fun y16_1_endpoint1_2 () Real)
(declare-fun |piecewise for y16_1_endpoint1_2| () Bool)
(declare-fun y16_1_endpoint2_2 () Real)
(declare-fun |piecewise for y16_1_endpoint2_2| () Bool)
(declare-fun y16_1_endpoint3_2 () Real)
(declare-fun |piecewise for y16_1_endpoint3_2| () Bool)
(declare-fun likelihoody16_1 () Real)
(declare-fun likelihoody16_2 () Real)
(declare-fun likelihoodoutlier17 () Real)
(declare-fun y17_1_endpoint3_1 () Real)
(declare-fun |piecewise for y17_1_endpoint3_1| () Bool)
(declare-fun y17_1_endpoint2_1 () Real)
(declare-fun |piecewise for y17_1_endpoint2_1| () Bool)
(declare-fun y17_1_endpoint1_1 () Real)
(declare-fun |piecewise for y17_1_endpoint1_1| () Bool)
(declare-fun y17_1_endpoint0_2 () Real)
(declare-fun |piecewise for y17_1_endpoint0_2| () Bool)
(declare-fun y17_1_endpoint1_2 () Real)
(declare-fun |piecewise for y17_1_endpoint1_2| () Bool)
(declare-fun y17_1_endpoint2_2 () Real)
(declare-fun |piecewise for y17_1_endpoint2_2| () Bool)
(declare-fun y17_1_endpoint3_2 () Real)
(declare-fun |piecewise for y17_1_endpoint3_2| () Bool)
(declare-fun likelihoody17_1 () Real)
(declare-fun likelihoody17_2 () Real)
(declare-fun likelihoodoutlier18 () Real)
(declare-fun y18_1_endpoint3_1 () Real)
(declare-fun |piecewise for y18_1_endpoint3_1| () Bool)
(declare-fun y18_1_endpoint2_1 () Real)
(declare-fun |piecewise for y18_1_endpoint2_1| () Bool)
(declare-fun y18_1_endpoint1_1 () Real)
(declare-fun |piecewise for y18_1_endpoint1_1| () Bool)
(declare-fun y18_1_endpoint0_2 () Real)
(declare-fun |piecewise for y18_1_endpoint0_2| () Bool)
(declare-fun y18_1_endpoint1_2 () Real)
(declare-fun |piecewise for y18_1_endpoint1_2| () Bool)
(declare-fun y18_1_endpoint2_2 () Real)
(declare-fun |piecewise for y18_1_endpoint2_2| () Bool)
(declare-fun y18_1_endpoint3_2 () Real)
(declare-fun |piecewise for y18_1_endpoint3_2| () Bool)
(declare-fun likelihoody18_1 () Real)
(declare-fun likelihoody18_2 () Real)
(declare-fun likelihoodoutlier19 () Real)
(declare-fun y19_1_endpoint3_1 () Real)
(declare-fun |piecewise for y19_1_endpoint3_1| () Bool)
(declare-fun y19_1_endpoint2_1 () Real)
(declare-fun |piecewise for y19_1_endpoint2_1| () Bool)
(declare-fun y19_1_endpoint1_1 () Real)
(declare-fun |piecewise for y19_1_endpoint1_1| () Bool)
(declare-fun y19_1_endpoint0_2 () Real)
(declare-fun |piecewise for y19_1_endpoint0_2| () Bool)
(declare-fun y19_1_endpoint1_2 () Real)
(declare-fun |piecewise for y19_1_endpoint1_2| () Bool)
(declare-fun y19_1_endpoint2_2 () Real)
(declare-fun |piecewise for y19_1_endpoint2_2| () Bool)
(declare-fun y19_1_endpoint3_2 () Real)
(declare-fun |piecewise for y19_1_endpoint3_2| () Bool)
(declare-fun likelihoody19_1 () Real)
(declare-fun likelihoody19_2 () Real)
(declare-fun likelihoodoutlier20 () Real)
(declare-fun y20_1_endpoint3_1 () Real)
(declare-fun |piecewise for y20_1_endpoint3_1| () Bool)
(declare-fun y20_1_endpoint2_1 () Real)
(declare-fun |piecewise for y20_1_endpoint2_1| () Bool)
(declare-fun y20_1_endpoint1_1 () Real)
(declare-fun |piecewise for y20_1_endpoint1_1| () Bool)
(declare-fun y20_1_endpoint0_2 () Real)
(declare-fun |piecewise for y20_1_endpoint0_2| () Bool)
(declare-fun y20_1_endpoint1_2 () Real)
(declare-fun |piecewise for y20_1_endpoint1_2| () Bool)
(declare-fun y20_1_endpoint2_2 () Real)
(declare-fun |piecewise for y20_1_endpoint2_2| () Bool)
(declare-fun y20_1_endpoint3_2 () Real)
(declare-fun |piecewise for y20_1_endpoint3_2| () Bool)
(declare-fun likelihoody20_1 () Real)
(declare-fun likelihoody20_2 () Real)
(declare-fun likelihoodoutlier21 () Real)
(declare-fun y21_1_endpoint3_1 () Real)
(declare-fun |piecewise for y21_1_endpoint3_1| () Bool)
(declare-fun y21_1_endpoint2_1 () Real)
(declare-fun |piecewise for y21_1_endpoint2_1| () Bool)
(declare-fun y21_1_endpoint1_1 () Real)
(declare-fun |piecewise for y21_1_endpoint1_1| () Bool)
(declare-fun y21_1_endpoint0_2 () Real)
(declare-fun |piecewise for y21_1_endpoint0_2| () Bool)
(declare-fun y21_1_endpoint1_2 () Real)
(declare-fun |piecewise for y21_1_endpoint1_2| () Bool)
(declare-fun y21_1_endpoint2_2 () Real)
(declare-fun |piecewise for y21_1_endpoint2_2| () Bool)
(declare-fun y21_1_endpoint3_2 () Real)
(declare-fun |piecewise for y21_1_endpoint3_2| () Bool)
(declare-fun likelihoody21_1 () Real)
(declare-fun likelihoody21_2 () Real)
(declare-fun likelihoodoutlier22 () Real)
(declare-fun y22_1_endpoint3_1 () Real)
(declare-fun |piecewise for y22_1_endpoint3_1| () Bool)
(declare-fun y22_1_endpoint2_1 () Real)
(declare-fun |piecewise for y22_1_endpoint2_1| () Bool)
(declare-fun y22_1_endpoint1_1 () Real)
(declare-fun |piecewise for y22_1_endpoint1_1| () Bool)
(declare-fun y22_1_endpoint0_2 () Real)
(declare-fun |piecewise for y22_1_endpoint0_2| () Bool)
(declare-fun y22_1_endpoint1_2 () Real)
(declare-fun |piecewise for y22_1_endpoint1_2| () Bool)
(declare-fun y22_1_endpoint2_2 () Real)
(declare-fun |piecewise for y22_1_endpoint2_2| () Bool)
(declare-fun y22_1_endpoint3_2 () Real)
(declare-fun |piecewise for y22_1_endpoint3_2| () Bool)
(declare-fun likelihoody22_1 () Real)
(declare-fun likelihoody22_2 () Real)
(declare-fun likelihoodoutlier23 () Real)
(declare-fun y23_1_endpoint3_1 () Real)
(declare-fun |piecewise for y23_1_endpoint3_1| () Bool)
(declare-fun y23_1_endpoint2_1 () Real)
(declare-fun |piecewise for y23_1_endpoint2_1| () Bool)
(declare-fun y23_1_endpoint1_1 () Real)
(declare-fun |piecewise for y23_1_endpoint1_1| () Bool)
(declare-fun y23_1_endpoint0_2 () Real)
(declare-fun |piecewise for y23_1_endpoint0_2| () Bool)
(declare-fun y23_1_endpoint1_2 () Real)
(declare-fun |piecewise for y23_1_endpoint1_2| () Bool)
(declare-fun y23_1_endpoint2_2 () Real)
(declare-fun |piecewise for y23_1_endpoint2_2| () Bool)
(declare-fun y23_1_endpoint3_2 () Real)
(declare-fun |piecewise for y23_1_endpoint3_2| () Bool)
(declare-fun likelihoody23_1 () Real)
(declare-fun likelihoody23_2 () Real)
(declare-fun likelihoodoutlier24 () Real)
(declare-fun y24_1_endpoint3_1 () Real)
(declare-fun |piecewise for y24_1_endpoint3_1| () Bool)
(declare-fun y24_1_endpoint2_1 () Real)
(declare-fun |piecewise for y24_1_endpoint2_1| () Bool)
(declare-fun y24_1_endpoint1_1 () Real)
(declare-fun |piecewise for y24_1_endpoint1_1| () Bool)
(declare-fun y24_1_endpoint0_2 () Real)
(declare-fun |piecewise for y24_1_endpoint0_2| () Bool)
(declare-fun y24_1_endpoint1_2 () Real)
(declare-fun |piecewise for y24_1_endpoint1_2| () Bool)
(declare-fun y24_1_endpoint2_2 () Real)
(declare-fun |piecewise for y24_1_endpoint2_2| () Bool)
(declare-fun y24_1_endpoint3_2 () Real)
(declare-fun |piecewise for y24_1_endpoint3_2| () Bool)
(declare-fun likelihoody24_1 () Real)
(declare-fun likelihoody24_2 () Real)
(declare-fun likelihoodoutlier25 () Real)
(declare-fun y25_1_endpoint3_1 () Real)
(declare-fun |piecewise for y25_1_endpoint3_1| () Bool)
(declare-fun y25_1_endpoint2_1 () Real)
(declare-fun |piecewise for y25_1_endpoint2_1| () Bool)
(declare-fun y25_1_endpoint1_1 () Real)
(declare-fun |piecewise for y25_1_endpoint1_1| () Bool)
(declare-fun y25_1_endpoint0_2 () Real)
(declare-fun |piecewise for y25_1_endpoint0_2| () Bool)
(declare-fun y25_1_endpoint1_2 () Real)
(declare-fun |piecewise for y25_1_endpoint1_2| () Bool)
(declare-fun y25_1_endpoint2_2 () Real)
(declare-fun |piecewise for y25_1_endpoint2_2| () Bool)
(declare-fun y25_1_endpoint3_2 () Real)
(declare-fun |piecewise for y25_1_endpoint3_2| () Bool)
(declare-fun likelihoody25_1 () Real)
(declare-fun likelihoody25_2 () Real)
(declare-fun likelihoodoutlier26 () Real)
(declare-fun y26_1_endpoint3_1 () Real)
(declare-fun |piecewise for y26_1_endpoint3_1| () Bool)
(declare-fun y26_1_endpoint2_1 () Real)
(declare-fun |piecewise for y26_1_endpoint2_1| () Bool)
(declare-fun y26_1_endpoint1_1 () Real)
(declare-fun |piecewise for y26_1_endpoint1_1| () Bool)
(declare-fun y26_1_endpoint0_2 () Real)
(declare-fun |piecewise for y26_1_endpoint0_2| () Bool)
(declare-fun y26_1_endpoint1_2 () Real)
(declare-fun |piecewise for y26_1_endpoint1_2| () Bool)
(declare-fun y26_1_endpoint2_2 () Real)
(declare-fun |piecewise for y26_1_endpoint2_2| () Bool)
(declare-fun y26_1_endpoint3_2 () Real)
(declare-fun |piecewise for y26_1_endpoint3_2| () Bool)
(declare-fun likelihoody26_1 () Real)
(declare-fun likelihoody26_2 () Real)
(declare-fun likelihoodoutlier27 () Real)
(declare-fun y27_1_endpoint3_1 () Real)
(declare-fun |piecewise for y27_1_endpoint3_1| () Bool)
(declare-fun y27_1_endpoint2_1 () Real)
(declare-fun |piecewise for y27_1_endpoint2_1| () Bool)
(declare-fun y27_1_endpoint1_1 () Real)
(declare-fun |piecewise for y27_1_endpoint1_1| () Bool)
(declare-fun y27_1_endpoint0_2 () Real)
(declare-fun |piecewise for y27_1_endpoint0_2| () Bool)
(declare-fun y27_1_endpoint1_2 () Real)
(declare-fun |piecewise for y27_1_endpoint1_2| () Bool)
(declare-fun y27_1_endpoint2_2 () Real)
(declare-fun |piecewise for y27_1_endpoint2_2| () Bool)
(declare-fun y27_1_endpoint3_2 () Real)
(declare-fun |piecewise for y27_1_endpoint3_2| () Bool)
(declare-fun likelihoody27_1 () Real)
(declare-fun likelihoody27_2 () Real)
(declare-fun likelihoodoutlier28 () Real)
(declare-fun y28_1_endpoint3_1 () Real)
(declare-fun |piecewise for y28_1_endpoint3_1| () Bool)
(declare-fun y28_1_endpoint2_1 () Real)
(declare-fun |piecewise for y28_1_endpoint2_1| () Bool)
(declare-fun y28_1_endpoint1_1 () Real)
(declare-fun |piecewise for y28_1_endpoint1_1| () Bool)
(declare-fun y28_1_endpoint0_2 () Real)
(declare-fun |piecewise for y28_1_endpoint0_2| () Bool)
(declare-fun y28_1_endpoint1_2 () Real)
(declare-fun |piecewise for y28_1_endpoint1_2| () Bool)
(declare-fun y28_1_endpoint2_2 () Real)
(declare-fun |piecewise for y28_1_endpoint2_2| () Bool)
(declare-fun y28_1_endpoint3_2 () Real)
(declare-fun |piecewise for y28_1_endpoint3_2| () Bool)
(declare-fun likelihoody28_1 () Real)
(declare-fun likelihoody28_2 () Real)
(declare-fun likelihoodoutlier29 () Real)
(declare-fun y29_1_endpoint3_1 () Real)
(declare-fun |piecewise for y29_1_endpoint3_1| () Bool)
(declare-fun y29_1_endpoint2_1 () Real)
(declare-fun |piecewise for y29_1_endpoint2_1| () Bool)
(declare-fun y29_1_endpoint1_1 () Real)
(declare-fun |piecewise for y29_1_endpoint1_1| () Bool)
(declare-fun y29_1_endpoint0_2 () Real)
(declare-fun |piecewise for y29_1_endpoint0_2| () Bool)
(declare-fun y29_1_endpoint1_2 () Real)
(declare-fun |piecewise for y29_1_endpoint1_2| () Bool)
(declare-fun y29_1_endpoint2_2 () Real)
(declare-fun |piecewise for y29_1_endpoint2_2| () Bool)
(declare-fun y29_1_endpoint3_2 () Real)
(declare-fun |piecewise for y29_1_endpoint3_2| () Bool)
(declare-fun likelihoody29_1 () Real)
(declare-fun likelihoody29_2 () Real)
(declare-fun likelihoodoutlier30 () Real)
(declare-fun y30_1_endpoint3_1 () Real)
(declare-fun |piecewise for y30_1_endpoint3_1| () Bool)
(declare-fun y30_1_endpoint2_1 () Real)
(declare-fun |piecewise for y30_1_endpoint2_1| () Bool)
(declare-fun y30_1_endpoint1_1 () Real)
(declare-fun |piecewise for y30_1_endpoint1_1| () Bool)
(declare-fun y30_1_endpoint0_2 () Real)
(declare-fun |piecewise for y30_1_endpoint0_2| () Bool)
(declare-fun y30_1_endpoint1_2 () Real)
(declare-fun |piecewise for y30_1_endpoint1_2| () Bool)
(declare-fun y30_1_endpoint2_2 () Real)
(declare-fun |piecewise for y30_1_endpoint2_2| () Bool)
(declare-fun y30_1_endpoint3_2 () Real)
(declare-fun |piecewise for y30_1_endpoint3_2| () Bool)
(declare-fun likelihoody30_1 () Real)
(declare-fun likelihoody30_2 () Real)
(declare-fun likelihoodoutlier31 () Real)
(declare-fun y31_1_endpoint3_1 () Real)
(declare-fun |piecewise for y31_1_endpoint3_1| () Bool)
(declare-fun y31_1_endpoint2_1 () Real)
(declare-fun |piecewise for y31_1_endpoint2_1| () Bool)
(declare-fun y31_1_endpoint1_1 () Real)
(declare-fun |piecewise for y31_1_endpoint1_1| () Bool)
(declare-fun y31_1_endpoint0_2 () Real)
(declare-fun |piecewise for y31_1_endpoint0_2| () Bool)
(declare-fun y31_1_endpoint1_2 () Real)
(declare-fun |piecewise for y31_1_endpoint1_2| () Bool)
(declare-fun y31_1_endpoint2_2 () Real)
(declare-fun |piecewise for y31_1_endpoint2_2| () Bool)
(declare-fun y31_1_endpoint3_2 () Real)
(declare-fun |piecewise for y31_1_endpoint3_2| () Bool)
(declare-fun likelihoody31_1 () Real)
(declare-fun likelihoody31_2 () Real)
(declare-fun likelihoodoutlier32 () Real)
(declare-fun y32_1_endpoint3_1 () Real)
(declare-fun |piecewise for y32_1_endpoint3_1| () Bool)
(declare-fun y32_1_endpoint2_1 () Real)
(declare-fun |piecewise for y32_1_endpoint2_1| () Bool)
(declare-fun y32_1_endpoint1_1 () Real)
(declare-fun |piecewise for y32_1_endpoint1_1| () Bool)
(declare-fun y32_1_endpoint0_2 () Real)
(declare-fun |piecewise for y32_1_endpoint0_2| () Bool)
(declare-fun y32_1_endpoint1_2 () Real)
(declare-fun |piecewise for y32_1_endpoint1_2| () Bool)
(declare-fun y32_1_endpoint2_2 () Real)
(declare-fun |piecewise for y32_1_endpoint2_2| () Bool)
(declare-fun y32_1_endpoint3_2 () Real)
(declare-fun |piecewise for y32_1_endpoint3_2| () Bool)
(declare-fun likelihoody32_1 () Real)
(declare-fun likelihoody32_2 () Real)
(declare-fun likelihoodoutlier33 () Real)
(declare-fun y33_1_endpoint3_1 () Real)
(declare-fun |piecewise for y33_1_endpoint3_1| () Bool)
(declare-fun y33_1_endpoint2_1 () Real)
(declare-fun |piecewise for y33_1_endpoint2_1| () Bool)
(declare-fun y33_1_endpoint1_1 () Real)
(declare-fun |piecewise for y33_1_endpoint1_1| () Bool)
(declare-fun y33_1_endpoint0_2 () Real)
(declare-fun |piecewise for y33_1_endpoint0_2| () Bool)
(declare-fun y33_1_endpoint1_2 () Real)
(declare-fun |piecewise for y33_1_endpoint1_2| () Bool)
(declare-fun y33_1_endpoint2_2 () Real)
(declare-fun |piecewise for y33_1_endpoint2_2| () Bool)
(declare-fun y33_1_endpoint3_2 () Real)
(declare-fun |piecewise for y33_1_endpoint3_2| () Bool)
(declare-fun likelihoody33_1 () Real)
(declare-fun likelihoody33_2 () Real)
(declare-fun likelihoodoutlier34 () Real)
(declare-fun y34_1_endpoint3_1 () Real)
(declare-fun |piecewise for y34_1_endpoint3_1| () Bool)
(declare-fun y34_1_endpoint2_1 () Real)
(declare-fun |piecewise for y34_1_endpoint2_1| () Bool)
(declare-fun y34_1_endpoint1_1 () Real)
(declare-fun |piecewise for y34_1_endpoint1_1| () Bool)
(declare-fun y34_1_endpoint0_2 () Real)
(declare-fun |piecewise for y34_1_endpoint0_2| () Bool)
(declare-fun y34_1_endpoint1_2 () Real)
(declare-fun |piecewise for y34_1_endpoint1_2| () Bool)
(declare-fun y34_1_endpoint2_2 () Real)
(declare-fun |piecewise for y34_1_endpoint2_2| () Bool)
(declare-fun y34_1_endpoint3_2 () Real)
(declare-fun |piecewise for y34_1_endpoint3_2| () Bool)
(declare-fun likelihoody34_1 () Real)
(declare-fun likelihoody34_2 () Real)
(declare-fun likelihoodoutlier35 () Real)
(declare-fun y35_1_endpoint3_1 () Real)
(declare-fun |piecewise for y35_1_endpoint3_1| () Bool)
(declare-fun y35_1_endpoint2_1 () Real)
(declare-fun |piecewise for y35_1_endpoint2_1| () Bool)
(declare-fun y35_1_endpoint1_1 () Real)
(declare-fun |piecewise for y35_1_endpoint1_1| () Bool)
(declare-fun y35_1_endpoint0_2 () Real)
(declare-fun |piecewise for y35_1_endpoint0_2| () Bool)
(declare-fun y35_1_endpoint1_2 () Real)
(declare-fun |piecewise for y35_1_endpoint1_2| () Bool)
(declare-fun y35_1_endpoint2_2 () Real)
(declare-fun |piecewise for y35_1_endpoint2_2| () Bool)
(declare-fun y35_1_endpoint3_2 () Real)
(declare-fun |piecewise for y35_1_endpoint3_2| () Bool)
(declare-fun likelihoody35_1 () Real)
(declare-fun likelihoody35_2 () Real)
(declare-fun likelihoodoutlier36 () Real)
(declare-fun y36_1_endpoint3_1 () Real)
(declare-fun |piecewise for y36_1_endpoint3_1| () Bool)
(declare-fun y36_1_endpoint2_1 () Real)
(declare-fun |piecewise for y36_1_endpoint2_1| () Bool)
(declare-fun y36_1_endpoint1_1 () Real)
(declare-fun |piecewise for y36_1_endpoint1_1| () Bool)
(declare-fun y36_1_endpoint0_2 () Real)
(declare-fun |piecewise for y36_1_endpoint0_2| () Bool)
(declare-fun y36_1_endpoint1_2 () Real)
(declare-fun |piecewise for y36_1_endpoint1_2| () Bool)
(declare-fun y36_1_endpoint2_2 () Real)
(declare-fun |piecewise for y36_1_endpoint2_2| () Bool)
(declare-fun y36_1_endpoint3_2 () Real)
(declare-fun |piecewise for y36_1_endpoint3_2| () Bool)
(declare-fun likelihoody36_1 () Real)
(declare-fun likelihoody36_2 () Real)
(declare-fun likelihoodoutlier37 () Real)
(declare-fun y37_1_endpoint3_1 () Real)
(declare-fun |piecewise for y37_1_endpoint3_1| () Bool)
(declare-fun y37_1_endpoint2_1 () Real)
(declare-fun |piecewise for y37_1_endpoint2_1| () Bool)
(declare-fun y37_1_endpoint1_1 () Real)
(declare-fun |piecewise for y37_1_endpoint1_1| () Bool)
(declare-fun y37_1_endpoint0_2 () Real)
(declare-fun |piecewise for y37_1_endpoint0_2| () Bool)
(declare-fun y37_1_endpoint1_2 () Real)
(declare-fun |piecewise for y37_1_endpoint1_2| () Bool)
(declare-fun y37_1_endpoint2_2 () Real)
(declare-fun |piecewise for y37_1_endpoint2_2| () Bool)
(declare-fun y37_1_endpoint3_2 () Real)
(declare-fun |piecewise for y37_1_endpoint3_2| () Bool)
(declare-fun likelihoody37_1 () Real)
(declare-fun likelihoody37_2 () Real)
(declare-fun likelihoodoutlier38 () Real)
(declare-fun y38_1_endpoint3_1 () Real)
(declare-fun |piecewise for y38_1_endpoint3_1| () Bool)
(declare-fun y38_1_endpoint2_1 () Real)
(declare-fun |piecewise for y38_1_endpoint2_1| () Bool)
(declare-fun y38_1_endpoint1_1 () Real)
(declare-fun |piecewise for y38_1_endpoint1_1| () Bool)
(declare-fun y38_1_endpoint0_2 () Real)
(declare-fun |piecewise for y38_1_endpoint0_2| () Bool)
(declare-fun y38_1_endpoint1_2 () Real)
(declare-fun |piecewise for y38_1_endpoint1_2| () Bool)
(declare-fun y38_1_endpoint2_2 () Real)
(declare-fun |piecewise for y38_1_endpoint2_2| () Bool)
(declare-fun y38_1_endpoint3_2 () Real)
(declare-fun |piecewise for y38_1_endpoint3_2| () Bool)
(declare-fun likelihoody38_1 () Real)
(declare-fun likelihoody38_2 () Real)
(declare-fun likelihoodoutlier39 () Real)
(declare-fun y39_1_endpoint3_1 () Real)
(declare-fun |piecewise for y39_1_endpoint3_1| () Bool)
(declare-fun y39_1_endpoint2_1 () Real)
(declare-fun |piecewise for y39_1_endpoint2_1| () Bool)
(declare-fun y39_1_endpoint1_1 () Real)
(declare-fun |piecewise for y39_1_endpoint1_1| () Bool)
(declare-fun y39_1_endpoint0_2 () Real)
(declare-fun |piecewise for y39_1_endpoint0_2| () Bool)
(declare-fun y39_1_endpoint1_2 () Real)
(declare-fun |piecewise for y39_1_endpoint1_2| () Bool)
(declare-fun y39_1_endpoint2_2 () Real)
(declare-fun |piecewise for y39_1_endpoint2_2| () Bool)
(declare-fun y39_1_endpoint3_2 () Real)
(declare-fun |piecewise for y39_1_endpoint3_2| () Bool)
(declare-fun likelihoody39_1 () Real)
(declare-fun likelihoody39_2 () Real)
(declare-fun likelihoodoutlier40 () Real)
(declare-fun y40_1_endpoint3_1 () Real)
(declare-fun |piecewise for y40_1_endpoint3_1| () Bool)
(declare-fun y40_1_endpoint2_1 () Real)
(declare-fun |piecewise for y40_1_endpoint2_1| () Bool)
(declare-fun y40_1_endpoint1_1 () Real)
(declare-fun |piecewise for y40_1_endpoint1_1| () Bool)
(declare-fun y40_1_endpoint0_2 () Real)
(declare-fun |piecewise for y40_1_endpoint0_2| () Bool)
(declare-fun y40_1_endpoint1_2 () Real)
(declare-fun |piecewise for y40_1_endpoint1_2| () Bool)
(declare-fun y40_1_endpoint2_2 () Real)
(declare-fun |piecewise for y40_1_endpoint2_2| () Bool)
(declare-fun y40_1_endpoint3_2 () Real)
(declare-fun |piecewise for y40_1_endpoint3_2| () Bool)
(declare-fun likelihoody40_1 () Real)
(declare-fun likelihoody40_2 () Real)
(declare-fun likelihoodoutlier41 () Real)
(declare-fun y41_1_endpoint3_1 () Real)
(declare-fun |piecewise for y41_1_endpoint3_1| () Bool)
(declare-fun y41_1_endpoint2_1 () Real)
(declare-fun |piecewise for y41_1_endpoint2_1| () Bool)
(declare-fun y41_1_endpoint1_1 () Real)
(declare-fun |piecewise for y41_1_endpoint1_1| () Bool)
(declare-fun y41_1_endpoint0_2 () Real)
(declare-fun |piecewise for y41_1_endpoint0_2| () Bool)
(declare-fun y41_1_endpoint1_2 () Real)
(declare-fun |piecewise for y41_1_endpoint1_2| () Bool)
(declare-fun y41_1_endpoint2_2 () Real)
(declare-fun |piecewise for y41_1_endpoint2_2| () Bool)
(declare-fun y41_1_endpoint3_2 () Real)
(declare-fun |piecewise for y41_1_endpoint3_2| () Bool)
(declare-fun likelihoody41_1 () Real)
(declare-fun likelihoody41_2 () Real)
(declare-fun likelihoodoutlier42 () Real)
(declare-fun y42_1_endpoint3_1 () Real)
(declare-fun |piecewise for y42_1_endpoint3_1| () Bool)
(declare-fun y42_1_endpoint2_1 () Real)
(declare-fun |piecewise for y42_1_endpoint2_1| () Bool)
(declare-fun y42_1_endpoint1_1 () Real)
(declare-fun |piecewise for y42_1_endpoint1_1| () Bool)
(declare-fun y42_1_endpoint0_2 () Real)
(declare-fun |piecewise for y42_1_endpoint0_2| () Bool)
(declare-fun y42_1_endpoint1_2 () Real)
(declare-fun |piecewise for y42_1_endpoint1_2| () Bool)
(declare-fun y42_1_endpoint2_2 () Real)
(declare-fun |piecewise for y42_1_endpoint2_2| () Bool)
(declare-fun y42_1_endpoint3_2 () Real)
(declare-fun |piecewise for y42_1_endpoint3_2| () Bool)
(declare-fun likelihoody42_1 () Real)
(declare-fun likelihoody42_2 () Real)
(declare-fun likelihoodoutlier43 () Real)
(declare-fun y43_1_endpoint3_1 () Real)
(declare-fun |piecewise for y43_1_endpoint3_1| () Bool)
(declare-fun y43_1_endpoint2_1 () Real)
(declare-fun |piecewise for y43_1_endpoint2_1| () Bool)
(declare-fun y43_1_endpoint1_1 () Real)
(declare-fun |piecewise for y43_1_endpoint1_1| () Bool)
(declare-fun y43_1_endpoint0_2 () Real)
(declare-fun |piecewise for y43_1_endpoint0_2| () Bool)
(declare-fun y43_1_endpoint1_2 () Real)
(declare-fun |piecewise for y43_1_endpoint1_2| () Bool)
(declare-fun y43_1_endpoint2_2 () Real)
(declare-fun |piecewise for y43_1_endpoint2_2| () Bool)
(declare-fun y43_1_endpoint3_2 () Real)
(declare-fun |piecewise for y43_1_endpoint3_2| () Bool)
(declare-fun likelihoody43_1 () Real)
(declare-fun likelihoody43_2 () Real)
(declare-fun likelihoodoutlier44 () Real)
(declare-fun y44_1_endpoint3_1 () Real)
(declare-fun |piecewise for y44_1_endpoint3_1| () Bool)
(declare-fun y44_1_endpoint2_1 () Real)
(declare-fun |piecewise for y44_1_endpoint2_1| () Bool)
(declare-fun y44_1_endpoint1_1 () Real)
(declare-fun |piecewise for y44_1_endpoint1_1| () Bool)
(declare-fun y44_1_endpoint0_2 () Real)
(declare-fun |piecewise for y44_1_endpoint0_2| () Bool)
(declare-fun y44_1_endpoint1_2 () Real)
(declare-fun |piecewise for y44_1_endpoint1_2| () Bool)
(declare-fun y44_1_endpoint2_2 () Real)
(declare-fun |piecewise for y44_1_endpoint2_2| () Bool)
(declare-fun y44_1_endpoint3_2 () Real)
(declare-fun |piecewise for y44_1_endpoint3_2| () Bool)
(declare-fun likelihoody44_1 () Real)
(declare-fun likelihoody44_2 () Real)
(declare-fun likelihoodoutlier45 () Real)
(declare-fun y45_1_endpoint3_1 () Real)
(declare-fun |piecewise for y45_1_endpoint3_1| () Bool)
(declare-fun y45_1_endpoint2_1 () Real)
(declare-fun |piecewise for y45_1_endpoint2_1| () Bool)
(declare-fun y45_1_endpoint1_1 () Real)
(declare-fun |piecewise for y45_1_endpoint1_1| () Bool)
(declare-fun y45_1_endpoint0_2 () Real)
(declare-fun |piecewise for y45_1_endpoint0_2| () Bool)
(declare-fun y45_1_endpoint1_2 () Real)
(declare-fun |piecewise for y45_1_endpoint1_2| () Bool)
(declare-fun y45_1_endpoint2_2 () Real)
(declare-fun |piecewise for y45_1_endpoint2_2| () Bool)
(declare-fun y45_1_endpoint3_2 () Real)
(declare-fun |piecewise for y45_1_endpoint3_2| () Bool)
(declare-fun likelihoody45_1 () Real)
(declare-fun likelihoody45_2 () Real)
(declare-fun likelihoodoutlier46 () Real)
(declare-fun y46_1_endpoint3_1 () Real)
(declare-fun |piecewise for y46_1_endpoint3_1| () Bool)
(declare-fun y46_1_endpoint2_1 () Real)
(declare-fun |piecewise for y46_1_endpoint2_1| () Bool)
(declare-fun y46_1_endpoint1_1 () Real)
(declare-fun |piecewise for y46_1_endpoint1_1| () Bool)
(declare-fun y46_1_endpoint0_2 () Real)
(declare-fun |piecewise for y46_1_endpoint0_2| () Bool)
(declare-fun y46_1_endpoint1_2 () Real)
(declare-fun |piecewise for y46_1_endpoint1_2| () Bool)
(declare-fun y46_1_endpoint2_2 () Real)
(declare-fun |piecewise for y46_1_endpoint2_2| () Bool)
(declare-fun y46_1_endpoint3_2 () Real)
(declare-fun |piecewise for y46_1_endpoint3_2| () Bool)
(declare-fun likelihoody46_1 () Real)
(declare-fun likelihoody46_2 () Real)
(declare-fun likelihoodoutlier47 () Real)
(declare-fun y47_1_endpoint3_1 () Real)
(declare-fun |piecewise for y47_1_endpoint3_1| () Bool)
(declare-fun y47_1_endpoint2_1 () Real)
(declare-fun |piecewise for y47_1_endpoint2_1| () Bool)
(declare-fun y47_1_endpoint1_1 () Real)
(declare-fun |piecewise for y47_1_endpoint1_1| () Bool)
(declare-fun y47_1_endpoint0_2 () Real)
(declare-fun |piecewise for y47_1_endpoint0_2| () Bool)
(declare-fun y47_1_endpoint1_2 () Real)
(declare-fun |piecewise for y47_1_endpoint1_2| () Bool)
(declare-fun y47_1_endpoint2_2 () Real)
(declare-fun |piecewise for y47_1_endpoint2_2| () Bool)
(declare-fun y47_1_endpoint3_2 () Real)
(declare-fun |piecewise for y47_1_endpoint3_2| () Bool)
(declare-fun likelihoody47_1 () Real)
(declare-fun likelihoody47_2 () Real)
(declare-fun likelihoodoutlier48 () Real)
(declare-fun y48_1_endpoint3_1 () Real)
(declare-fun |piecewise for y48_1_endpoint3_1| () Bool)
(declare-fun y48_1_endpoint2_1 () Real)
(declare-fun |piecewise for y48_1_endpoint2_1| () Bool)
(declare-fun y48_1_endpoint1_1 () Real)
(declare-fun |piecewise for y48_1_endpoint1_1| () Bool)
(declare-fun y48_1_endpoint0_2 () Real)
(declare-fun |piecewise for y48_1_endpoint0_2| () Bool)
(declare-fun y48_1_endpoint1_2 () Real)
(declare-fun |piecewise for y48_1_endpoint1_2| () Bool)
(declare-fun y48_1_endpoint2_2 () Real)
(declare-fun |piecewise for y48_1_endpoint2_2| () Bool)
(declare-fun y48_1_endpoint3_2 () Real)
(declare-fun |piecewise for y48_1_endpoint3_2| () Bool)
(declare-fun likelihoody48_1 () Real)
(declare-fun likelihoody48_2 () Real)
(declare-fun likelihoodoutlier49 () Real)
(declare-fun y49_1_endpoint3_1 () Real)
(declare-fun |piecewise for y49_1_endpoint3_1| () Bool)
(declare-fun y49_1_endpoint2_1 () Real)
(declare-fun |piecewise for y49_1_endpoint2_1| () Bool)
(declare-fun y49_1_endpoint1_1 () Real)
(declare-fun |piecewise for y49_1_endpoint1_1| () Bool)
(declare-fun y49_1_endpoint0_2 () Real)
(declare-fun |piecewise for y49_1_endpoint0_2| () Bool)
(declare-fun y49_1_endpoint1_2 () Real)
(declare-fun |piecewise for y49_1_endpoint1_2| () Bool)
(declare-fun y49_1_endpoint2_2 () Real)
(declare-fun |piecewise for y49_1_endpoint2_2| () Bool)
(declare-fun y49_1_endpoint3_2 () Real)
(declare-fun |piecewise for y49_1_endpoint3_2| () Bool)
(declare-fun likelihoody49_1 () Real)
(declare-fun likelihoody49_2 () Real)
(declare-fun likelihoodoutlier50 () Real)
(declare-fun y50_1_endpoint3_1 () Real)
(declare-fun |piecewise for y50_1_endpoint3_1| () Bool)
(declare-fun y50_1_endpoint2_1 () Real)
(declare-fun |piecewise for y50_1_endpoint2_1| () Bool)
(declare-fun y50_1_endpoint1_1 () Real)
(declare-fun |piecewise for y50_1_endpoint1_1| () Bool)
(declare-fun y50_1_endpoint0_2 () Real)
(declare-fun |piecewise for y50_1_endpoint0_2| () Bool)
(declare-fun y50_1_endpoint1_2 () Real)
(declare-fun |piecewise for y50_1_endpoint1_2| () Bool)
(declare-fun y50_1_endpoint2_2 () Real)
(declare-fun |piecewise for y50_1_endpoint2_2| () Bool)
(declare-fun y50_1_endpoint3_2 () Real)
(declare-fun |piecewise for y50_1_endpoint3_2| () Bool)
(declare-fun likelihoody50_1 () Real)
(declare-fun likelihoody50_2 () Real)
(declare-fun likelihoodoutlier51 () Real)
(declare-fun y51_1_endpoint3_1 () Real)
(declare-fun |piecewise for y51_1_endpoint3_1| () Bool)
(declare-fun y51_1_endpoint2_1 () Real)
(declare-fun |piecewise for y51_1_endpoint2_1| () Bool)
(declare-fun y51_1_endpoint1_1 () Real)
(declare-fun |piecewise for y51_1_endpoint1_1| () Bool)
(declare-fun y51_1_endpoint0_2 () Real)
(declare-fun |piecewise for y51_1_endpoint0_2| () Bool)
(declare-fun y51_1_endpoint1_2 () Real)
(declare-fun |piecewise for y51_1_endpoint1_2| () Bool)
(declare-fun y51_1_endpoint2_2 () Real)
(declare-fun |piecewise for y51_1_endpoint2_2| () Bool)
(declare-fun y51_1_endpoint3_2 () Real)
(declare-fun |piecewise for y51_1_endpoint3_2| () Bool)
(declare-fun likelihoody51_1 () Real)
(declare-fun likelihoody51_2 () Real)
(declare-fun likelihoodoutlier52 () Real)
(declare-fun y52_1_endpoint3_1 () Real)
(declare-fun |piecewise for y52_1_endpoint3_1| () Bool)
(declare-fun y52_1_endpoint2_1 () Real)
(declare-fun |piecewise for y52_1_endpoint2_1| () Bool)
(declare-fun y52_1_endpoint1_1 () Real)
(declare-fun |piecewise for y52_1_endpoint1_1| () Bool)
(declare-fun y52_1_endpoint0_2 () Real)
(declare-fun |piecewise for y52_1_endpoint0_2| () Bool)
(declare-fun y52_1_endpoint1_2 () Real)
(declare-fun |piecewise for y52_1_endpoint1_2| () Bool)
(declare-fun y52_1_endpoint2_2 () Real)
(declare-fun |piecewise for y52_1_endpoint2_2| () Bool)
(declare-fun y52_1_endpoint3_2 () Real)
(declare-fun |piecewise for y52_1_endpoint3_2| () Bool)
(declare-fun likelihoody52_1 () Real)
(declare-fun likelihoody52_2 () Real)
(declare-fun likelihoodoutlier53 () Real)
(declare-fun y53_1_endpoint3_1 () Real)
(declare-fun |piecewise for y53_1_endpoint3_1| () Bool)
(declare-fun y53_1_endpoint2_1 () Real)
(declare-fun |piecewise for y53_1_endpoint2_1| () Bool)
(declare-fun y53_1_endpoint1_1 () Real)
(declare-fun |piecewise for y53_1_endpoint1_1| () Bool)
(declare-fun y53_1_endpoint0_2 () Real)
(declare-fun |piecewise for y53_1_endpoint0_2| () Bool)
(declare-fun y53_1_endpoint1_2 () Real)
(declare-fun |piecewise for y53_1_endpoint1_2| () Bool)
(declare-fun y53_1_endpoint2_2 () Real)
(declare-fun |piecewise for y53_1_endpoint2_2| () Bool)
(declare-fun y53_1_endpoint3_2 () Real)
(declare-fun |piecewise for y53_1_endpoint3_2| () Bool)
(declare-fun likelihoody53_1 () Real)
(declare-fun likelihoody53_2 () Real)
(declare-fun likelihoodoutlier54 () Real)
(declare-fun y54_1_endpoint3_1 () Real)
(declare-fun |piecewise for y54_1_endpoint3_1| () Bool)
(declare-fun y54_1_endpoint2_1 () Real)
(declare-fun |piecewise for y54_1_endpoint2_1| () Bool)
(declare-fun y54_1_endpoint1_1 () Real)
(declare-fun |piecewise for y54_1_endpoint1_1| () Bool)
(declare-fun y54_1_endpoint0_2 () Real)
(declare-fun |piecewise for y54_1_endpoint0_2| () Bool)
(declare-fun y54_1_endpoint1_2 () Real)
(declare-fun |piecewise for y54_1_endpoint1_2| () Bool)
(declare-fun y54_1_endpoint2_2 () Real)
(declare-fun |piecewise for y54_1_endpoint2_2| () Bool)
(declare-fun y54_1_endpoint3_2 () Real)
(declare-fun |piecewise for y54_1_endpoint3_2| () Bool)
(declare-fun likelihoody54_1 () Real)
(declare-fun likelihoody54_2 () Real)
(declare-fun likelihoodoutlier55 () Real)
(declare-fun y55_1_endpoint3_1 () Real)
(declare-fun |piecewise for y55_1_endpoint3_1| () Bool)
(declare-fun y55_1_endpoint2_1 () Real)
(declare-fun |piecewise for y55_1_endpoint2_1| () Bool)
(declare-fun y55_1_endpoint1_1 () Real)
(declare-fun |piecewise for y55_1_endpoint1_1| () Bool)
(declare-fun y55_1_endpoint0_2 () Real)
(declare-fun |piecewise for y55_1_endpoint0_2| () Bool)
(declare-fun y55_1_endpoint1_2 () Real)
(declare-fun |piecewise for y55_1_endpoint1_2| () Bool)
(declare-fun y55_1_endpoint2_2 () Real)
(declare-fun |piecewise for y55_1_endpoint2_2| () Bool)
(declare-fun y55_1_endpoint3_2 () Real)
(declare-fun |piecewise for y55_1_endpoint3_2| () Bool)
(declare-fun likelihoody55_1 () Real)
(declare-fun likelihoody55_2 () Real)
(declare-fun likelihoodoutlier56 () Real)
(declare-fun y56_1_endpoint3_1 () Real)
(declare-fun |piecewise for y56_1_endpoint3_1| () Bool)
(declare-fun y56_1_endpoint2_1 () Real)
(declare-fun |piecewise for y56_1_endpoint2_1| () Bool)
(declare-fun y56_1_endpoint1_1 () Real)
(declare-fun |piecewise for y56_1_endpoint1_1| () Bool)
(declare-fun y56_1_endpoint0_2 () Real)
(declare-fun |piecewise for y56_1_endpoint0_2| () Bool)
(declare-fun y56_1_endpoint1_2 () Real)
(declare-fun |piecewise for y56_1_endpoint1_2| () Bool)
(declare-fun y56_1_endpoint2_2 () Real)
(declare-fun |piecewise for y56_1_endpoint2_2| () Bool)
(declare-fun y56_1_endpoint3_2 () Real)
(declare-fun |piecewise for y56_1_endpoint3_2| () Bool)
(declare-fun likelihoody56_1 () Real)
(declare-fun likelihoody56_2 () Real)
(declare-fun likelihoodoutlier57 () Real)
(declare-fun y57_1_endpoint3_1 () Real)
(declare-fun |piecewise for y57_1_endpoint3_1| () Bool)
(declare-fun y57_1_endpoint2_1 () Real)
(declare-fun |piecewise for y57_1_endpoint2_1| () Bool)
(declare-fun y57_1_endpoint1_1 () Real)
(declare-fun |piecewise for y57_1_endpoint1_1| () Bool)
(declare-fun y57_1_endpoint0_2 () Real)
(declare-fun |piecewise for y57_1_endpoint0_2| () Bool)
(declare-fun y57_1_endpoint1_2 () Real)
(declare-fun |piecewise for y57_1_endpoint1_2| () Bool)
(declare-fun y57_1_endpoint2_2 () Real)
(declare-fun |piecewise for y57_1_endpoint2_2| () Bool)
(declare-fun y57_1_endpoint3_2 () Real)
(declare-fun |piecewise for y57_1_endpoint3_2| () Bool)
(declare-fun likelihoody57_1 () Real)
(declare-fun likelihoody57_2 () Real)
(declare-fun likelihoodoutlier58 () Real)
(declare-fun y58_1_endpoint3_1 () Real)
(declare-fun |piecewise for y58_1_endpoint3_1| () Bool)
(declare-fun y58_1_endpoint2_1 () Real)
(declare-fun |piecewise for y58_1_endpoint2_1| () Bool)
(declare-fun y58_1_endpoint1_1 () Real)
(declare-fun |piecewise for y58_1_endpoint1_1| () Bool)
(declare-fun y58_1_endpoint0_2 () Real)
(declare-fun |piecewise for y58_1_endpoint0_2| () Bool)
(declare-fun y58_1_endpoint1_2 () Real)
(declare-fun |piecewise for y58_1_endpoint1_2| () Bool)
(declare-fun y58_1_endpoint2_2 () Real)
(declare-fun |piecewise for y58_1_endpoint2_2| () Bool)
(declare-fun y58_1_endpoint3_2 () Real)
(declare-fun |piecewise for y58_1_endpoint3_2| () Bool)
(declare-fun likelihoody58_1 () Real)
(declare-fun likelihoody58_2 () Real)
(declare-fun likelihoodoutlier59 () Real)
(declare-fun y59_1_endpoint3_1 () Real)
(declare-fun |piecewise for y59_1_endpoint3_1| () Bool)
(declare-fun y59_1_endpoint2_1 () Real)
(declare-fun |piecewise for y59_1_endpoint2_1| () Bool)
(declare-fun y59_1_endpoint1_1 () Real)
(declare-fun |piecewise for y59_1_endpoint1_1| () Bool)
(declare-fun y59_1_endpoint0_2 () Real)
(declare-fun |piecewise for y59_1_endpoint0_2| () Bool)
(declare-fun y59_1_endpoint1_2 () Real)
(declare-fun |piecewise for y59_1_endpoint1_2| () Bool)
(declare-fun y59_1_endpoint2_2 () Real)
(declare-fun |piecewise for y59_1_endpoint2_2| () Bool)
(declare-fun y59_1_endpoint3_2 () Real)
(declare-fun |piecewise for y59_1_endpoint3_2| () Bool)
(declare-fun likelihoody59_1 () Real)
(declare-fun likelihoody59_2 () Real)
(declare-fun likelihoodoutlier60 () Real)
(declare-fun y60_1_endpoint3_1 () Real)
(declare-fun |piecewise for y60_1_endpoint3_1| () Bool)
(declare-fun y60_1_endpoint2_1 () Real)
(declare-fun |piecewise for y60_1_endpoint2_1| () Bool)
(declare-fun y60_1_endpoint1_1 () Real)
(declare-fun |piecewise for y60_1_endpoint1_1| () Bool)
(declare-fun y60_1_endpoint0_2 () Real)
(declare-fun |piecewise for y60_1_endpoint0_2| () Bool)
(declare-fun y60_1_endpoint1_2 () Real)
(declare-fun |piecewise for y60_1_endpoint1_2| () Bool)
(declare-fun y60_1_endpoint2_2 () Real)
(declare-fun |piecewise for y60_1_endpoint2_2| () Bool)
(declare-fun y60_1_endpoint3_2 () Real)
(declare-fun |piecewise for y60_1_endpoint3_2| () Bool)
(declare-fun likelihoody60_1 () Real)
(declare-fun likelihoody60_2 () Real)
(declare-fun likelihoodoutlier61 () Real)
(declare-fun y61_1_endpoint3_1 () Real)
(declare-fun |piecewise for y61_1_endpoint3_1| () Bool)
(declare-fun y61_1_endpoint2_1 () Real)
(declare-fun |piecewise for y61_1_endpoint2_1| () Bool)
(declare-fun y61_1_endpoint1_1 () Real)
(declare-fun |piecewise for y61_1_endpoint1_1| () Bool)
(declare-fun y61_1_endpoint0_2 () Real)
(declare-fun |piecewise for y61_1_endpoint0_2| () Bool)
(declare-fun y61_1_endpoint1_2 () Real)
(declare-fun |piecewise for y61_1_endpoint1_2| () Bool)
(declare-fun y61_1_endpoint2_2 () Real)
(declare-fun |piecewise for y61_1_endpoint2_2| () Bool)
(declare-fun y61_1_endpoint3_2 () Real)
(declare-fun |piecewise for y61_1_endpoint3_2| () Bool)
(declare-fun likelihoody61_1 () Real)
(declare-fun likelihoody61_2 () Real)
(declare-fun likelihoodoutlier62 () Real)
(declare-fun y62_1_endpoint3_1 () Real)
(declare-fun |piecewise for y62_1_endpoint3_1| () Bool)
(declare-fun y62_1_endpoint2_1 () Real)
(declare-fun |piecewise for y62_1_endpoint2_1| () Bool)
(declare-fun y62_1_endpoint1_1 () Real)
(declare-fun |piecewise for y62_1_endpoint1_1| () Bool)
(declare-fun y62_1_endpoint0_2 () Real)
(declare-fun |piecewise for y62_1_endpoint0_2| () Bool)
(declare-fun y62_1_endpoint1_2 () Real)
(declare-fun |piecewise for y62_1_endpoint1_2| () Bool)
(declare-fun y62_1_endpoint2_2 () Real)
(declare-fun |piecewise for y62_1_endpoint2_2| () Bool)
(declare-fun y62_1_endpoint3_2 () Real)
(declare-fun |piecewise for y62_1_endpoint3_2| () Bool)
(declare-fun likelihoody62_1 () Real)
(declare-fun likelihoody62_2 () Real)
(declare-fun likelihoodoutlier63 () Real)
(declare-fun y63_1_endpoint3_1 () Real)
(declare-fun |piecewise for y63_1_endpoint3_1| () Bool)
(declare-fun y63_1_endpoint2_1 () Real)
(declare-fun |piecewise for y63_1_endpoint2_1| () Bool)
(declare-fun y63_1_endpoint1_1 () Real)
(declare-fun |piecewise for y63_1_endpoint1_1| () Bool)
(declare-fun y63_1_endpoint0_2 () Real)
(declare-fun |piecewise for y63_1_endpoint0_2| () Bool)
(declare-fun y63_1_endpoint1_2 () Real)
(declare-fun |piecewise for y63_1_endpoint1_2| () Bool)
(declare-fun y63_1_endpoint2_2 () Real)
(declare-fun |piecewise for y63_1_endpoint2_2| () Bool)
(declare-fun y63_1_endpoint3_2 () Real)
(declare-fun |piecewise for y63_1_endpoint3_2| () Bool)
(declare-fun likelihoody63_1 () Real)
(declare-fun likelihoody63_2 () Real)
(declare-fun likelihoodoutlier64 () Real)
(declare-fun y64_1_endpoint3_1 () Real)
(declare-fun |piecewise for y64_1_endpoint3_1| () Bool)
(declare-fun y64_1_endpoint2_1 () Real)
(declare-fun |piecewise for y64_1_endpoint2_1| () Bool)
(declare-fun y64_1_endpoint1_1 () Real)
(declare-fun |piecewise for y64_1_endpoint1_1| () Bool)
(declare-fun y64_1_endpoint0_2 () Real)
(declare-fun |piecewise for y64_1_endpoint0_2| () Bool)
(declare-fun y64_1_endpoint1_2 () Real)
(declare-fun |piecewise for y64_1_endpoint1_2| () Bool)
(declare-fun y64_1_endpoint2_2 () Real)
(declare-fun |piecewise for y64_1_endpoint2_2| () Bool)
(declare-fun y64_1_endpoint3_2 () Real)
(declare-fun |piecewise for y64_1_endpoint3_2| () Bool)
(declare-fun likelihoody64_1 () Real)
(declare-fun likelihoody64_2 () Real)
(declare-fun likelihoodoutlier65 () Real)
(declare-fun y65_1_endpoint3_1 () Real)
(declare-fun |piecewise for y65_1_endpoint3_1| () Bool)
(declare-fun y65_1_endpoint2_1 () Real)
(declare-fun |piecewise for y65_1_endpoint2_1| () Bool)
(declare-fun y65_1_endpoint1_1 () Real)
(declare-fun |piecewise for y65_1_endpoint1_1| () Bool)
(declare-fun y65_1_endpoint0_2 () Real)
(declare-fun |piecewise for y65_1_endpoint0_2| () Bool)
(declare-fun y65_1_endpoint1_2 () Real)
(declare-fun |piecewise for y65_1_endpoint1_2| () Bool)
(declare-fun y65_1_endpoint2_2 () Real)
(declare-fun |piecewise for y65_1_endpoint2_2| () Bool)
(declare-fun y65_1_endpoint3_2 () Real)
(declare-fun |piecewise for y65_1_endpoint3_2| () Bool)
(declare-fun likelihoody65_1 () Real)
(declare-fun likelihoody65_2 () Real)
(declare-fun likelihoodoutlier66 () Real)
(declare-fun y66_1_endpoint3_1 () Real)
(declare-fun |piecewise for y66_1_endpoint3_1| () Bool)
(declare-fun y66_1_endpoint2_1 () Real)
(declare-fun |piecewise for y66_1_endpoint2_1| () Bool)
(declare-fun y66_1_endpoint1_1 () Real)
(declare-fun |piecewise for y66_1_endpoint1_1| () Bool)
(declare-fun y66_1_endpoint0_2 () Real)
(declare-fun |piecewise for y66_1_endpoint0_2| () Bool)
(declare-fun y66_1_endpoint1_2 () Real)
(declare-fun |piecewise for y66_1_endpoint1_2| () Bool)
(declare-fun y66_1_endpoint2_2 () Real)
(declare-fun |piecewise for y66_1_endpoint2_2| () Bool)
(declare-fun y66_1_endpoint3_2 () Real)
(declare-fun |piecewise for y66_1_endpoint3_2| () Bool)
(declare-fun likelihoody66_1 () Real)
(declare-fun likelihoody66_2 () Real)
(declare-fun likelihoodoutlier67 () Real)
(declare-fun y67_1_endpoint3_1 () Real)
(declare-fun |piecewise for y67_1_endpoint3_1| () Bool)
(declare-fun y67_1_endpoint2_1 () Real)
(declare-fun |piecewise for y67_1_endpoint2_1| () Bool)
(declare-fun y67_1_endpoint1_1 () Real)
(declare-fun |piecewise for y67_1_endpoint1_1| () Bool)
(declare-fun y67_1_endpoint0_2 () Real)
(declare-fun |piecewise for y67_1_endpoint0_2| () Bool)
(declare-fun y67_1_endpoint1_2 () Real)
(declare-fun |piecewise for y67_1_endpoint1_2| () Bool)
(declare-fun y67_1_endpoint2_2 () Real)
(declare-fun |piecewise for y67_1_endpoint2_2| () Bool)
(declare-fun y67_1_endpoint3_2 () Real)
(declare-fun |piecewise for y67_1_endpoint3_2| () Bool)
(declare-fun likelihoody67_1 () Real)
(declare-fun likelihoody67_2 () Real)
(declare-fun likelihoodoutlier68 () Real)
(declare-fun y68_1_endpoint3_1 () Real)
(declare-fun |piecewise for y68_1_endpoint3_1| () Bool)
(declare-fun y68_1_endpoint2_1 () Real)
(declare-fun |piecewise for y68_1_endpoint2_1| () Bool)
(declare-fun y68_1_endpoint1_1 () Real)
(declare-fun |piecewise for y68_1_endpoint1_1| () Bool)
(declare-fun y68_1_endpoint0_2 () Real)
(declare-fun |piecewise for y68_1_endpoint0_2| () Bool)
(declare-fun y68_1_endpoint1_2 () Real)
(declare-fun |piecewise for y68_1_endpoint1_2| () Bool)
(declare-fun y68_1_endpoint2_2 () Real)
(declare-fun |piecewise for y68_1_endpoint2_2| () Bool)
(declare-fun y68_1_endpoint3_2 () Real)
(declare-fun |piecewise for y68_1_endpoint3_2| () Bool)
(declare-fun likelihoody68_1 () Real)
(declare-fun likelihoody68_2 () Real)
(declare-fun likelihoodoutlier69 () Real)
(declare-fun y69_1_endpoint3_1 () Real)
(declare-fun |piecewise for y69_1_endpoint3_1| () Bool)
(declare-fun y69_1_endpoint2_1 () Real)
(declare-fun |piecewise for y69_1_endpoint2_1| () Bool)
(declare-fun y69_1_endpoint1_1 () Real)
(declare-fun |piecewise for y69_1_endpoint1_1| () Bool)
(declare-fun y69_1_endpoint0_2 () Real)
(declare-fun |piecewise for y69_1_endpoint0_2| () Bool)
(declare-fun y69_1_endpoint1_2 () Real)
(declare-fun |piecewise for y69_1_endpoint1_2| () Bool)
(declare-fun y69_1_endpoint2_2 () Real)
(declare-fun |piecewise for y69_1_endpoint2_2| () Bool)
(declare-fun y69_1_endpoint3_2 () Real)
(declare-fun |piecewise for y69_1_endpoint3_2| () Bool)
(declare-fun likelihoody69_1 () Real)
(declare-fun likelihoody69_2 () Real)
(declare-fun likelihoodoutlier70 () Real)
(declare-fun y70_1_endpoint3_1 () Real)
(declare-fun |piecewise for y70_1_endpoint3_1| () Bool)
(declare-fun y70_1_endpoint2_1 () Real)
(declare-fun |piecewise for y70_1_endpoint2_1| () Bool)
(declare-fun y70_1_endpoint1_1 () Real)
(declare-fun |piecewise for y70_1_endpoint1_1| () Bool)
(declare-fun y70_1_endpoint0_2 () Real)
(declare-fun |piecewise for y70_1_endpoint0_2| () Bool)
(declare-fun y70_1_endpoint1_2 () Real)
(declare-fun |piecewise for y70_1_endpoint1_2| () Bool)
(declare-fun y70_1_endpoint2_2 () Real)
(declare-fun |piecewise for y70_1_endpoint2_2| () Bool)
(declare-fun y70_1_endpoint3_2 () Real)
(declare-fun |piecewise for y70_1_endpoint3_2| () Bool)
(declare-fun likelihoody70_1 () Real)
(declare-fun likelihoody70_2 () Real)
(declare-fun likelihoodoutlier71 () Real)
(declare-fun y71_1_endpoint3_1 () Real)
(declare-fun |piecewise for y71_1_endpoint3_1| () Bool)
(declare-fun y71_1_endpoint2_1 () Real)
(declare-fun |piecewise for y71_1_endpoint2_1| () Bool)
(declare-fun y71_1_endpoint1_1 () Real)
(declare-fun |piecewise for y71_1_endpoint1_1| () Bool)
(declare-fun y71_1_endpoint0_2 () Real)
(declare-fun |piecewise for y71_1_endpoint0_2| () Bool)
(declare-fun y71_1_endpoint1_2 () Real)
(declare-fun |piecewise for y71_1_endpoint1_2| () Bool)
(declare-fun y71_1_endpoint2_2 () Real)
(declare-fun |piecewise for y71_1_endpoint2_2| () Bool)
(declare-fun y71_1_endpoint3_2 () Real)
(declare-fun |piecewise for y71_1_endpoint3_2| () Bool)
(declare-fun likelihoody71_1 () Real)
(declare-fun likelihoody71_2 () Real)
(declare-fun likelihoodoutlier72 () Real)
(declare-fun y72_1_endpoint3_1 () Real)
(declare-fun |piecewise for y72_1_endpoint3_1| () Bool)
(declare-fun y72_1_endpoint2_1 () Real)
(declare-fun |piecewise for y72_1_endpoint2_1| () Bool)
(declare-fun y72_1_endpoint1_1 () Real)
(declare-fun |piecewise for y72_1_endpoint1_1| () Bool)
(declare-fun y72_1_endpoint0_2 () Real)
(declare-fun |piecewise for y72_1_endpoint0_2| () Bool)
(declare-fun y72_1_endpoint1_2 () Real)
(declare-fun |piecewise for y72_1_endpoint1_2| () Bool)
(declare-fun y72_1_endpoint2_2 () Real)
(declare-fun |piecewise for y72_1_endpoint2_2| () Bool)
(declare-fun y72_1_endpoint3_2 () Real)
(declare-fun |piecewise for y72_1_endpoint3_2| () Bool)
(declare-fun likelihoody72_1 () Real)
(declare-fun likelihoody72_2 () Real)
(declare-fun likelihoodoutlier73 () Real)
(declare-fun y73_1_endpoint3_1 () Real)
(declare-fun |piecewise for y73_1_endpoint3_1| () Bool)
(declare-fun y73_1_endpoint2_1 () Real)
(declare-fun |piecewise for y73_1_endpoint2_1| () Bool)
(declare-fun y73_1_endpoint1_1 () Real)
(declare-fun |piecewise for y73_1_endpoint1_1| () Bool)
(declare-fun y73_1_endpoint0_2 () Real)
(declare-fun |piecewise for y73_1_endpoint0_2| () Bool)
(declare-fun y73_1_endpoint1_2 () Real)
(declare-fun |piecewise for y73_1_endpoint1_2| () Bool)
(declare-fun y73_1_endpoint2_2 () Real)
(declare-fun |piecewise for y73_1_endpoint2_2| () Bool)
(declare-fun y73_1_endpoint3_2 () Real)
(declare-fun |piecewise for y73_1_endpoint3_2| () Bool)
(declare-fun likelihoody73_1 () Real)
(declare-fun likelihoody73_2 () Real)
(declare-fun likelihoodoutlier74 () Real)
(declare-fun y74_1_endpoint3_1 () Real)
(declare-fun |piecewise for y74_1_endpoint3_1| () Bool)
(declare-fun y74_1_endpoint2_1 () Real)
(declare-fun |piecewise for y74_1_endpoint2_1| () Bool)
(declare-fun y74_1_endpoint1_1 () Real)
(declare-fun |piecewise for y74_1_endpoint1_1| () Bool)
(declare-fun y74_1_endpoint0_2 () Real)
(declare-fun |piecewise for y74_1_endpoint0_2| () Bool)
(declare-fun y74_1_endpoint1_2 () Real)
(declare-fun |piecewise for y74_1_endpoint1_2| () Bool)
(declare-fun y74_1_endpoint2_2 () Real)
(declare-fun |piecewise for y74_1_endpoint2_2| () Bool)
(declare-fun y74_1_endpoint3_2 () Real)
(declare-fun |piecewise for y74_1_endpoint3_2| () Bool)
(declare-fun likelihoody74_1 () Real)
(declare-fun likelihoody74_2 () Real)
(declare-fun likelihoodoutlier75 () Real)
(declare-fun y75_1_endpoint3_1 () Real)
(declare-fun |piecewise for y75_1_endpoint3_1| () Bool)
(declare-fun y75_1_endpoint2_1 () Real)
(declare-fun |piecewise for y75_1_endpoint2_1| () Bool)
(declare-fun y75_1_endpoint1_1 () Real)
(declare-fun |piecewise for y75_1_endpoint1_1| () Bool)
(declare-fun y75_1_endpoint0_2 () Real)
(declare-fun |piecewise for y75_1_endpoint0_2| () Bool)
(declare-fun y75_1_endpoint1_2 () Real)
(declare-fun |piecewise for y75_1_endpoint1_2| () Bool)
(declare-fun y75_1_endpoint2_2 () Real)
(declare-fun |piecewise for y75_1_endpoint2_2| () Bool)
(declare-fun y75_1_endpoint3_2 () Real)
(declare-fun |piecewise for y75_1_endpoint3_2| () Bool)
(declare-fun likelihoody75_1 () Real)
(declare-fun likelihoody75_2 () Real)
(declare-fun likelihoodoutlier76 () Real)
(declare-fun y76_1_endpoint3_1 () Real)
(declare-fun |piecewise for y76_1_endpoint3_1| () Bool)
(declare-fun y76_1_endpoint2_1 () Real)
(declare-fun |piecewise for y76_1_endpoint2_1| () Bool)
(declare-fun y76_1_endpoint1_1 () Real)
(declare-fun |piecewise for y76_1_endpoint1_1| () Bool)
(declare-fun y76_1_endpoint0_2 () Real)
(declare-fun |piecewise for y76_1_endpoint0_2| () Bool)
(declare-fun y76_1_endpoint1_2 () Real)
(declare-fun |piecewise for y76_1_endpoint1_2| () Bool)
(declare-fun y76_1_endpoint2_2 () Real)
(declare-fun |piecewise for y76_1_endpoint2_2| () Bool)
(declare-fun y76_1_endpoint3_2 () Real)
(declare-fun |piecewise for y76_1_endpoint3_2| () Bool)
(declare-fun likelihoody76_1 () Real)
(declare-fun likelihoody76_2 () Real)
(declare-fun likelihoodoutlier77 () Real)
(declare-fun y77_1_endpoint3_1 () Real)
(declare-fun |piecewise for y77_1_endpoint3_1| () Bool)
(declare-fun y77_1_endpoint2_1 () Real)
(declare-fun |piecewise for y77_1_endpoint2_1| () Bool)
(declare-fun y77_1_endpoint1_1 () Real)
(declare-fun |piecewise for y77_1_endpoint1_1| () Bool)
(declare-fun y77_1_endpoint0_2 () Real)
(declare-fun |piecewise for y77_1_endpoint0_2| () Bool)
(declare-fun y77_1_endpoint1_2 () Real)
(declare-fun |piecewise for y77_1_endpoint1_2| () Bool)
(declare-fun y77_1_endpoint2_2 () Real)
(declare-fun |piecewise for y77_1_endpoint2_2| () Bool)
(declare-fun y77_1_endpoint3_2 () Real)
(declare-fun |piecewise for y77_1_endpoint3_2| () Bool)
(declare-fun likelihoody77_1 () Real)
(declare-fun likelihoody77_2 () Real)
(declare-fun likelihoodoutlier78 () Real)
(declare-fun y78_1_endpoint3_1 () Real)
(declare-fun |piecewise for y78_1_endpoint3_1| () Bool)
(declare-fun y78_1_endpoint2_1 () Real)
(declare-fun |piecewise for y78_1_endpoint2_1| () Bool)
(declare-fun y78_1_endpoint1_1 () Real)
(declare-fun |piecewise for y78_1_endpoint1_1| () Bool)
(declare-fun y78_1_endpoint0_2 () Real)
(declare-fun |piecewise for y78_1_endpoint0_2| () Bool)
(declare-fun y78_1_endpoint1_2 () Real)
(declare-fun |piecewise for y78_1_endpoint1_2| () Bool)
(declare-fun y78_1_endpoint2_2 () Real)
(declare-fun |piecewise for y78_1_endpoint2_2| () Bool)
(declare-fun y78_1_endpoint3_2 () Real)
(declare-fun |piecewise for y78_1_endpoint3_2| () Bool)
(declare-fun likelihoody78_1 () Real)
(declare-fun likelihoody78_2 () Real)
(declare-fun likelihoodoutlier79 () Real)
(declare-fun y79_1_endpoint3_1 () Real)
(declare-fun |piecewise for y79_1_endpoint3_1| () Bool)
(declare-fun y79_1_endpoint2_1 () Real)
(declare-fun |piecewise for y79_1_endpoint2_1| () Bool)
(declare-fun y79_1_endpoint1_1 () Real)
(declare-fun |piecewise for y79_1_endpoint1_1| () Bool)
(declare-fun y79_1_endpoint0_2 () Real)
(declare-fun |piecewise for y79_1_endpoint0_2| () Bool)
(declare-fun y79_1_endpoint1_2 () Real)
(declare-fun |piecewise for y79_1_endpoint1_2| () Bool)
(declare-fun y79_1_endpoint2_2 () Real)
(declare-fun |piecewise for y79_1_endpoint2_2| () Bool)
(declare-fun y79_1_endpoint3_2 () Real)
(declare-fun |piecewise for y79_1_endpoint3_2| () Bool)
(declare-fun likelihoody79_1 () Real)
(declare-fun likelihoody79_2 () Real)
(declare-fun likelihoodoutlier80 () Real)
(declare-fun y80_1_endpoint3_1 () Real)
(declare-fun |piecewise for y80_1_endpoint3_1| () Bool)
(declare-fun y80_1_endpoint2_1 () Real)
(declare-fun |piecewise for y80_1_endpoint2_1| () Bool)
(declare-fun y80_1_endpoint1_1 () Real)
(declare-fun |piecewise for y80_1_endpoint1_1| () Bool)
(declare-fun y80_1_endpoint0_2 () Real)
(declare-fun |piecewise for y80_1_endpoint0_2| () Bool)
(declare-fun y80_1_endpoint1_2 () Real)
(declare-fun |piecewise for y80_1_endpoint1_2| () Bool)
(declare-fun y80_1_endpoint2_2 () Real)
(declare-fun |piecewise for y80_1_endpoint2_2| () Bool)
(declare-fun y80_1_endpoint3_2 () Real)
(declare-fun |piecewise for y80_1_endpoint3_2| () Bool)
(declare-fun likelihoody80_1 () Real)
(declare-fun likelihoody80_2 () Real)
(declare-fun likelihoodoutlier81 () Real)
(declare-fun y81_1_endpoint3_1 () Real)
(declare-fun |piecewise for y81_1_endpoint3_1| () Bool)
(declare-fun y81_1_endpoint2_1 () Real)
(declare-fun |piecewise for y81_1_endpoint2_1| () Bool)
(declare-fun y81_1_endpoint1_1 () Real)
(declare-fun |piecewise for y81_1_endpoint1_1| () Bool)
(declare-fun y81_1_endpoint0_2 () Real)
(declare-fun |piecewise for y81_1_endpoint0_2| () Bool)
(declare-fun y81_1_endpoint1_2 () Real)
(declare-fun |piecewise for y81_1_endpoint1_2| () Bool)
(declare-fun y81_1_endpoint2_2 () Real)
(declare-fun |piecewise for y81_1_endpoint2_2| () Bool)
(declare-fun y81_1_endpoint3_2 () Real)
(declare-fun |piecewise for y81_1_endpoint3_2| () Bool)
(declare-fun likelihoody81_1 () Real)
(declare-fun likelihoody81_2 () Real)
(declare-fun likelihoodoutlier82 () Real)
(declare-fun y82_1_endpoint3_1 () Real)
(declare-fun |piecewise for y82_1_endpoint3_1| () Bool)
(declare-fun y82_1_endpoint2_1 () Real)
(declare-fun |piecewise for y82_1_endpoint2_1| () Bool)
(declare-fun y82_1_endpoint1_1 () Real)
(declare-fun |piecewise for y82_1_endpoint1_1| () Bool)
(declare-fun y82_1_endpoint0_2 () Real)
(declare-fun |piecewise for y82_1_endpoint0_2| () Bool)
(declare-fun y82_1_endpoint1_2 () Real)
(declare-fun |piecewise for y82_1_endpoint1_2| () Bool)
(declare-fun y82_1_endpoint2_2 () Real)
(declare-fun |piecewise for y82_1_endpoint2_2| () Bool)
(declare-fun y82_1_endpoint3_2 () Real)
(declare-fun |piecewise for y82_1_endpoint3_2| () Bool)
(declare-fun likelihoody82_1 () Real)
(declare-fun likelihoody82_2 () Real)
(declare-fun likelihoodoutlier83 () Real)
(declare-fun y83_1_endpoint3_1 () Real)
(declare-fun |piecewise for y83_1_endpoint3_1| () Bool)
(declare-fun y83_1_endpoint2_1 () Real)
(declare-fun |piecewise for y83_1_endpoint2_1| () Bool)
(declare-fun y83_1_endpoint1_1 () Real)
(declare-fun |piecewise for y83_1_endpoint1_1| () Bool)
(declare-fun y83_1_endpoint0_2 () Real)
(declare-fun |piecewise for y83_1_endpoint0_2| () Bool)
(declare-fun y83_1_endpoint1_2 () Real)
(declare-fun |piecewise for y83_1_endpoint1_2| () Bool)
(declare-fun y83_1_endpoint2_2 () Real)
(declare-fun |piecewise for y83_1_endpoint2_2| () Bool)
(declare-fun y83_1_endpoint3_2 () Real)
(declare-fun |piecewise for y83_1_endpoint3_2| () Bool)
(declare-fun likelihoody83_1 () Real)
(declare-fun likelihoody83_2 () Real)
(declare-fun likelihoodoutlier84 () Real)
(declare-fun y84_1_endpoint3_1 () Real)
(declare-fun |piecewise for y84_1_endpoint3_1| () Bool)
(declare-fun y84_1_endpoint2_1 () Real)
(declare-fun |piecewise for y84_1_endpoint2_1| () Bool)
(declare-fun y84_1_endpoint1_1 () Real)
(declare-fun |piecewise for y84_1_endpoint1_1| () Bool)
(declare-fun y84_1_endpoint0_2 () Real)
(declare-fun |piecewise for y84_1_endpoint0_2| () Bool)
(declare-fun y84_1_endpoint1_2 () Real)
(declare-fun |piecewise for y84_1_endpoint1_2| () Bool)
(declare-fun y84_1_endpoint2_2 () Real)
(declare-fun |piecewise for y84_1_endpoint2_2| () Bool)
(declare-fun y84_1_endpoint3_2 () Real)
(declare-fun |piecewise for y84_1_endpoint3_2| () Bool)
(declare-fun likelihoody84_1 () Real)
(declare-fun likelihoody84_2 () Real)
(declare-fun likelihoodoutlier85 () Real)
(declare-fun y85_1_endpoint3_1 () Real)
(declare-fun |piecewise for y85_1_endpoint3_1| () Bool)
(declare-fun y85_1_endpoint2_1 () Real)
(declare-fun |piecewise for y85_1_endpoint2_1| () Bool)
(declare-fun y85_1_endpoint1_1 () Real)
(declare-fun |piecewise for y85_1_endpoint1_1| () Bool)
(declare-fun y85_1_endpoint0_2 () Real)
(declare-fun |piecewise for y85_1_endpoint0_2| () Bool)
(declare-fun y85_1_endpoint1_2 () Real)
(declare-fun |piecewise for y85_1_endpoint1_2| () Bool)
(declare-fun y85_1_endpoint2_2 () Real)
(declare-fun |piecewise for y85_1_endpoint2_2| () Bool)
(declare-fun y85_1_endpoint3_2 () Real)
(declare-fun |piecewise for y85_1_endpoint3_2| () Bool)
(declare-fun likelihoody85_1 () Real)
(declare-fun likelihoody85_2 () Real)
(declare-fun likelihoodoutlier86 () Real)
(declare-fun y86_1_endpoint3_1 () Real)
(declare-fun |piecewise for y86_1_endpoint3_1| () Bool)
(declare-fun y86_1_endpoint2_1 () Real)
(declare-fun |piecewise for y86_1_endpoint2_1| () Bool)
(declare-fun y86_1_endpoint1_1 () Real)
(declare-fun |piecewise for y86_1_endpoint1_1| () Bool)
(declare-fun y86_1_endpoint0_2 () Real)
(declare-fun |piecewise for y86_1_endpoint0_2| () Bool)
(declare-fun y86_1_endpoint1_2 () Real)
(declare-fun |piecewise for y86_1_endpoint1_2| () Bool)
(declare-fun y86_1_endpoint2_2 () Real)
(declare-fun |piecewise for y86_1_endpoint2_2| () Bool)
(declare-fun y86_1_endpoint3_2 () Real)
(declare-fun |piecewise for y86_1_endpoint3_2| () Bool)
(declare-fun likelihoody86_1 () Real)
(declare-fun likelihoody86_2 () Real)
(declare-fun likelihoodoutlier87 () Real)
(declare-fun y87_1_endpoint3_1 () Real)
(declare-fun |piecewise for y87_1_endpoint3_1| () Bool)
(declare-fun y87_1_endpoint2_1 () Real)
(declare-fun |piecewise for y87_1_endpoint2_1| () Bool)
(declare-fun y87_1_endpoint1_1 () Real)
(declare-fun |piecewise for y87_1_endpoint1_1| () Bool)
(declare-fun y87_1_endpoint0_2 () Real)
(declare-fun |piecewise for y87_1_endpoint0_2| () Bool)
(declare-fun y87_1_endpoint1_2 () Real)
(declare-fun |piecewise for y87_1_endpoint1_2| () Bool)
(declare-fun y87_1_endpoint2_2 () Real)
(declare-fun |piecewise for y87_1_endpoint2_2| () Bool)
(declare-fun y87_1_endpoint3_2 () Real)
(declare-fun |piecewise for y87_1_endpoint3_2| () Bool)
(declare-fun likelihoody87_1 () Real)
(declare-fun likelihoody87_2 () Real)
(declare-fun likelihoodoutlier88 () Real)
(declare-fun y88_1_endpoint3_1 () Real)
(declare-fun |piecewise for y88_1_endpoint3_1| () Bool)
(declare-fun y88_1_endpoint2_1 () Real)
(declare-fun |piecewise for y88_1_endpoint2_1| () Bool)
(declare-fun y88_1_endpoint1_1 () Real)
(declare-fun |piecewise for y88_1_endpoint1_1| () Bool)
(declare-fun y88_1_endpoint0_2 () Real)
(declare-fun |piecewise for y88_1_endpoint0_2| () Bool)
(declare-fun y88_1_endpoint1_2 () Real)
(declare-fun |piecewise for y88_1_endpoint1_2| () Bool)
(declare-fun y88_1_endpoint2_2 () Real)
(declare-fun |piecewise for y88_1_endpoint2_2| () Bool)
(declare-fun y88_1_endpoint3_2 () Real)
(declare-fun |piecewise for y88_1_endpoint3_2| () Bool)
(declare-fun likelihoody88_1 () Real)
(declare-fun likelihoody88_2 () Real)
(declare-fun likelihoodoutlier89 () Real)
(declare-fun y89_1_endpoint3_1 () Real)
(declare-fun |piecewise for y89_1_endpoint3_1| () Bool)
(declare-fun y89_1_endpoint2_1 () Real)
(declare-fun |piecewise for y89_1_endpoint2_1| () Bool)
(declare-fun y89_1_endpoint1_1 () Real)
(declare-fun |piecewise for y89_1_endpoint1_1| () Bool)
(declare-fun y89_1_endpoint0_2 () Real)
(declare-fun |piecewise for y89_1_endpoint0_2| () Bool)
(declare-fun y89_1_endpoint1_2 () Real)
(declare-fun |piecewise for y89_1_endpoint1_2| () Bool)
(declare-fun y89_1_endpoint2_2 () Real)
(declare-fun |piecewise for y89_1_endpoint2_2| () Bool)
(declare-fun y89_1_endpoint3_2 () Real)
(declare-fun |piecewise for y89_1_endpoint3_2| () Bool)
(declare-fun likelihoody89_1 () Real)
(declare-fun likelihoody89_2 () Real)
(declare-fun likelihoodoutlier90 () Real)
(declare-fun y90_1_endpoint3_1 () Real)
(declare-fun |piecewise for y90_1_endpoint3_1| () Bool)
(declare-fun y90_1_endpoint2_1 () Real)
(declare-fun |piecewise for y90_1_endpoint2_1| () Bool)
(declare-fun y90_1_endpoint1_1 () Real)
(declare-fun |piecewise for y90_1_endpoint1_1| () Bool)
(declare-fun y90_1_endpoint0_2 () Real)
(declare-fun |piecewise for y90_1_endpoint0_2| () Bool)
(declare-fun y90_1_endpoint1_2 () Real)
(declare-fun |piecewise for y90_1_endpoint1_2| () Bool)
(declare-fun y90_1_endpoint2_2 () Real)
(declare-fun |piecewise for y90_1_endpoint2_2| () Bool)
(declare-fun y90_1_endpoint3_2 () Real)
(declare-fun |piecewise for y90_1_endpoint3_2| () Bool)
(declare-fun likelihoody90_1 () Real)
(declare-fun likelihoody90_2 () Real)
(declare-fun likelihoodoutlier91 () Real)
(declare-fun y91_1_endpoint3_1 () Real)
(declare-fun |piecewise for y91_1_endpoint3_1| () Bool)
(declare-fun y91_1_endpoint2_1 () Real)
(declare-fun |piecewise for y91_1_endpoint2_1| () Bool)
(declare-fun y91_1_endpoint1_1 () Real)
(declare-fun |piecewise for y91_1_endpoint1_1| () Bool)
(declare-fun y91_1_endpoint0_2 () Real)
(declare-fun |piecewise for y91_1_endpoint0_2| () Bool)
(declare-fun y91_1_endpoint1_2 () Real)
(declare-fun |piecewise for y91_1_endpoint1_2| () Bool)
(declare-fun y91_1_endpoint2_2 () Real)
(declare-fun |piecewise for y91_1_endpoint2_2| () Bool)
(declare-fun y91_1_endpoint3_2 () Real)
(declare-fun |piecewise for y91_1_endpoint3_2| () Bool)
(declare-fun likelihoody91_1 () Real)
(declare-fun likelihoody91_2 () Real)
(declare-fun likelihoodoutlier92 () Real)
(declare-fun y92_1_endpoint3_1 () Real)
(declare-fun |piecewise for y92_1_endpoint3_1| () Bool)
(declare-fun y92_1_endpoint2_1 () Real)
(declare-fun |piecewise for y92_1_endpoint2_1| () Bool)
(declare-fun y92_1_endpoint1_1 () Real)
(declare-fun |piecewise for y92_1_endpoint1_1| () Bool)
(declare-fun y92_1_endpoint0_2 () Real)
(declare-fun |piecewise for y92_1_endpoint0_2| () Bool)
(declare-fun y92_1_endpoint1_2 () Real)
(declare-fun |piecewise for y92_1_endpoint1_2| () Bool)
(declare-fun y92_1_endpoint2_2 () Real)
(declare-fun |piecewise for y92_1_endpoint2_2| () Bool)
(declare-fun y92_1_endpoint3_2 () Real)
(declare-fun |piecewise for y92_1_endpoint3_2| () Bool)
(declare-fun likelihoody92_1 () Real)
(declare-fun likelihoody92_2 () Real)
(declare-fun likelihoodoutlier93 () Real)
(declare-fun y93_1_endpoint3_1 () Real)
(declare-fun |piecewise for y93_1_endpoint3_1| () Bool)
(declare-fun y93_1_endpoint2_1 () Real)
(declare-fun |piecewise for y93_1_endpoint2_1| () Bool)
(declare-fun y93_1_endpoint1_1 () Real)
(declare-fun |piecewise for y93_1_endpoint1_1| () Bool)
(declare-fun y93_1_endpoint0_2 () Real)
(declare-fun |piecewise for y93_1_endpoint0_2| () Bool)
(declare-fun y93_1_endpoint1_2 () Real)
(declare-fun |piecewise for y93_1_endpoint1_2| () Bool)
(declare-fun y93_1_endpoint2_2 () Real)
(declare-fun |piecewise for y93_1_endpoint2_2| () Bool)
(declare-fun y93_1_endpoint3_2 () Real)
(declare-fun |piecewise for y93_1_endpoint3_2| () Bool)
(declare-fun likelihoody93_1 () Real)
(declare-fun likelihoody93_2 () Real)
(declare-fun likelihoodoutlier94 () Real)
(declare-fun y94_1_endpoint3_1 () Real)
(declare-fun |piecewise for y94_1_endpoint3_1| () Bool)
(declare-fun y94_1_endpoint2_1 () Real)
(declare-fun |piecewise for y94_1_endpoint2_1| () Bool)
(declare-fun y94_1_endpoint1_1 () Real)
(declare-fun |piecewise for y94_1_endpoint1_1| () Bool)
(declare-fun y94_1_endpoint0_2 () Real)
(declare-fun |piecewise for y94_1_endpoint0_2| () Bool)
(declare-fun y94_1_endpoint1_2 () Real)
(declare-fun |piecewise for y94_1_endpoint1_2| () Bool)
(declare-fun y94_1_endpoint2_2 () Real)
(declare-fun |piecewise for y94_1_endpoint2_2| () Bool)
(declare-fun y94_1_endpoint3_2 () Real)
(declare-fun |piecewise for y94_1_endpoint3_2| () Bool)
(declare-fun likelihoody94_1 () Real)
(declare-fun likelihoody94_2 () Real)
(declare-fun likelihoodoutlier95 () Real)
(declare-fun y95_1_endpoint3_1 () Real)
(declare-fun |piecewise for y95_1_endpoint3_1| () Bool)
(declare-fun y95_1_endpoint2_1 () Real)
(declare-fun |piecewise for y95_1_endpoint2_1| () Bool)
(declare-fun y95_1_endpoint1_1 () Real)
(declare-fun |piecewise for y95_1_endpoint1_1| () Bool)
(declare-fun y95_1_endpoint0_2 () Real)
(declare-fun |piecewise for y95_1_endpoint0_2| () Bool)
(declare-fun y95_1_endpoint1_2 () Real)
(declare-fun |piecewise for y95_1_endpoint1_2| () Bool)
(declare-fun y95_1_endpoint2_2 () Real)
(declare-fun |piecewise for y95_1_endpoint2_2| () Bool)
(declare-fun y95_1_endpoint3_2 () Real)
(declare-fun |piecewise for y95_1_endpoint3_2| () Bool)
(declare-fun likelihoody95_1 () Real)
(declare-fun likelihoody95_2 () Real)
(declare-fun likelihoodoutlier96 () Real)
(declare-fun y96_1_endpoint3_1 () Real)
(declare-fun |piecewise for y96_1_endpoint3_1| () Bool)
(declare-fun y96_1_endpoint2_1 () Real)
(declare-fun |piecewise for y96_1_endpoint2_1| () Bool)
(declare-fun y96_1_endpoint1_1 () Real)
(declare-fun |piecewise for y96_1_endpoint1_1| () Bool)
(declare-fun y96_1_endpoint0_2 () Real)
(declare-fun |piecewise for y96_1_endpoint0_2| () Bool)
(declare-fun y96_1_endpoint1_2 () Real)
(declare-fun |piecewise for y96_1_endpoint1_2| () Bool)
(declare-fun y96_1_endpoint2_2 () Real)
(declare-fun |piecewise for y96_1_endpoint2_2| () Bool)
(declare-fun y96_1_endpoint3_2 () Real)
(declare-fun |piecewise for y96_1_endpoint3_2| () Bool)
(declare-fun likelihoody96_1 () Real)
(declare-fun likelihoody96_2 () Real)
(declare-fun likelihoodoutlier97 () Real)
(declare-fun y97_1_endpoint3_1 () Real)
(declare-fun |piecewise for y97_1_endpoint3_1| () Bool)
(declare-fun y97_1_endpoint2_1 () Real)
(declare-fun |piecewise for y97_1_endpoint2_1| () Bool)
(declare-fun y97_1_endpoint1_1 () Real)
(declare-fun |piecewise for y97_1_endpoint1_1| () Bool)
(declare-fun y97_1_endpoint0_2 () Real)
(declare-fun |piecewise for y97_1_endpoint0_2| () Bool)
(declare-fun y97_1_endpoint1_2 () Real)
(declare-fun |piecewise for y97_1_endpoint1_2| () Bool)
(declare-fun y97_1_endpoint2_2 () Real)
(declare-fun |piecewise for y97_1_endpoint2_2| () Bool)
(declare-fun y97_1_endpoint3_2 () Real)
(declare-fun |piecewise for y97_1_endpoint3_2| () Bool)
(declare-fun likelihoody97_1 () Real)
(declare-fun likelihoody97_2 () Real)
(declare-fun likelihoodoutlier98 () Real)
(declare-fun y98_1_endpoint3_1 () Real)
(declare-fun |piecewise for y98_1_endpoint3_1| () Bool)
(declare-fun y98_1_endpoint2_1 () Real)
(declare-fun |piecewise for y98_1_endpoint2_1| () Bool)
(declare-fun y98_1_endpoint1_1 () Real)
(declare-fun |piecewise for y98_1_endpoint1_1| () Bool)
(declare-fun y98_1_endpoint0_2 () Real)
(declare-fun |piecewise for y98_1_endpoint0_2| () Bool)
(declare-fun y98_1_endpoint1_2 () Real)
(declare-fun |piecewise for y98_1_endpoint1_2| () Bool)
(declare-fun y98_1_endpoint2_2 () Real)
(declare-fun |piecewise for y98_1_endpoint2_2| () Bool)
(declare-fun y98_1_endpoint3_2 () Real)
(declare-fun |piecewise for y98_1_endpoint3_2| () Bool)
(declare-fun likelihoody98_1 () Real)
(declare-fun likelihoody98_2 () Real)
(declare-fun likelihoodoutlier99 () Real)
(declare-fun y99_1_endpoint3_1 () Real)
(declare-fun |piecewise for y99_1_endpoint3_1| () Bool)
(declare-fun y99_1_endpoint2_1 () Real)
(declare-fun |piecewise for y99_1_endpoint2_1| () Bool)
(declare-fun y99_1_endpoint1_1 () Real)
(declare-fun |piecewise for y99_1_endpoint1_1| () Bool)
(declare-fun y99_1_endpoint0_2 () Real)
(declare-fun |piecewise for y99_1_endpoint0_2| () Bool)
(declare-fun y99_1_endpoint1_2 () Real)
(declare-fun |piecewise for y99_1_endpoint1_2| () Bool)
(declare-fun y99_1_endpoint2_2 () Real)
(declare-fun |piecewise for y99_1_endpoint2_2| () Bool)
(declare-fun y99_1_endpoint3_2 () Real)
(declare-fun |piecewise for y99_1_endpoint3_2| () Bool)
(declare-fun likelihoody99_1 () Real)
(declare-fun likelihoody99_2 () Real)
(declare-fun likelihoodoutlier100 () Real)
(declare-fun y100_1_endpoint3_1 () Real)
(declare-fun |piecewise for y100_1_endpoint3_1| () Bool)
(declare-fun y100_1_endpoint2_1 () Real)
(declare-fun |piecewise for y100_1_endpoint2_1| () Bool)
(declare-fun y100_1_endpoint1_1 () Real)
(declare-fun |piecewise for y100_1_endpoint1_1| () Bool)
(declare-fun y100_1_endpoint0_2 () Real)
(declare-fun |piecewise for y100_1_endpoint0_2| () Bool)
(declare-fun y100_1_endpoint1_2 () Real)
(declare-fun |piecewise for y100_1_endpoint1_2| () Bool)
(declare-fun y100_1_endpoint2_2 () Real)
(declare-fun |piecewise for y100_1_endpoint2_2| () Bool)
(declare-fun y100_1_endpoint3_2 () Real)
(declare-fun |piecewise for y100_1_endpoint3_2| () Bool)
(declare-fun likelihoody100_1 () Real)
(declare-fun likelihoody100_2 () Real)
(declare-fun likelihoody1 () Real)
(declare-fun alivey1 () Bool)
(declare-fun likelihoody2 () Real)
(declare-fun alivey2 () Bool)
(declare-fun likelihoody3 () Real)
(declare-fun alivey3 () Bool)
(declare-fun likelihoody4 () Real)
(declare-fun alivey4 () Bool)
(declare-fun likelihoody5 () Real)
(declare-fun alivey5 () Bool)
(declare-fun likelihoody6 () Real)
(declare-fun alivey6 () Bool)
(declare-fun likelihoody7 () Real)
(declare-fun alivey7 () Bool)
(declare-fun likelihoody8 () Real)
(declare-fun alivey8 () Bool)
(declare-fun likelihoody9 () Real)
(declare-fun alivey9 () Bool)
(declare-fun likelihoody10 () Real)
(declare-fun alivey10 () Bool)
(declare-fun likelihoody11 () Real)
(declare-fun alivey11 () Bool)
(declare-fun likelihoody12 () Real)
(declare-fun alivey12 () Bool)
(declare-fun likelihoody13 () Real)
(declare-fun alivey13 () Bool)
(declare-fun likelihoody14 () Real)
(declare-fun alivey14 () Bool)
(declare-fun likelihoody15 () Real)
(declare-fun alivey15 () Bool)
(declare-fun likelihoody16 () Real)
(declare-fun alivey16 () Bool)
(declare-fun likelihoody17 () Real)
(declare-fun alivey17 () Bool)
(declare-fun likelihoody18 () Real)
(declare-fun alivey18 () Bool)
(declare-fun likelihoody19 () Real)
(declare-fun alivey19 () Bool)
(declare-fun likelihoody20 () Real)
(declare-fun alivey20 () Bool)
(declare-fun likelihoody21 () Real)
(declare-fun alivey21 () Bool)
(declare-fun likelihoody22 () Real)
(declare-fun alivey22 () Bool)
(declare-fun likelihoody23 () Real)
(declare-fun alivey23 () Bool)
(declare-fun likelihoody24 () Real)
(declare-fun alivey24 () Bool)
(declare-fun likelihoody25 () Real)
(declare-fun alivey25 () Bool)
(declare-fun likelihoody26 () Real)
(declare-fun alivey26 () Bool)
(declare-fun likelihoody27 () Real)
(declare-fun alivey27 () Bool)
(declare-fun likelihoody28 () Real)
(declare-fun alivey28 () Bool)
(declare-fun likelihoody29 () Real)
(declare-fun alivey29 () Bool)
(declare-fun likelihoody30 () Real)
(declare-fun alivey30 () Bool)
(declare-fun likelihoody31 () Real)
(declare-fun alivey31 () Bool)
(declare-fun likelihoody32 () Real)
(declare-fun alivey32 () Bool)
(declare-fun likelihoody33 () Real)
(declare-fun alivey33 () Bool)
(declare-fun likelihoody34 () Real)
(declare-fun alivey34 () Bool)
(declare-fun likelihoody35 () Real)
(declare-fun alivey35 () Bool)
(declare-fun likelihoody36 () Real)
(declare-fun alivey36 () Bool)
(declare-fun likelihoody37 () Real)
(declare-fun alivey37 () Bool)
(declare-fun likelihoody38 () Real)
(declare-fun alivey38 () Bool)
(declare-fun likelihoody39 () Real)
(declare-fun alivey39 () Bool)
(declare-fun likelihoody40 () Real)
(declare-fun alivey40 () Bool)
(declare-fun likelihoody41 () Real)
(declare-fun alivey41 () Bool)
(declare-fun likelihoody42 () Real)
(declare-fun alivey42 () Bool)
(declare-fun likelihoody43 () Real)
(declare-fun alivey43 () Bool)
(declare-fun likelihoody44 () Real)
(declare-fun alivey44 () Bool)
(declare-fun likelihoody45 () Real)
(declare-fun alivey45 () Bool)
(declare-fun likelihoody46 () Real)
(declare-fun alivey46 () Bool)
(declare-fun likelihoody47 () Real)
(declare-fun alivey47 () Bool)
(declare-fun likelihoody48 () Real)
(declare-fun alivey48 () Bool)
(declare-fun likelihoody49 () Real)
(declare-fun alivey49 () Bool)
(declare-fun likelihoody50 () Real)
(declare-fun alivey50 () Bool)
(declare-fun likelihoody51 () Real)
(declare-fun alivey51 () Bool)
(declare-fun likelihoody52 () Real)
(declare-fun alivey52 () Bool)
(declare-fun likelihoody53 () Real)
(declare-fun alivey53 () Bool)
(declare-fun likelihoody54 () Real)
(declare-fun alivey54 () Bool)
(declare-fun likelihoody55 () Real)
(declare-fun alivey55 () Bool)
(declare-fun likelihoody56 () Real)
(declare-fun alivey56 () Bool)
(declare-fun likelihoody57 () Real)
(declare-fun alivey57 () Bool)
(declare-fun likelihoody58 () Real)
(declare-fun alivey58 () Bool)
(declare-fun likelihoody59 () Real)
(declare-fun alivey59 () Bool)
(declare-fun likelihoody60 () Real)
(declare-fun alivey60 () Bool)
(declare-fun likelihoody61 () Real)
(declare-fun alivey61 () Bool)
(declare-fun likelihoody62 () Real)
(declare-fun alivey62 () Bool)
(declare-fun likelihoody63 () Real)
(declare-fun alivey63 () Bool)
(declare-fun likelihoody64 () Real)
(declare-fun alivey64 () Bool)
(declare-fun likelihoody65 () Real)
(declare-fun alivey65 () Bool)
(declare-fun likelihoody66 () Real)
(declare-fun alivey66 () Bool)
(declare-fun likelihoody67 () Real)
(declare-fun alivey67 () Bool)
(declare-fun likelihoody68 () Real)
(declare-fun alivey68 () Bool)
(declare-fun likelihoody69 () Real)
(declare-fun alivey69 () Bool)
(declare-fun likelihoody70 () Real)
(declare-fun alivey70 () Bool)
(declare-fun likelihoody71 () Real)
(declare-fun alivey71 () Bool)
(declare-fun likelihoody72 () Real)
(declare-fun alivey72 () Bool)
(declare-fun likelihoody73 () Real)
(declare-fun alivey73 () Bool)
(declare-fun likelihoody74 () Real)
(declare-fun alivey74 () Bool)
(declare-fun likelihoody75 () Real)
(declare-fun alivey75 () Bool)
(declare-fun likelihoody76 () Real)
(declare-fun alivey76 () Bool)
(declare-fun likelihoody77 () Real)
(declare-fun alivey77 () Bool)
(declare-fun likelihoody78 () Real)
(declare-fun alivey78 () Bool)
(declare-fun likelihoody79 () Real)
(declare-fun alivey79 () Bool)
(declare-fun likelihoody80 () Real)
(declare-fun alivey80 () Bool)
(declare-fun likelihoody81 () Real)
(declare-fun alivey81 () Bool)
(declare-fun likelihoody82 () Real)
(declare-fun alivey82 () Bool)
(declare-fun likelihoody83 () Real)
(declare-fun alivey83 () Bool)
(declare-fun likelihoody84 () Real)
(declare-fun alivey84 () Bool)
(declare-fun likelihoody85 () Real)
(declare-fun alivey85 () Bool)
(declare-fun likelihoody86 () Real)
(declare-fun alivey86 () Bool)
(declare-fun likelihoody87 () Real)
(declare-fun alivey87 () Bool)
(declare-fun likelihoody88 () Real)
(declare-fun alivey88 () Bool)
(declare-fun likelihoody89 () Real)
(declare-fun alivey89 () Bool)
(declare-fun likelihoody90 () Real)
(declare-fun alivey90 () Bool)
(declare-fun likelihoody91 () Real)
(declare-fun alivey91 () Bool)
(declare-fun likelihoody92 () Real)
(declare-fun alivey92 () Bool)
(declare-fun likelihoody93 () Real)
(declare-fun alivey93 () Bool)
(declare-fun likelihoody94 () Real)
(declare-fun alivey94 () Bool)
(declare-fun likelihoody95 () Real)
(declare-fun alivey95 () Bool)
(declare-fun likelihoody96 () Real)
(declare-fun alivey96 () Bool)
(declare-fun likelihoody97 () Real)
(declare-fun alivey97 () Bool)
(declare-fun likelihoody98 () Real)
(declare-fun alivey98 () Bool)
(declare-fun likelihoody99 () Real)
(declare-fun alivey99 () Bool)
(declare-fun likelihoody100 () Real)
(declare-fun alivey100 () Bool)
(declare-fun trace_prob () Real)
(assert
 (= alivenoise true))
(assert
 (= aliveintercept true))
(assert
 (= aliveslope true))
(assert
 (= aliveproboutlier true))
(assert
 (= aliveoutlier1 true))
(assert
 (let (($x18 (= outlier1 0)))
 (= alivey1_1 $x18)))
(assert
 (= alivey1_2 (and (distinct outlier1 0) true)))
(assert
 (= aliveoutlier2 true))
(assert
 (let (($x27 (= outlier2 0)))
 (= alivey2_1 $x27)))
(assert
 (= alivey2_2 (and (distinct outlier2 0) true)))
(assert
 (= aliveoutlier3 true))
(assert
 (let (($x36 (= outlier3 0)))
 (= alivey3_1 $x36)))
(assert
 (= alivey3_2 (and (distinct outlier3 0) true)))
(assert
 (= aliveoutlier4 true))
(assert
 (let (($x45 (= outlier4 0)))
 (= alivey4_1 $x45)))
(assert
 (= alivey4_2 (and (distinct outlier4 0) true)))
(assert
 (= aliveoutlier5 true))
(assert
 (let (($x54 (= outlier5 0)))
 (= alivey5_1 $x54)))
(assert
 (= alivey5_2 (and (distinct outlier5 0) true)))
(assert
 (= aliveoutlier6 true))
(assert
 (let (($x63 (= outlier6 0)))
 (= alivey6_1 $x63)))
(assert
 (= alivey6_2 (and (distinct outlier6 0) true)))
(assert
 (= aliveoutlier7 true))
(assert
 (let (($x72 (= outlier7 0)))
 (= alivey7_1 $x72)))
(assert
 (= alivey7_2 (and (distinct outlier7 0) true)))
(assert
 (= aliveoutlier8 true))
(assert
 (let (($x81 (= outlier8 0)))
 (= alivey8_1 $x81)))
(assert
 (= alivey8_2 (and (distinct outlier8 0) true)))
(assert
 (= aliveoutlier9 true))
(assert
 (let (($x90 (= outlier9 0)))
 (= alivey9_1 $x90)))
(assert
 (= alivey9_2 (and (distinct outlier9 0) true)))
(assert
 (= aliveoutlier10 true))
(assert
 (let (($x99 (= outlier10 0)))
 (= alivey10_1 $x99)))
(assert
 (= alivey10_2 (and (distinct outlier10 0) true)))
(assert
 (= aliveoutlier11 true))
(assert
 (let (($x108 (= outlier11 0)))
 (= alivey11_1 $x108)))
(assert
 (= alivey11_2 (and (distinct outlier11 0) true)))
(assert
 (= aliveoutlier12 true))
(assert
 (let (($x117 (= outlier12 0)))
 (= alivey12_1 $x117)))
(assert
 (= alivey12_2 (and (distinct outlier12 0) true)))
(assert
 (= aliveoutlier13 true))
(assert
 (let (($x126 (= outlier13 0)))
 (= alivey13_1 $x126)))
(assert
 (= alivey13_2 (and (distinct outlier13 0) true)))
(assert
 (= aliveoutlier14 true))
(assert
 (let (($x135 (= outlier14 0)))
 (= alivey14_1 $x135)))
(assert
 (= alivey14_2 (and (distinct outlier14 0) true)))
(assert
 (= aliveoutlier15 true))
(assert
 (let (($x144 (= outlier15 0)))
 (= alivey15_1 $x144)))
(assert
 (= alivey15_2 (and (distinct outlier15 0) true)))
(assert
 (= aliveoutlier16 true))
(assert
 (let (($x153 (= outlier16 0)))
 (= alivey16_1 $x153)))
(assert
 (= alivey16_2 (and (distinct outlier16 0) true)))
(assert
 (= aliveoutlier17 true))
(assert
 (let (($x162 (= outlier17 0)))
 (= alivey17_1 $x162)))
(assert
 (= alivey17_2 (and (distinct outlier17 0) true)))
(assert
 (= aliveoutlier18 true))
(assert
 (let (($x171 (= outlier18 0)))
 (= alivey18_1 $x171)))
(assert
 (= alivey18_2 (and (distinct outlier18 0) true)))
(assert
 (= aliveoutlier19 true))
(assert
 (let (($x180 (= outlier19 0)))
 (= alivey19_1 $x180)))
(assert
 (= alivey19_2 (and (distinct outlier19 0) true)))
(assert
 (= aliveoutlier20 true))
(assert
 (let (($x189 (= outlier20 0)))
 (= alivey20_1 $x189)))
(assert
 (= alivey20_2 (and (distinct outlier20 0) true)))
(assert
 (= aliveoutlier21 true))
(assert
 (let (($x198 (= outlier21 0)))
 (= alivey21_1 $x198)))
(assert
 (= alivey21_2 (and (distinct outlier21 0) true)))
(assert
 (= aliveoutlier22 true))
(assert
 (let (($x207 (= outlier22 0)))
 (= alivey22_1 $x207)))
(assert
 (= alivey22_2 (and (distinct outlier22 0) true)))
(assert
 (= aliveoutlier23 true))
(assert
 (let (($x216 (= outlier23 0)))
 (= alivey23_1 $x216)))
(assert
 (= alivey23_2 (and (distinct outlier23 0) true)))
(assert
 (= aliveoutlier24 true))
(assert
 (let (($x225 (= outlier24 0)))
 (= alivey24_1 $x225)))
(assert
 (= alivey24_2 (and (distinct outlier24 0) true)))
(assert
 (= aliveoutlier25 true))
(assert
 (let (($x234 (= outlier25 0)))
 (= alivey25_1 $x234)))
(assert
 (= alivey25_2 (and (distinct outlier25 0) true)))
(assert
 (= aliveoutlier26 true))
(assert
 (let (($x243 (= outlier26 0)))
 (= alivey26_1 $x243)))
(assert
 (= alivey26_2 (and (distinct outlier26 0) true)))
(assert
 (= aliveoutlier27 true))
(assert
 (let (($x252 (= outlier27 0)))
 (= alivey27_1 $x252)))
(assert
 (= alivey27_2 (and (distinct outlier27 0) true)))
(assert
 (= aliveoutlier28 true))
(assert
 (let (($x261 (= outlier28 0)))
 (= alivey28_1 $x261)))
(assert
 (= alivey28_2 (and (distinct outlier28 0) true)))
(assert
 (= aliveoutlier29 true))
(assert
 (let (($x270 (= outlier29 0)))
 (= alivey29_1 $x270)))
(assert
 (= alivey29_2 (and (distinct outlier29 0) true)))
(assert
 (= aliveoutlier30 true))
(assert
 (let (($x279 (= outlier30 0)))
 (= alivey30_1 $x279)))
(assert
 (= alivey30_2 (and (distinct outlier30 0) true)))
(assert
 (= aliveoutlier31 true))
(assert
 (let (($x288 (= outlier31 0)))
 (= alivey31_1 $x288)))
(assert
 (= alivey31_2 (and (distinct outlier31 0) true)))
(assert
 (= aliveoutlier32 true))
(assert
 (let (($x297 (= outlier32 0)))
 (= alivey32_1 $x297)))
(assert
 (= alivey32_2 (and (distinct outlier32 0) true)))
(assert
 (= aliveoutlier33 true))
(assert
 (let (($x306 (= outlier33 0)))
 (= alivey33_1 $x306)))
(assert
 (= alivey33_2 (and (distinct outlier33 0) true)))
(assert
 (= aliveoutlier34 true))
(assert
 (let (($x315 (= outlier34 0)))
 (= alivey34_1 $x315)))
(assert
 (= alivey34_2 (and (distinct outlier34 0) true)))
(assert
 (= aliveoutlier35 true))
(assert
 (let (($x324 (= outlier35 0)))
 (= alivey35_1 $x324)))
(assert
 (= alivey35_2 (and (distinct outlier35 0) true)))
(assert
 (= aliveoutlier36 true))
(assert
 (let (($x333 (= outlier36 0)))
 (= alivey36_1 $x333)))
(assert
 (= alivey36_2 (and (distinct outlier36 0) true)))
(assert
 (= aliveoutlier37 true))
(assert
 (let (($x342 (= outlier37 0)))
 (= alivey37_1 $x342)))
(assert
 (= alivey37_2 (and (distinct outlier37 0) true)))
(assert
 (= aliveoutlier38 true))
(assert
 (let (($x351 (= outlier38 0)))
 (= alivey38_1 $x351)))
(assert
 (= alivey38_2 (and (distinct outlier38 0) true)))
(assert
 (= aliveoutlier39 true))
(assert
 (let (($x360 (= outlier39 0)))
 (= alivey39_1 $x360)))
(assert
 (= alivey39_2 (and (distinct outlier39 0) true)))
(assert
 (= aliveoutlier40 true))
(assert
 (let (($x369 (= outlier40 0)))
 (= alivey40_1 $x369)))
(assert
 (= alivey40_2 (and (distinct outlier40 0) true)))
(assert
 (= aliveoutlier41 true))
(assert
 (let (($x378 (= outlier41 0)))
 (= alivey41_1 $x378)))
(assert
 (= alivey41_2 (and (distinct outlier41 0) true)))
(assert
 (= aliveoutlier42 true))
(assert
 (let (($x387 (= outlier42 0)))
 (= alivey42_1 $x387)))
(assert
 (= alivey42_2 (and (distinct outlier42 0) true)))
(assert
 (= aliveoutlier43 true))
(assert
 (let (($x396 (= outlier43 0)))
 (= alivey43_1 $x396)))
(assert
 (= alivey43_2 (and (distinct outlier43 0) true)))
(assert
 (= aliveoutlier44 true))
(assert
 (let (($x405 (= outlier44 0)))
 (= alivey44_1 $x405)))
(assert
 (= alivey44_2 (and (distinct outlier44 0) true)))
(assert
 (= aliveoutlier45 true))
(assert
 (let (($x414 (= outlier45 0)))
 (= alivey45_1 $x414)))
(assert
 (= alivey45_2 (and (distinct outlier45 0) true)))
(assert
 (= aliveoutlier46 true))
(assert
 (let (($x423 (= outlier46 0)))
 (= alivey46_1 $x423)))
(assert
 (= alivey46_2 (and (distinct outlier46 0) true)))
(assert
 (= aliveoutlier47 true))
(assert
 (let (($x432 (= outlier47 0)))
 (= alivey47_1 $x432)))
(assert
 (= alivey47_2 (and (distinct outlier47 0) true)))
(assert
 (= aliveoutlier48 true))
(assert
 (let (($x441 (= outlier48 0)))
 (= alivey48_1 $x441)))
(assert
 (= alivey48_2 (and (distinct outlier48 0) true)))
(assert
 (= aliveoutlier49 true))
(assert
 (let (($x450 (= outlier49 0)))
 (= alivey49_1 $x450)))
(assert
 (= alivey49_2 (and (distinct outlier49 0) true)))
(assert
 (= aliveoutlier50 true))
(assert
 (let (($x459 (= outlier50 0)))
 (= alivey50_1 $x459)))
(assert
 (= alivey50_2 (and (distinct outlier50 0) true)))
(assert
 (= aliveoutlier51 true))
(assert
 (let (($x468 (= outlier51 0)))
 (= alivey51_1 $x468)))
(assert
 (= alivey51_2 (and (distinct outlier51 0) true)))
(assert
 (= aliveoutlier52 true))
(assert
 (let (($x477 (= outlier52 0)))
 (= alivey52_1 $x477)))
(assert
 (= alivey52_2 (and (distinct outlier52 0) true)))
(assert
 (= aliveoutlier53 true))
(assert
 (let (($x486 (= outlier53 0)))
 (= alivey53_1 $x486)))
(assert
 (= alivey53_2 (and (distinct outlier53 0) true)))
(assert
 (= aliveoutlier54 true))
(assert
 (let (($x495 (= outlier54 0)))
 (= alivey54_1 $x495)))
(assert
 (= alivey54_2 (and (distinct outlier54 0) true)))
(assert
 (= aliveoutlier55 true))
(assert
 (let (($x504 (= outlier55 0)))
 (= alivey55_1 $x504)))
(assert
 (= alivey55_2 (and (distinct outlier55 0) true)))
(assert
 (= aliveoutlier56 true))
(assert
 (let (($x513 (= outlier56 0)))
 (= alivey56_1 $x513)))
(assert
 (= alivey56_2 (and (distinct outlier56 0) true)))
(assert
 (= aliveoutlier57 true))
(assert
 (let (($x522 (= outlier57 0)))
 (= alivey57_1 $x522)))
(assert
 (= alivey57_2 (and (distinct outlier57 0) true)))
(assert
 (= aliveoutlier58 true))
(assert
 (let (($x531 (= outlier58 0)))
 (= alivey58_1 $x531)))
(assert
 (= alivey58_2 (and (distinct outlier58 0) true)))
(assert
 (= aliveoutlier59 true))
(assert
 (let (($x540 (= outlier59 0)))
 (= alivey59_1 $x540)))
(assert
 (= alivey59_2 (and (distinct outlier59 0) true)))
(assert
 (= aliveoutlier60 true))
(assert
 (let (($x549 (= outlier60 0)))
 (= alivey60_1 $x549)))
(assert
 (= alivey60_2 (and (distinct outlier60 0) true)))
(assert
 (= aliveoutlier61 true))
(assert
 (let (($x558 (= outlier61 0)))
 (= alivey61_1 $x558)))
(assert
 (= alivey61_2 (and (distinct outlier61 0) true)))
(assert
 (= aliveoutlier62 true))
(assert
 (let (($x567 (= outlier62 0)))
 (= alivey62_1 $x567)))
(assert
 (= alivey62_2 (and (distinct outlier62 0) true)))
(assert
 (= aliveoutlier63 true))
(assert
 (let (($x576 (= outlier63 0)))
 (= alivey63_1 $x576)))
(assert
 (= alivey63_2 (and (distinct outlier63 0) true)))
(assert
 (= aliveoutlier64 true))
(assert
 (let (($x585 (= outlier64 0)))
 (= alivey64_1 $x585)))
(assert
 (= alivey64_2 (and (distinct outlier64 0) true)))
(assert
 (= aliveoutlier65 true))
(assert
 (let (($x594 (= outlier65 0)))
 (= alivey65_1 $x594)))
(assert
 (= alivey65_2 (and (distinct outlier65 0) true)))
(assert
 (= aliveoutlier66 true))
(assert
 (let (($x603 (= outlier66 0)))
 (= alivey66_1 $x603)))
(assert
 (= alivey66_2 (and (distinct outlier66 0) true)))
(assert
 (= aliveoutlier67 true))
(assert
 (let (($x612 (= outlier67 0)))
 (= alivey67_1 $x612)))
(assert
 (= alivey67_2 (and (distinct outlier67 0) true)))
(assert
 (= aliveoutlier68 true))
(assert
 (let (($x621 (= outlier68 0)))
 (= alivey68_1 $x621)))
(assert
 (= alivey68_2 (and (distinct outlier68 0) true)))
(assert
 (= aliveoutlier69 true))
(assert
 (let (($x630 (= outlier69 0)))
 (= alivey69_1 $x630)))
(assert
 (= alivey69_2 (and (distinct outlier69 0) true)))
(assert
 (= aliveoutlier70 true))
(assert
 (let (($x639 (= outlier70 0)))
 (= alivey70_1 $x639)))
(assert
 (= alivey70_2 (and (distinct outlier70 0) true)))
(assert
 (= aliveoutlier71 true))
(assert
 (let (($x648 (= outlier71 0)))
 (= alivey71_1 $x648)))
(assert
 (= alivey71_2 (and (distinct outlier71 0) true)))
(assert
 (= aliveoutlier72 true))
(assert
 (let (($x657 (= outlier72 0)))
 (= alivey72_1 $x657)))
(assert
 (= alivey72_2 (and (distinct outlier72 0) true)))
(assert
 (= aliveoutlier73 true))
(assert
 (let (($x666 (= outlier73 0)))
 (= alivey73_1 $x666)))
(assert
 (= alivey73_2 (and (distinct outlier73 0) true)))
(assert
 (= aliveoutlier74 true))
(assert
 (let (($x675 (= outlier74 0)))
 (= alivey74_1 $x675)))
(assert
 (= alivey74_2 (and (distinct outlier74 0) true)))
(assert
 (= aliveoutlier75 true))
(assert
 (let (($x684 (= outlier75 0)))
 (= alivey75_1 $x684)))
(assert
 (= alivey75_2 (and (distinct outlier75 0) true)))
(assert
 (= aliveoutlier76 true))
(assert
 (let (($x693 (= outlier76 0)))
 (= alivey76_1 $x693)))
(assert
 (= alivey76_2 (and (distinct outlier76 0) true)))
(assert
 (= aliveoutlier77 true))
(assert
 (let (($x702 (= outlier77 0)))
 (= alivey77_1 $x702)))
(assert
 (= alivey77_2 (and (distinct outlier77 0) true)))
(assert
 (= aliveoutlier78 true))
(assert
 (let (($x711 (= outlier78 0)))
 (= alivey78_1 $x711)))
(assert
 (= alivey78_2 (and (distinct outlier78 0) true)))
(assert
 (= aliveoutlier79 true))
(assert
 (let (($x720 (= outlier79 0)))
 (= alivey79_1 $x720)))
(assert
 (= alivey79_2 (and (distinct outlier79 0) true)))
(assert
 (= aliveoutlier80 true))
(assert
 (let (($x729 (= outlier80 0)))
 (= alivey80_1 $x729)))
(assert
 (= alivey80_2 (and (distinct outlier80 0) true)))
(assert
 (= aliveoutlier81 true))
(assert
 (let (($x738 (= outlier81 0)))
 (= alivey81_1 $x738)))
(assert
 (= alivey81_2 (and (distinct outlier81 0) true)))
(assert
 (= aliveoutlier82 true))
(assert
 (let (($x747 (= outlier82 0)))
 (= alivey82_1 $x747)))
(assert
 (= alivey82_2 (and (distinct outlier82 0) true)))
(assert
 (= aliveoutlier83 true))
(assert
 (let (($x756 (= outlier83 0)))
 (= alivey83_1 $x756)))
(assert
 (= alivey83_2 (and (distinct outlier83 0) true)))
(assert
 (= aliveoutlier84 true))
(assert
 (let (($x765 (= outlier84 0)))
 (= alivey84_1 $x765)))
(assert
 (= alivey84_2 (and (distinct outlier84 0) true)))
(assert
 (= aliveoutlier85 true))
(assert
 (let (($x774 (= outlier85 0)))
 (= alivey85_1 $x774)))
(assert
 (= alivey85_2 (and (distinct outlier85 0) true)))
(assert
 (= aliveoutlier86 true))
(assert
 (let (($x783 (= outlier86 0)))
 (= alivey86_1 $x783)))
(assert
 (= alivey86_2 (and (distinct outlier86 0) true)))
(assert
 (= aliveoutlier87 true))
(assert
 (let (($x792 (= outlier87 0)))
 (= alivey87_1 $x792)))
(assert
 (= alivey87_2 (and (distinct outlier87 0) true)))
(assert
 (= aliveoutlier88 true))
(assert
 (let (($x801 (= outlier88 0)))
 (= alivey88_1 $x801)))
(assert
 (= alivey88_2 (and (distinct outlier88 0) true)))
(assert
 (= aliveoutlier89 true))
(assert
 (let (($x810 (= outlier89 0)))
 (= alivey89_1 $x810)))
(assert
 (= alivey89_2 (and (distinct outlier89 0) true)))
(assert
 (= aliveoutlier90 true))
(assert
 (let (($x819 (= outlier90 0)))
 (= alivey90_1 $x819)))
(assert
 (= alivey90_2 (and (distinct outlier90 0) true)))
(assert
 (= aliveoutlier91 true))
(assert
 (let (($x828 (= outlier91 0)))
 (= alivey91_1 $x828)))
(assert
 (= alivey91_2 (and (distinct outlier91 0) true)))
(assert
 (= aliveoutlier92 true))
(assert
 (let (($x837 (= outlier92 0)))
 (= alivey92_1 $x837)))
(assert
 (= alivey92_2 (and (distinct outlier92 0) true)))
(assert
 (= aliveoutlier93 true))
(assert
 (let (($x846 (= outlier93 0)))
 (= alivey93_1 $x846)))
(assert
 (= alivey93_2 (and (distinct outlier93 0) true)))
(assert
 (= aliveoutlier94 true))
(assert
 (let (($x855 (= outlier94 0)))
 (= alivey94_1 $x855)))
(assert
 (= alivey94_2 (and (distinct outlier94 0) true)))
(assert
 (= aliveoutlier95 true))
(assert
 (let (($x864 (= outlier95 0)))
 (= alivey95_1 $x864)))
(assert
 (= alivey95_2 (and (distinct outlier95 0) true)))
(assert
 (= aliveoutlier96 true))
(assert
 (let (($x873 (= outlier96 0)))
 (= alivey96_1 $x873)))
(assert
 (= alivey96_2 (and (distinct outlier96 0) true)))
(assert
 (= aliveoutlier97 true))
(assert
 (let (($x882 (= outlier97 0)))
 (= alivey97_1 $x882)))
(assert
 (= alivey97_2 (and (distinct outlier97 0) true)))
(assert
 (= aliveoutlier98 true))
(assert
 (let (($x891 (= outlier98 0)))
 (= alivey98_1 $x891)))
(assert
 (= alivey98_2 (and (distinct outlier98 0) true)))
(assert
 (= aliveoutlier99 true))
(assert
 (let (($x900 (= outlier99 0)))
 (= alivey99_1 $x900)))
(assert
 (= alivey99_2 (and (distinct outlier99 0) true)))
(assert
 (= aliveoutlier100 true))
(assert
 (let (($x909 (= outlier100 0)))
 (= alivey100_1 $x909)))
(assert
 (= alivey100_2 (and (distinct outlier100 0) true)))
(assert
 (= x1 (- 5.0)))
(assert
 (= x2 (- (/ 4898989898989899.0 1000000000000000.0))))
(assert
 (= x3 (- (/ 2398989898989899.0 500000000000000.0))))
(assert
 (= x4 (- (/ 4696969696969697.0 1000000000000000.0))))
(assert
 (= x5 (- (/ 1148989898989899.0 250000000000000.0))))
(assert
 (= x6 (- (/ 898989898989899.0 200000000000000.0))))
(assert
 (= x7 (- (/ 2196969696969697.0 500000000000000.0))))
(assert
 (= x8 (- (/ 4292929292929293.0 1000000000000000.0))))
(assert
 (= x9 (- (/ 523989898989899.0 125000000000000.0))))
(assert
 (= x10 (- (/ 4090909090909091.0 1000000000000000.0))))
(assert
 (= x11 (- (/ 398989898989899.0 100000000000000.0))))
(assert
 (= x12 (- (/ 3888888888888889.0 1000000000000000.0))))
(assert
 (= x13 (- (/ 946969696969697.0 250000000000000.0))))
(assert
 (= x14 (- (/ 3686868686868687.0 1000000000000000.0))))
(assert
 (= x15 (- (/ 1792929292929293.0 500000000000000.0))))
(assert
 (= x16 (- (/ 696969696969697.0 200000000000000.0))))
(assert
 (= x17 (- (/ 8459595959595959.0 2500000000000000.0))))
(assert
 (= x18 (- (/ 3282828282828283.0 1000000000000000.0))))
(assert
 (= x19 (- (/ 31818181818181817.0 10000000000000000.0))))
(assert
 (= x20 (- (/ 3080808080808081.0 1000000000000000.0))))
(assert
 (= x21 (- (/ 29797979797979797.0 10000000000000000.0))))
(assert
 (= x22 (- (/ 2878787878787879.0 1000000000000000.0))))
(assert
 (= x23 (- (/ 27777777777777777.0 10000000000000000.0))))
(assert
 (= x24 (- (/ 2676767676767677.0 1000000000000000.0))))
(assert
 (= x25 (- (/ 25757575757575757.0 10000000000000000.0))))
(assert
 (= x26 (- (/ 98989898989899.0 40000000000000.0))))
(assert
 (= x27 (- (/ 23737373737373737.0 10000000000000000.0))))
(assert
 (= x28 (- (/ 2272727272727273.0 1000000000000000.0))))
(assert
 (= x29 (- (/ 21717171717171717.0 10000000000000000.0))))
(assert
 (= x30 (- (/ 4141414141414141.0 2000000000000000.0))))
(assert
 (= x31 (- (/ 19696969696969697.0 10000000000000000.0))))
(assert
 (= x32 (- (/ 18686868686868687.0 10000000000000000.0))))
(assert
 (= x33 (- (/ 17676767676767677.0 10000000000000000.0))))
(assert
 (= x34 (- (/ 16666666666666667.0 10000000000000000.0))))
(assert
 (= x35 (- (/ 15656565656565657.0 10000000000000000.0))))
(assert
 (= x36 (- (/ 1830808080808081.0 1250000000000000.0))))
(assert
 (= x37 (- (/ 2727272727272727.0 2000000000000000.0))))
(assert
 (= x38 (- (/ 101010101010101.0 80000000000000.0))))
(assert
 (= x39 (- (/ 2323232323232323.0 2000000000000000.0))))
(assert
 (= x40 (- (/ 5303030303030303.0 5000000000000000.0))))
(assert
 (= x41 (- (/ 2398989898989899.0 2500000000000000.0))))
(assert
 (= x42 (- (/ 4292929292929293.0 5000000000000000.0))))
(assert
 (= x43 (- (/ 946969696969697.0 1250000000000000.0))))
(assert
 (= x44 (- (/ 3282828282828283.0 5000000000000000.0))))
(assert
 (= x45 (- (/ 1388888888888889.0 2500000000000000.0))))
(assert
 (= x46 (- (/ 45454545454545453.0 100000000000000000.0))))
(assert
 (= x47 (- (/ 17676767676767677.0 50000000000000000.0))))
(assert
 (= x48 (- (/ 12626262626262627.0 50000000000000000.0))))
(assert
 (= x49 (- (/ 946969696969697.0 6250000000000000.0))))
(assert
 (= x50 (- (/ 6313131313131313.0 125000000000000000.0))))
(assert
 (= x51 (/ 6313131313131313.0 125000000000000000.0)))
(assert
 (= x52 (/ 946969696969697.0 6250000000000000.0)))
(assert
 (= x53 (/ 12626262626262627.0 50000000000000000.0)))
(assert
 (= x54 (/ 17676767676767677.0 50000000000000000.0)))
(assert
 (= x55 (/ 45454545454545453.0 100000000000000000.0)))
(assert
 (= x56 (/ 1388888888888889.0 2500000000000000.0)))
(assert
 (= x57 (/ 3282828282828283.0 5000000000000000.0)))
(assert
 (= x58 (/ 946969696969697.0 1250000000000000.0)))
(assert
 (= x59 (/ 4292929292929293.0 5000000000000000.0)))
(assert
 (= x60 (/ 2398989898989899.0 2500000000000000.0)))
(assert
 (= x61 (/ 5303030303030303.0 5000000000000000.0)))
(assert
 (= x62 (/ 2323232323232323.0 2000000000000000.0)))
(assert
 (= x63 (/ 101010101010101.0 80000000000000.0)))
(assert
 (= x64 (/ 2727272727272727.0 2000000000000000.0)))
(assert
 (= x65 (/ 1830808080808081.0 1250000000000000.0)))
(assert
 (= x66 (/ 15656565656565657.0 10000000000000000.0)))
(assert
 (= x67 (/ 16666666666666667.0 10000000000000000.0)))
(assert
 (= x68 (/ 17676767676767677.0 10000000000000000.0)))
(assert
 (= x69 (/ 18686868686868687.0 10000000000000000.0)))
(assert
 (= x70 (/ 19696969696969697.0 10000000000000000.0)))
(assert
 (= x71 (/ 4141414141414141.0 2000000000000000.0)))
(assert
 (= x72 (/ 21717171717171717.0 10000000000000000.0)))
(assert
 (= x73 (/ 2272727272727273.0 1000000000000000.0)))
(assert
 (= x74 (/ 23737373737373737.0 10000000000000000.0)))
(assert
 (= x75 (/ 98989898989899.0 40000000000000.0)))
(assert
 (= x76 (/ 25757575757575757.0 10000000000000000.0)))
(assert
 (= x77 (/ 2676767676767677.0 1000000000000000.0)))
(assert
 (= x78 (/ 27777777777777777.0 10000000000000000.0)))
(assert
 (= x79 (/ 2878787878787879.0 1000000000000000.0)))
(assert
 (= x80 (/ 29797979797979797.0 10000000000000000.0)))
(assert
 (= x81 (/ 3080808080808081.0 1000000000000000.0)))
(assert
 (= x82 (/ 31818181818181817.0 10000000000000000.0)))
(assert
 (= x83 (/ 3282828282828283.0 1000000000000000.0)))
(assert
 (= x84 (/ 8459595959595959.0 2500000000000000.0)))
(assert
 (= x85 (/ 696969696969697.0 200000000000000.0)))
(assert
 (= x86 (/ 1792929292929293.0 500000000000000.0)))
(assert
 (= x87 (/ 3686868686868687.0 1000000000000000.0)))
(assert
 (= x88 (/ 946969696969697.0 250000000000000.0)))
(assert
 (= x89 (/ 3888888888888889.0 1000000000000000.0)))
(assert
 (= x90 (/ 398989898989899.0 100000000000000.0)))
(assert
 (= x91 (/ 4090909090909091.0 1000000000000000.0)))
(assert
 (= x92 (/ 523989898989899.0 125000000000000.0)))
(assert
 (= x93 (/ 4292929292929293.0 1000000000000000.0)))
(assert
 (= x94 (/ 2196969696969697.0 500000000000000.0)))
(assert
 (= x95 (/ 898989898989899.0 200000000000000.0)))
(assert
 (= x96 (/ 1148989898989899.0 250000000000000.0)))
(assert
 (= x97 (/ 4696969696969697.0 1000000000000000.0)))
(assert
 (= x98 (/ 2398989898989899.0 500000000000000.0)))
(assert
 (= x99 (/ 4898989898989899.0 1000000000000000.0)))
(assert
 (= x100 5.0))
(assert
 (= mean1 (+ intercept (* slope x1))))
(assert
 (= mean2 (+ intercept (* slope x2))))
(assert
 (= mean3 (+ intercept (* slope x3))))
(assert
 (= mean4 (+ intercept (* slope x4))))
(assert
 (= mean5 (+ intercept (* slope x5))))
(assert
 (= mean6 (+ intercept (* slope x6))))
(assert
 (= mean7 (+ intercept (* slope x7))))
(assert
 (= mean8 (+ intercept (* slope x8))))
(assert
 (= mean9 (+ intercept (* slope x9))))
(assert
 (= mean10 (+ intercept (* slope x10))))
(assert
 (= mean11 (+ intercept (* slope x11))))
(assert
 (= mean12 (+ intercept (* slope x12))))
(assert
 (= mean13 (+ intercept (* slope x13))))
(assert
 (= mean14 (+ intercept (* slope x14))))
(assert
 (= mean15 (+ intercept (* slope x15))))
(assert
 (= mean16 (+ intercept (* slope x16))))
(assert
 (= mean17 (+ intercept (* slope x17))))
(assert
 (= mean18 (+ intercept (* slope x18))))
(assert
 (= mean19 (+ intercept (* slope x19))))
(assert
 (= mean20 (+ intercept (* slope x20))))
(assert
 (= mean21 (+ intercept (* slope x21))))
(assert
 (= mean22 (+ intercept (* slope x22))))
(assert
 (= mean23 (+ intercept (* slope x23))))
(assert
 (= mean24 (+ intercept (* slope x24))))
(assert
 (= mean25 (+ intercept (* slope x25))))
(assert
 (= mean26 (+ intercept (* slope x26))))
(assert
 (= mean27 (+ intercept (* slope x27))))
(assert
 (= mean28 (+ intercept (* slope x28))))
(assert
 (= mean29 (+ intercept (* slope x29))))
(assert
 (= mean30 (+ intercept (* slope x30))))
(assert
 (= mean31 (+ intercept (* slope x31))))
(assert
 (= mean32 (+ intercept (* slope x32))))
(assert
 (= mean33 (+ intercept (* slope x33))))
(assert
 (= mean34 (+ intercept (* slope x34))))
(assert
 (= mean35 (+ intercept (* slope x35))))
(assert
 (= mean36 (+ intercept (* slope x36))))
(assert
 (= mean37 (+ intercept (* slope x37))))
(assert
 (= mean38 (+ intercept (* slope x38))))
(assert
 (= mean39 (+ intercept (* slope x39))))
(assert
 (= mean40 (+ intercept (* slope x40))))
(assert
 (= mean41 (+ intercept (* slope x41))))
(assert
 (= mean42 (+ intercept (* slope x42))))
(assert
 (= mean43 (+ intercept (* slope x43))))
(assert
 (= mean44 (+ intercept (* slope x44))))
(assert
 (= mean45 (+ intercept (* slope x45))))
(assert
 (= mean46 (+ intercept (* slope x46))))
(assert
 (= mean47 (+ intercept (* slope x47))))
(assert
 (= mean48 (+ intercept (* slope x48))))
(assert
 (= mean49 (+ intercept (* slope x49))))
(assert
 (= mean50 (+ intercept (* slope x50))))
(assert
 (= mean51 (+ intercept (* slope x51))))
(assert
 (= mean52 (+ intercept (* slope x52))))
(assert
 (= mean53 (+ intercept (* slope x53))))
(assert
 (= mean54 (+ intercept (* slope x54))))
(assert
 (= mean55 (+ intercept (* slope x55))))
(assert
 (= mean56 (+ intercept (* slope x56))))
(assert
 (= mean57 (+ intercept (* slope x57))))
(assert
 (= mean58 (+ intercept (* slope x58))))
(assert
 (= mean59 (+ intercept (* slope x59))))
(assert
 (= mean60 (+ intercept (* slope x60))))
(assert
 (= mean61 (+ intercept (* slope x61))))
(assert
 (= mean62 (+ intercept (* slope x62))))
(assert
 (= mean63 (+ intercept (* slope x63))))
(assert
 (= mean64 (+ intercept (* slope x64))))
(assert
 (= mean65 (+ intercept (* slope x65))))
(assert
 (= mean66 (+ intercept (* slope x66))))
(assert
 (= mean67 (+ intercept (* slope x67))))
(assert
 (= mean68 (+ intercept (* slope x68))))
(assert
 (= mean69 (+ intercept (* slope x69))))
(assert
 (= mean70 (+ intercept (* slope x70))))
(assert
 (= mean71 (+ intercept (* slope x71))))
(assert
 (= mean72 (+ intercept (* slope x72))))
(assert
 (= mean73 (+ intercept (* slope x73))))
(assert
 (= mean74 (+ intercept (* slope x74))))
(assert
 (= mean75 (+ intercept (* slope x75))))
(assert
 (= mean76 (+ intercept (* slope x76))))
(assert
 (= mean77 (+ intercept (* slope x77))))
(assert
 (= mean78 (+ intercept (* slope x78))))
(assert
 (= mean79 (+ intercept (* slope x79))))
(assert
 (= mean80 (+ intercept (* slope x80))))
(assert
 (= mean81 (+ intercept (* slope x81))))
(assert
 (= mean82 (+ intercept (* slope x82))))
(assert
 (= mean83 (+ intercept (* slope x83))))
(assert
 (= mean84 (+ intercept (* slope x84))))
(assert
 (= mean85 (+ intercept (* slope x85))))
(assert
 (= mean86 (+ intercept (* slope x86))))
(assert
 (= mean87 (+ intercept (* slope x87))))
(assert
 (= mean88 (+ intercept (* slope x88))))
(assert
 (= mean89 (+ intercept (* slope x89))))
(assert
 (= mean90 (+ intercept (* slope x90))))
(assert
 (= mean91 (+ intercept (* slope x91))))
(assert
 (= mean92 (+ intercept (* slope x92))))
(assert
 (= mean93 (+ intercept (* slope x93))))
(assert
 (= mean94 (+ intercept (* slope x94))))
(assert
 (= mean95 (+ intercept (* slope x95))))
(assert
 (= mean96 (+ intercept (* slope x96))))
(assert
 (= mean97 (+ intercept (* slope x97))))
(assert
 (= mean98 (+ intercept (* slope x98))))
(assert
 (= mean99 (+ intercept (* slope x99))))
(assert
 (= mean100 (+ intercept (* slope x100))))
(assert
 (= noise_div (/ 1388888888888889.0 1250000000000000.0)))
(assert
 (= proboutlier_div 1.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (= y36 (/ 921929278275917.0 250000000000000.0)))
(assert
 (= y43 (/ 5729733138349851.0 2000000000000000.0)))
(assert
 (= y51 (/ 2803792678205573.0 1000000000000000.0)))
(assert
 (= y33 (/ 82659136585077.0 20000000000000.0)))
(assert
 (= y34 (/ 4499701812682037.0 1000000000000000.0)))
(assert
 (= y58 (/ 1240005058471479.0 500000000000000.0)))
(assert
 (= y22 (/ 457984369827691.0 100000000000000.0)))
(assert
 (= y75 (- (/ 5519599026014109.0 25000000000000000.0))))
(assert
 (= y63 (/ 3025468495844929.0 5000000000000000.0)))
(assert
 (= y83 (- (/ 4763071422748113.0 5000000000000000.0))))
(assert
 (= y18 (/ 1379175668881819.0 250000000000000.0)))
(assert
 (= y70 (/ 255443906593247.0 31250000000000.0)))
(assert
 (= y91 (- (/ 544663381753047.0 200000000000000.0))))
(assert
 (= y15 (/ 2445400372917171.0 500000000000000.0)))
(assert
 (= y29 (/ 1970724946721057.0 400000000000000.0)))
(assert
 (= y49 (/ 2377475735481331.0 1000000000000000.0)))
(assert
 (= y60 (/ 648776192982703.0 500000000000000.0)))
(assert
 (= y37 (/ 3401657878392081.0 1000000000000000.0)))
(assert
 (= y48 (/ 20616839419061543.0 10000000000000000.0)))
(assert
 (= y90 (- (/ 4302043522195409.0 2000000000000000.0))))
(assert
 (= y95 (- (/ 1809276696929901.0 1000000000000000.0))))
(assert
 (= y50 (/ 9736902116708027.0 2000000000000000.0)))
(assert
 (= y86 (- (/ 3221402627527617.0 1250000000000000.0))))
(assert
 (= y88 (- (/ 130864441082663.0 125000000000000.0))))
(assert
 (= y6 (/ 3543035423324787.0 500000000000000.0)))
(assert
 (= y65 (- (/ 3414680284387951.0 1000000000000000.0))))
(assert
 (= y9 (/ 10122966946595927.0 100000000000000000.0)))
(assert
 (= y59 (/ 2521349041585847.0 2000000000000000.0)))
(assert
 (= y64 (/ 13982538110795693.0 10000000000000000.0)))
(assert
 (= y89 (- (/ 5825006685905877.0 2500000000000000.0))))
(assert
 (= y100 (- (/ 1971951457349379.0 500000000000000.0))))
(assert
 (= y87 (/ 6998474345018387.0 2000000000000000.0)))
(assert
 (= y76 (- (/ 2847583668340683.0 1000000000000000.0))))
(assert
 (= y2 (/ 1015935695747693.0 125000000000000.0)))
(assert
 (= y17 (/ 2462817338526429.0 400000000000000.0)))
(assert
 (= y99 (- (/ 2432454637790589.0 1000000000000000.0))))
(assert
 (= y32 (/ 4273944877352007.0 1000000000000000.0)))
(assert
 (= y41 (/ 2681326993455477.0 1000000000000000.0)))
(assert
 (= y79 (- (/ 3138301235045171.0 2500000000000000.0))))
(assert
 (= y97 (- (/ 487724305546761.0 200000000000000.0))))
(assert
 (= y12 (/ 6257925389649107.0 1000000000000000.0)))
(assert
 (= y11 (/ 10734531663511813.0 2000000000000000.0)))
(assert
 (= y40 (/ 1529226360522769.0 500000000000000.0)))
(assert
 (= y16 (/ 1311550223533189.0 250000000000000.0)))
(assert
 (= y73 (/ 11878109312576629.0 100000000000000000.0)))
(assert
 (= y26 (- (/ 13957257584570053.0 2000000000000000.0))))
(assert
 (= y69 (- (/ 4064982189014077.0 1000000000000000000.0))))
(assert
 (= y45 (/ 9864993379596323.0 5000000000000000.0)))
(assert
 (= y19 (/ 1826288809344431.0 625000000000000.0)))
(assert
 (= y81 (/ 6775139586919579.0 500000000000000.0)))
(assert
 (= y67 (/ 2165887249210921.0 12500000000000000.0)))
(assert
 (= y93 (- (/ 22668748241888923.0 10000000000000000.0))))
(assert
 (= y3 (/ 43323512545589.0 6250000000000.0)))
(assert
 (= y55 (/ 911205243034639.0 400000000000000.0)))
(assert
 (= y38 (/ 31839450459383403.0 10000000000000000.0)))
(assert
 (= y30 (/ 500635268176427.0 125000000000000.0)))
(assert
 (= y28 (/ 30694675448868773.0 10000000000000000.0)))
(assert
 (= y31 (/ 358107381325369.0 125000000000000.0)))
(assert
 (= y94 (- (/ 2529812267534171.0 2000000000000000.0))))
(assert
 (= y98 (- (/ 33845190857701697.0 10000000000000000.0))))
(assert
 (= y35 (/ 18262457681152593.0 5000000000000000.0)))
(assert
 (= y8 (/ 13117903020477483.0 2000000000000000.0)))
(assert
 (= y25 (/ 3742480552463367.0 1000000000000000.0)))
(assert
 (= y24 (/ 4968725224864011.0 1000000000000000.0)))
(assert
 (= y84 (/ 6399951930644243.0 10000000000000000.0)))
(assert
 (= y96 (- (/ 24091412198601687.0 10000000000000000.0))))
(assert
 (= y23 (- (/ 925661479284087.0 2500000000000000.0))))
(assert
 (= y7 (/ 39954126897889.0 6250000000000.0)))
(assert
 (= y27 (- (/ 3448165806482309.0 500000000000000.0))))
(assert
 (= y77 (- (/ 2960190820950001.0 10000000000000000.0))))
(assert
 (= y80 (- (/ 3045704741701023.0 2500000000000000.0))))
(assert
 (= y44 (/ 1604902358318423.0 1000000000000000.0)))
(assert
 (= y54 (/ 5020644584071483.0 5000000000000000.0)))
(assert
 (= y68 (/ 2413324470452859.0 2500000000000000.0)))
(assert
 (= y10 (/ 1227410857576697.0 200000000000000.0)))
(assert
 (= y21 (/ 5584107987473611.0 1000000000000000.0)))
(assert
 (= y57 (/ 1379840562527383.0 1250000000000000.0)))
(assert
 (= y1 (/ 13286918844579907.0 5000000000000000.0)))
(assert
 (= y46 (/ 5356015602393721.0 2500000000000000.0)))
(assert
 (= y61 (/ 8456538949584369.0 5000000000000000.0)))
(assert
 (= y4 (/ 49093432039141.0 7812500000000.0)))
(assert
 (= y5 (/ 3215696336515697.0 500000000000000.0)))
(assert
 (= y39 (/ 6788922757488887.0 2000000000000000.0)))
(assert
 (= y74 (- (/ 41857089208389.0 156250000000000.0))))
(assert
 (= y66 (- (/ 5980017887979389.0 500000000000000.0))))
(assert
 (= y71 (- (/ 2703165380345397.0 10000000000000000.0))))
(assert
 (= y53 (/ 3922098787933131.0 5000000000000000.0)))
(assert
 (= y82 (- (/ 493495938123557.0 500000000000000.0))))
(assert
 (= y47 (/ 226069793274143.0 125000000000000.0)))
(assert
 (= y72 (- (/ 5869083368582787.0 50000000000000000.0))))
(assert
 (= y78 (- (/ 12262588221500603.0 50000000000000000.0))))
(assert
 (= y56 (/ 7735099737923703.0 20000000000000000.0)))
(assert
 (= y92 (- (/ 2132033985587129.0 1250000000000000.0))))
(assert
 (= y14 (/ 6747859414835413.0 1000000000000000.0)))
(assert
 (= y62 (- (/ 104685544740029.0 8000000000000000.0))))
(assert
 (= y52 (/ 2262672392144227.0 1000000000000000.0)))
(assert
 (= y85 (- (/ 2841536197809179.0 2500000000000000.0))))
(assert
 (= y42 (/ 757181897692231.0 250000000000000.0)))
(assert
 (= y20 (- (/ 7992466952018953.0 1000000000000000.0))))
(assert
 (= y13 (/ 1641045031611019.0 250000000000000.0)))
(assert
 (= noise (/ 6705545712267329.0 10000000000000000.0)))
(assert
 (let (($x3357 (= preference1 1)))
 (or (= preference1 0) $x3357)))
(assert
 (let (($x3365 (and (>= y1_1 (- mean1 (* 3.0 noise))) (<= y1_1 (+ mean1 (* 3.0 noise))))))
 (let (($x3357 (= preference1 1)))
 (=> $x3357 (and (and (>= y1_2 (- 30.0)) (<= y1_2 30.0)) (and $x3365 true))))))
(assert
 (let (($x3389 (= preference2 1)))
 (or (= preference2 0) $x3389)))
(assert
 (let (($x3395 (and (>= y2_1 (- mean2 (* 3.0 noise))) (<= y2_1 (+ mean2 (* 3.0 noise))))))
 (let (($x3389 (= preference2 1)))
 (=> $x3389 (and (and (>= y2_2 (- 30.0)) (<= y2_2 30.0)) (and $x3395 true))))))
(assert
 (let (($x3414 (= preference3 1)))
 (or (= preference3 0) $x3414)))
(assert
 (let (($x3420 (and (>= y3_1 (- mean3 (* 3.0 noise))) (<= y3_1 (+ mean3 (* 3.0 noise))))))
 (let (($x3414 (= preference3 1)))
 (=> $x3414 (and (and (>= y3_2 (- 30.0)) (<= y3_2 30.0)) (and $x3420 true))))))
(assert
 (let (($x3439 (= preference4 1)))
 (or (= preference4 0) $x3439)))
(assert
 (let (($x3445 (and (>= y4_1 (- mean4 (* 3.0 noise))) (<= y4_1 (+ mean4 (* 3.0 noise))))))
 (let (($x3439 (= preference4 1)))
 (=> $x3439 (and (and (>= y4_2 (- 30.0)) (<= y4_2 30.0)) (and $x3445 true))))))
(assert
 (let (($x3464 (= preference5 1)))
 (or (= preference5 0) $x3464)))
(assert
 (let (($x3470 (and (>= y5_1 (- mean5 (* 3.0 noise))) (<= y5_1 (+ mean5 (* 3.0 noise))))))
 (let (($x3464 (= preference5 1)))
 (=> $x3464 (and (and (>= y5_2 (- 30.0)) (<= y5_2 30.0)) (and $x3470 true))))))
(assert
 (let (($x3489 (= preference6 1)))
 (or (= preference6 0) $x3489)))
(assert
 (let (($x3495 (and (>= y6_1 (- mean6 (* 3.0 noise))) (<= y6_1 (+ mean6 (* 3.0 noise))))))
 (let (($x3489 (= preference6 1)))
 (=> $x3489 (and (and (>= y6_2 (- 30.0)) (<= y6_2 30.0)) (and $x3495 true))))))
(assert
 (let (($x3514 (= preference7 1)))
 (or (= preference7 0) $x3514)))
(assert
 (let (($x3520 (and (>= y7_1 (- mean7 (* 3.0 noise))) (<= y7_1 (+ mean7 (* 3.0 noise))))))
 (let (($x3514 (= preference7 1)))
 (=> $x3514 (and (and (>= y7_2 (- 30.0)) (<= y7_2 30.0)) (and $x3520 true))))))
(assert
 (let (($x3539 (= preference8 1)))
 (or (= preference8 0) $x3539)))
(assert
 (let (($x3545 (and (>= y8_1 (- mean8 (* 3.0 noise))) (<= y8_1 (+ mean8 (* 3.0 noise))))))
 (let (($x3539 (= preference8 1)))
 (=> $x3539 (and (and (>= y8_2 (- 30.0)) (<= y8_2 30.0)) (and $x3545 true))))))
(assert
 (let (($x3564 (= preference9 1)))
 (or (= preference9 0) $x3564)))
(assert
 (let (($x3570 (and (>= y9_1 (- mean9 (* 3.0 noise))) (<= y9_1 (+ mean9 (* 3.0 noise))))))
 (let (($x3564 (= preference9 1)))
 (=> $x3564 (and (and (>= y9_2 (- 30.0)) (<= y9_2 30.0)) (and $x3570 true))))))
(assert
 (let (($x3589 (= preference10 1)))
 (or (= preference10 0) $x3589)))
(assert
 (let (($x3595 (and (>= y10_1 (- mean10 (* 3.0 noise))) (<= y10_1 (+ mean10 (* 3.0 noise))))))
 (let (($x3589 (= preference10 1)))
 (=> $x3589 (and (and (>= y10_2 (- 30.0)) (<= y10_2 30.0)) (and $x3595 true))))))
(assert
 (let (($x3614 (= preference11 1)))
 (or (= preference11 0) $x3614)))
(assert
 (let (($x3620 (and (>= y11_1 (- mean11 (* 3.0 noise))) (<= y11_1 (+ mean11 (* 3.0 noise))))))
 (let (($x3614 (= preference11 1)))
 (=> $x3614 (and (and (>= y11_2 (- 30.0)) (<= y11_2 30.0)) (and $x3620 true))))))
(assert
 (let (($x3639 (= preference12 1)))
 (or (= preference12 0) $x3639)))
(assert
 (let (($x3645 (and (>= y12_1 (- mean12 (* 3.0 noise))) (<= y12_1 (+ mean12 (* 3.0 noise))))))
 (let (($x3639 (= preference12 1)))
 (=> $x3639 (and (and (>= y12_2 (- 30.0)) (<= y12_2 30.0)) (and $x3645 true))))))
(assert
 (let (($x3664 (= preference13 1)))
 (or (= preference13 0) $x3664)))
(assert
 (let (($x3670 (and (>= y13_1 (- mean13 (* 3.0 noise))) (<= y13_1 (+ mean13 (* 3.0 noise))))))
 (let (($x3664 (= preference13 1)))
 (=> $x3664 (and (and (>= y13_2 (- 30.0)) (<= y13_2 30.0)) (and $x3670 true))))))
(assert
 (let (($x3689 (= preference14 1)))
 (or (= preference14 0) $x3689)))
(assert
 (let (($x3695 (and (>= y14_1 (- mean14 (* 3.0 noise))) (<= y14_1 (+ mean14 (* 3.0 noise))))))
 (let (($x3689 (= preference14 1)))
 (=> $x3689 (and (and (>= y14_2 (- 30.0)) (<= y14_2 30.0)) (and $x3695 true))))))
(assert
 (let (($x3714 (= preference15 1)))
 (or (= preference15 0) $x3714)))
(assert
 (let (($x3720 (and (>= y15_1 (- mean15 (* 3.0 noise))) (<= y15_1 (+ mean15 (* 3.0 noise))))))
 (let (($x3714 (= preference15 1)))
 (=> $x3714 (and (and (>= y15_2 (- 30.0)) (<= y15_2 30.0)) (and $x3720 true))))))
(assert
 (let (($x3739 (= preference16 1)))
 (or (= preference16 0) $x3739)))
(assert
 (let (($x3745 (and (>= y16_1 (- mean16 (* 3.0 noise))) (<= y16_1 (+ mean16 (* 3.0 noise))))))
 (let (($x3739 (= preference16 1)))
 (=> $x3739 (and (and (>= y16_2 (- 30.0)) (<= y16_2 30.0)) (and $x3745 true))))))
(assert
 (let (($x3764 (= preference17 1)))
 (or (= preference17 0) $x3764)))
(assert
 (let (($x3770 (and (>= y17_1 (- mean17 (* 3.0 noise))) (<= y17_1 (+ mean17 (* 3.0 noise))))))
 (let (($x3764 (= preference17 1)))
 (=> $x3764 (and (and (>= y17_2 (- 30.0)) (<= y17_2 30.0)) (and $x3770 true))))))
(assert
 (let (($x3789 (= preference18 1)))
 (or (= preference18 0) $x3789)))
(assert
 (let (($x3795 (and (>= y18_1 (- mean18 (* 3.0 noise))) (<= y18_1 (+ mean18 (* 3.0 noise))))))
 (let (($x3789 (= preference18 1)))
 (=> $x3789 (and (and (>= y18_2 (- 30.0)) (<= y18_2 30.0)) (and $x3795 true))))))
(assert
 (let (($x3814 (= preference19 1)))
 (or (= preference19 0) $x3814)))
(assert
 (let (($x3820 (and (>= y19_1 (- mean19 (* 3.0 noise))) (<= y19_1 (+ mean19 (* 3.0 noise))))))
 (let (($x3814 (= preference19 1)))
 (=> $x3814 (and (and (>= y19_2 (- 30.0)) (<= y19_2 30.0)) (and $x3820 true))))))
(assert
 (let (($x3839 (= preference20 1)))
 (or (= preference20 0) $x3839)))
(assert
 (let (($x3845 (and (>= y20_1 (- mean20 (* 3.0 noise))) (<= y20_1 (+ mean20 (* 3.0 noise))))))
 (let (($x3839 (= preference20 1)))
 (=> $x3839 (and (and (>= y20_2 (- 30.0)) (<= y20_2 30.0)) (and $x3845 true))))))
(assert
 (let (($x3864 (= preference21 1)))
 (or (= preference21 0) $x3864)))
(assert
 (let (($x3870 (and (>= y21_1 (- mean21 (* 3.0 noise))) (<= y21_1 (+ mean21 (* 3.0 noise))))))
 (let (($x3864 (= preference21 1)))
 (=> $x3864 (and (and (>= y21_2 (- 30.0)) (<= y21_2 30.0)) (and $x3870 true))))))
(assert
 (let (($x3889 (= preference22 1)))
 (or (= preference22 0) $x3889)))
(assert
 (let (($x3895 (and (>= y22_1 (- mean22 (* 3.0 noise))) (<= y22_1 (+ mean22 (* 3.0 noise))))))
 (let (($x3889 (= preference22 1)))
 (=> $x3889 (and (and (>= y22_2 (- 30.0)) (<= y22_2 30.0)) (and $x3895 true))))))
(assert
 (let (($x3914 (= preference23 1)))
 (or (= preference23 0) $x3914)))
(assert
 (let (($x3920 (and (>= y23_1 (- mean23 (* 3.0 noise))) (<= y23_1 (+ mean23 (* 3.0 noise))))))
 (let (($x3914 (= preference23 1)))
 (=> $x3914 (and (and (>= y23_2 (- 30.0)) (<= y23_2 30.0)) (and $x3920 true))))))
(assert
 (let (($x3939 (= preference24 1)))
 (or (= preference24 0) $x3939)))
(assert
 (let (($x3945 (and (>= y24_1 (- mean24 (* 3.0 noise))) (<= y24_1 (+ mean24 (* 3.0 noise))))))
 (let (($x3939 (= preference24 1)))
 (=> $x3939 (and (and (>= y24_2 (- 30.0)) (<= y24_2 30.0)) (and $x3945 true))))))
(assert
 (let (($x3964 (= preference25 1)))
 (or (= preference25 0) $x3964)))
(assert
 (let (($x3970 (and (>= y25_1 (- mean25 (* 3.0 noise))) (<= y25_1 (+ mean25 (* 3.0 noise))))))
 (let (($x3964 (= preference25 1)))
 (=> $x3964 (and (and (>= y25_2 (- 30.0)) (<= y25_2 30.0)) (and $x3970 true))))))
(assert
 (let (($x3989 (= preference26 1)))
 (or (= preference26 0) $x3989)))
(assert
 (let (($x3995 (and (>= y26_1 (- mean26 (* 3.0 noise))) (<= y26_1 (+ mean26 (* 3.0 noise))))))
 (let (($x3989 (= preference26 1)))
 (=> $x3989 (and (and (>= y26_2 (- 30.0)) (<= y26_2 30.0)) (and $x3995 true))))))
(assert
 (let (($x4014 (= preference27 1)))
 (or (= preference27 0) $x4014)))
(assert
 (let (($x4020 (and (>= y27_1 (- mean27 (* 3.0 noise))) (<= y27_1 (+ mean27 (* 3.0 noise))))))
 (let (($x4014 (= preference27 1)))
 (=> $x4014 (and (and (>= y27_2 (- 30.0)) (<= y27_2 30.0)) (and $x4020 true))))))
(assert
 (let (($x4039 (= preference28 1)))
 (or (= preference28 0) $x4039)))
(assert
 (let (($x4045 (and (>= y28_1 (- mean28 (* 3.0 noise))) (<= y28_1 (+ mean28 (* 3.0 noise))))))
 (let (($x4039 (= preference28 1)))
 (=> $x4039 (and (and (>= y28_2 (- 30.0)) (<= y28_2 30.0)) (and $x4045 true))))))
(assert
 (let (($x4064 (= preference29 1)))
 (or (= preference29 0) $x4064)))
(assert
 (let (($x4070 (and (>= y29_1 (- mean29 (* 3.0 noise))) (<= y29_1 (+ mean29 (* 3.0 noise))))))
 (let (($x4064 (= preference29 1)))
 (=> $x4064 (and (and (>= y29_2 (- 30.0)) (<= y29_2 30.0)) (and $x4070 true))))))
(assert
 (let (($x4089 (= preference30 1)))
 (or (= preference30 0) $x4089)))
(assert
 (let (($x4095 (and (>= y30_1 (- mean30 (* 3.0 noise))) (<= y30_1 (+ mean30 (* 3.0 noise))))))
 (let (($x4089 (= preference30 1)))
 (=> $x4089 (and (and (>= y30_2 (- 30.0)) (<= y30_2 30.0)) (and $x4095 true))))))
(assert
 (let (($x4114 (= preference31 1)))
 (or (= preference31 0) $x4114)))
(assert
 (let (($x4120 (and (>= y31_1 (- mean31 (* 3.0 noise))) (<= y31_1 (+ mean31 (* 3.0 noise))))))
 (let (($x4114 (= preference31 1)))
 (=> $x4114 (and (and (>= y31_2 (- 30.0)) (<= y31_2 30.0)) (and $x4120 true))))))
(assert
 (let (($x4139 (= preference32 1)))
 (or (= preference32 0) $x4139)))
(assert
 (let (($x4145 (and (>= y32_1 (- mean32 (* 3.0 noise))) (<= y32_1 (+ mean32 (* 3.0 noise))))))
 (let (($x4139 (= preference32 1)))
 (=> $x4139 (and (and (>= y32_2 (- 30.0)) (<= y32_2 30.0)) (and $x4145 true))))))
(assert
 (let (($x4164 (= preference33 1)))
 (or (= preference33 0) $x4164)))
(assert
 (let (($x4170 (and (>= y33_1 (- mean33 (* 3.0 noise))) (<= y33_1 (+ mean33 (* 3.0 noise))))))
 (let (($x4164 (= preference33 1)))
 (=> $x4164 (and (and (>= y33_2 (- 30.0)) (<= y33_2 30.0)) (and $x4170 true))))))
(assert
 (let (($x4189 (= preference34 1)))
 (or (= preference34 0) $x4189)))
(assert
 (let (($x4195 (and (>= y34_1 (- mean34 (* 3.0 noise))) (<= y34_1 (+ mean34 (* 3.0 noise))))))
 (let (($x4189 (= preference34 1)))
 (=> $x4189 (and (and (>= y34_2 (- 30.0)) (<= y34_2 30.0)) (and $x4195 true))))))
(assert
 (let (($x4214 (= preference35 1)))
 (or (= preference35 0) $x4214)))
(assert
 (let (($x4220 (and (>= y35_1 (- mean35 (* 3.0 noise))) (<= y35_1 (+ mean35 (* 3.0 noise))))))
 (let (($x4214 (= preference35 1)))
 (=> $x4214 (and (and (>= y35_2 (- 30.0)) (<= y35_2 30.0)) (and $x4220 true))))))
(assert
 (let (($x4239 (= preference36 1)))
 (or (= preference36 0) $x4239)))
(assert
 (let (($x4245 (and (>= y36_1 (- mean36 (* 3.0 noise))) (<= y36_1 (+ mean36 (* 3.0 noise))))))
 (let (($x4239 (= preference36 1)))
 (=> $x4239 (and (and (>= y36_2 (- 30.0)) (<= y36_2 30.0)) (and $x4245 true))))))
(assert
 (let (($x4264 (= preference37 1)))
 (or (= preference37 0) $x4264)))
(assert
 (let (($x4270 (and (>= y37_1 (- mean37 (* 3.0 noise))) (<= y37_1 (+ mean37 (* 3.0 noise))))))
 (let (($x4264 (= preference37 1)))
 (=> $x4264 (and (and (>= y37_2 (- 30.0)) (<= y37_2 30.0)) (and $x4270 true))))))
(assert
 (let (($x4289 (= preference38 1)))
 (or (= preference38 0) $x4289)))
(assert
 (let (($x4295 (and (>= y38_1 (- mean38 (* 3.0 noise))) (<= y38_1 (+ mean38 (* 3.0 noise))))))
 (let (($x4289 (= preference38 1)))
 (=> $x4289 (and (and (>= y38_2 (- 30.0)) (<= y38_2 30.0)) (and $x4295 true))))))
(assert
 (let (($x4314 (= preference39 1)))
 (or (= preference39 0) $x4314)))
(assert
 (let (($x4320 (and (>= y39_1 (- mean39 (* 3.0 noise))) (<= y39_1 (+ mean39 (* 3.0 noise))))))
 (let (($x4314 (= preference39 1)))
 (=> $x4314 (and (and (>= y39_2 (- 30.0)) (<= y39_2 30.0)) (and $x4320 true))))))
(assert
 (let (($x4339 (= preference40 1)))
 (or (= preference40 0) $x4339)))
(assert
 (let (($x4345 (and (>= y40_1 (- mean40 (* 3.0 noise))) (<= y40_1 (+ mean40 (* 3.0 noise))))))
 (let (($x4339 (= preference40 1)))
 (=> $x4339 (and (and (>= y40_2 (- 30.0)) (<= y40_2 30.0)) (and $x4345 true))))))
(assert
 (let (($x4364 (= preference41 1)))
 (or (= preference41 0) $x4364)))
(assert
 (let (($x4370 (and (>= y41_1 (- mean41 (* 3.0 noise))) (<= y41_1 (+ mean41 (* 3.0 noise))))))
 (let (($x4364 (= preference41 1)))
 (=> $x4364 (and (and (>= y41_2 (- 30.0)) (<= y41_2 30.0)) (and $x4370 true))))))
(assert
 (let (($x4389 (= preference42 1)))
 (or (= preference42 0) $x4389)))
(assert
 (let (($x4395 (and (>= y42_1 (- mean42 (* 3.0 noise))) (<= y42_1 (+ mean42 (* 3.0 noise))))))
 (let (($x4389 (= preference42 1)))
 (=> $x4389 (and (and (>= y42_2 (- 30.0)) (<= y42_2 30.0)) (and $x4395 true))))))
(assert
 (let (($x4414 (= preference43 1)))
 (or (= preference43 0) $x4414)))
(assert
 (let (($x4420 (and (>= y43_1 (- mean43 (* 3.0 noise))) (<= y43_1 (+ mean43 (* 3.0 noise))))))
 (let (($x4414 (= preference43 1)))
 (=> $x4414 (and (and (>= y43_2 (- 30.0)) (<= y43_2 30.0)) (and $x4420 true))))))
(assert
 (let (($x4439 (= preference44 1)))
 (or (= preference44 0) $x4439)))
(assert
 (let (($x4445 (and (>= y44_1 (- mean44 (* 3.0 noise))) (<= y44_1 (+ mean44 (* 3.0 noise))))))
 (let (($x4439 (= preference44 1)))
 (=> $x4439 (and (and (>= y44_2 (- 30.0)) (<= y44_2 30.0)) (and $x4445 true))))))
(assert
 (let (($x4464 (= preference45 1)))
 (or (= preference45 0) $x4464)))
(assert
 (let (($x4470 (and (>= y45_1 (- mean45 (* 3.0 noise))) (<= y45_1 (+ mean45 (* 3.0 noise))))))
 (let (($x4464 (= preference45 1)))
 (=> $x4464 (and (and (>= y45_2 (- 30.0)) (<= y45_2 30.0)) (and $x4470 true))))))
(assert
 (let (($x4489 (= preference46 1)))
 (or (= preference46 0) $x4489)))
(assert
 (let (($x4495 (and (>= y46_1 (- mean46 (* 3.0 noise))) (<= y46_1 (+ mean46 (* 3.0 noise))))))
 (let (($x4489 (= preference46 1)))
 (=> $x4489 (and (and (>= y46_2 (- 30.0)) (<= y46_2 30.0)) (and $x4495 true))))))
(assert
 (let (($x4514 (= preference47 1)))
 (or (= preference47 0) $x4514)))
(assert
 (let (($x4520 (and (>= y47_1 (- mean47 (* 3.0 noise))) (<= y47_1 (+ mean47 (* 3.0 noise))))))
 (let (($x4514 (= preference47 1)))
 (=> $x4514 (and (and (>= y47_2 (- 30.0)) (<= y47_2 30.0)) (and $x4520 true))))))
(assert
 (let (($x4539 (= preference48 1)))
 (or (= preference48 0) $x4539)))
(assert
 (let (($x4545 (and (>= y48_1 (- mean48 (* 3.0 noise))) (<= y48_1 (+ mean48 (* 3.0 noise))))))
 (let (($x4539 (= preference48 1)))
 (=> $x4539 (and (and (>= y48_2 (- 30.0)) (<= y48_2 30.0)) (and $x4545 true))))))
(assert
 (let (($x4564 (= preference49 1)))
 (or (= preference49 0) $x4564)))
(assert
 (let (($x4570 (and (>= y49_1 (- mean49 (* 3.0 noise))) (<= y49_1 (+ mean49 (* 3.0 noise))))))
 (let (($x4564 (= preference49 1)))
 (=> $x4564 (and (and (>= y49_2 (- 30.0)) (<= y49_2 30.0)) (and $x4570 true))))))
(assert
 (let (($x4589 (= preference50 1)))
 (or (= preference50 0) $x4589)))
(assert
 (let (($x4595 (and (>= y50_1 (- mean50 (* 3.0 noise))) (<= y50_1 (+ mean50 (* 3.0 noise))))))
 (let (($x4589 (= preference50 1)))
 (=> $x4589 (and (and (>= y50_2 (- 30.0)) (<= y50_2 30.0)) (and $x4595 true))))))
(assert
 (let (($x4614 (= preference51 1)))
 (or (= preference51 0) $x4614)))
(assert
 (let (($x4620 (and (>= y51_1 (- mean51 (* 3.0 noise))) (<= y51_1 (+ mean51 (* 3.0 noise))))))
 (let (($x4614 (= preference51 1)))
 (=> $x4614 (and (and (>= y51_2 (- 30.0)) (<= y51_2 30.0)) (and $x4620 true))))))
(assert
 (let (($x4639 (= preference52 1)))
 (or (= preference52 0) $x4639)))
(assert
 (let (($x4645 (and (>= y52_1 (- mean52 (* 3.0 noise))) (<= y52_1 (+ mean52 (* 3.0 noise))))))
 (let (($x4639 (= preference52 1)))
 (=> $x4639 (and (and (>= y52_2 (- 30.0)) (<= y52_2 30.0)) (and $x4645 true))))))
(assert
 (let (($x4664 (= preference53 1)))
 (or (= preference53 0) $x4664)))
(assert
 (let (($x4670 (and (>= y53_1 (- mean53 (* 3.0 noise))) (<= y53_1 (+ mean53 (* 3.0 noise))))))
 (let (($x4664 (= preference53 1)))
 (=> $x4664 (and (and (>= y53_2 (- 30.0)) (<= y53_2 30.0)) (and $x4670 true))))))
(assert
 (let (($x4689 (= preference54 1)))
 (or (= preference54 0) $x4689)))
(assert
 (let (($x4695 (and (>= y54_1 (- mean54 (* 3.0 noise))) (<= y54_1 (+ mean54 (* 3.0 noise))))))
 (let (($x4689 (= preference54 1)))
 (=> $x4689 (and (and (>= y54_2 (- 30.0)) (<= y54_2 30.0)) (and $x4695 true))))))
(assert
 (let (($x4714 (= preference55 1)))
 (or (= preference55 0) $x4714)))
(assert
 (let (($x4720 (and (>= y55_1 (- mean55 (* 3.0 noise))) (<= y55_1 (+ mean55 (* 3.0 noise))))))
 (let (($x4714 (= preference55 1)))
 (=> $x4714 (and (and (>= y55_2 (- 30.0)) (<= y55_2 30.0)) (and $x4720 true))))))
(assert
 (let (($x4739 (= preference56 1)))
 (or (= preference56 0) $x4739)))
(assert
 (let (($x4745 (and (>= y56_1 (- mean56 (* 3.0 noise))) (<= y56_1 (+ mean56 (* 3.0 noise))))))
 (let (($x4739 (= preference56 1)))
 (=> $x4739 (and (and (>= y56_2 (- 30.0)) (<= y56_2 30.0)) (and $x4745 true))))))
(assert
 (let (($x4764 (= preference57 1)))
 (or (= preference57 0) $x4764)))
(assert
 (let (($x4770 (and (>= y57_1 (- mean57 (* 3.0 noise))) (<= y57_1 (+ mean57 (* 3.0 noise))))))
 (let (($x4764 (= preference57 1)))
 (=> $x4764 (and (and (>= y57_2 (- 30.0)) (<= y57_2 30.0)) (and $x4770 true))))))
(assert
 (let (($x4789 (= preference58 1)))
 (or (= preference58 0) $x4789)))
(assert
 (let (($x4795 (and (>= y58_1 (- mean58 (* 3.0 noise))) (<= y58_1 (+ mean58 (* 3.0 noise))))))
 (let (($x4789 (= preference58 1)))
 (=> $x4789 (and (and (>= y58_2 (- 30.0)) (<= y58_2 30.0)) (and $x4795 true))))))
(assert
 (let (($x4814 (= preference59 1)))
 (or (= preference59 0) $x4814)))
(assert
 (let (($x4820 (and (>= y59_1 (- mean59 (* 3.0 noise))) (<= y59_1 (+ mean59 (* 3.0 noise))))))
 (let (($x4814 (= preference59 1)))
 (=> $x4814 (and (and (>= y59_2 (- 30.0)) (<= y59_2 30.0)) (and $x4820 true))))))
(assert
 (let (($x4839 (= preference60 1)))
 (or (= preference60 0) $x4839)))
(assert
 (let (($x4845 (and (>= y60_1 (- mean60 (* 3.0 noise))) (<= y60_1 (+ mean60 (* 3.0 noise))))))
 (let (($x4839 (= preference60 1)))
 (=> $x4839 (and (and (>= y60_2 (- 30.0)) (<= y60_2 30.0)) (and $x4845 true))))))
(assert
 (let (($x4864 (= preference61 1)))
 (or (= preference61 0) $x4864)))
(assert
 (let (($x4870 (and (>= y61_1 (- mean61 (* 3.0 noise))) (<= y61_1 (+ mean61 (* 3.0 noise))))))
 (let (($x4864 (= preference61 1)))
 (=> $x4864 (and (and (>= y61_2 (- 30.0)) (<= y61_2 30.0)) (and $x4870 true))))))
(assert
 (let (($x4889 (= preference62 1)))
 (or (= preference62 0) $x4889)))
(assert
 (let (($x4895 (and (>= y62_1 (- mean62 (* 3.0 noise))) (<= y62_1 (+ mean62 (* 3.0 noise))))))
 (let (($x4889 (= preference62 1)))
 (=> $x4889 (and (and (>= y62_2 (- 30.0)) (<= y62_2 30.0)) (and $x4895 true))))))
(assert
 (let (($x4914 (= preference63 1)))
 (or (= preference63 0) $x4914)))
(assert
 (let (($x4920 (and (>= y63_1 (- mean63 (* 3.0 noise))) (<= y63_1 (+ mean63 (* 3.0 noise))))))
 (let (($x4914 (= preference63 1)))
 (=> $x4914 (and (and (>= y63_2 (- 30.0)) (<= y63_2 30.0)) (and $x4920 true))))))
(assert
 (let (($x4939 (= preference64 1)))
 (or (= preference64 0) $x4939)))
(assert
 (let (($x4945 (and (>= y64_1 (- mean64 (* 3.0 noise))) (<= y64_1 (+ mean64 (* 3.0 noise))))))
 (let (($x4939 (= preference64 1)))
 (=> $x4939 (and (and (>= y64_2 (- 30.0)) (<= y64_2 30.0)) (and $x4945 true))))))
(assert
 (let (($x4964 (= preference65 1)))
 (or (= preference65 0) $x4964)))
(assert
 (let (($x4970 (and (>= y65_1 (- mean65 (* 3.0 noise))) (<= y65_1 (+ mean65 (* 3.0 noise))))))
 (let (($x4964 (= preference65 1)))
 (=> $x4964 (and (and (>= y65_2 (- 30.0)) (<= y65_2 30.0)) (and $x4970 true))))))
(assert
 (let (($x4989 (= preference66 1)))
 (or (= preference66 0) $x4989)))
(assert
 (let (($x4995 (and (>= y66_1 (- mean66 (* 3.0 noise))) (<= y66_1 (+ mean66 (* 3.0 noise))))))
 (let (($x4989 (= preference66 1)))
 (=> $x4989 (and (and (>= y66_2 (- 30.0)) (<= y66_2 30.0)) (and $x4995 true))))))
(assert
 (let (($x5014 (= preference67 1)))
 (or (= preference67 0) $x5014)))
(assert
 (let (($x5020 (and (>= y67_1 (- mean67 (* 3.0 noise))) (<= y67_1 (+ mean67 (* 3.0 noise))))))
 (let (($x5014 (= preference67 1)))
 (=> $x5014 (and (and (>= y67_2 (- 30.0)) (<= y67_2 30.0)) (and $x5020 true))))))
(assert
 (let (($x5039 (= preference68 1)))
 (or (= preference68 0) $x5039)))
(assert
 (let (($x5045 (and (>= y68_1 (- mean68 (* 3.0 noise))) (<= y68_1 (+ mean68 (* 3.0 noise))))))
 (let (($x5039 (= preference68 1)))
 (=> $x5039 (and (and (>= y68_2 (- 30.0)) (<= y68_2 30.0)) (and $x5045 true))))))
(assert
 (let (($x5064 (= preference69 1)))
 (or (= preference69 0) $x5064)))
(assert
 (let (($x5070 (and (>= y69_1 (- mean69 (* 3.0 noise))) (<= y69_1 (+ mean69 (* 3.0 noise))))))
 (let (($x5064 (= preference69 1)))
 (=> $x5064 (and (and (>= y69_2 (- 30.0)) (<= y69_2 30.0)) (and $x5070 true))))))
(assert
 (let (($x5089 (= preference70 1)))
 (or (= preference70 0) $x5089)))
(assert
 (let (($x5095 (and (>= y70_1 (- mean70 (* 3.0 noise))) (<= y70_1 (+ mean70 (* 3.0 noise))))))
 (let (($x5089 (= preference70 1)))
 (=> $x5089 (and (and (>= y70_2 (- 30.0)) (<= y70_2 30.0)) (and $x5095 true))))))
(assert
 (let (($x5114 (= preference71 1)))
 (or (= preference71 0) $x5114)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5118 (+ mean71 ?x3360)))
 (let (($x5119 (<= y71_1 ?x5118)))
 (let (($x5125 (and (and (>= y71_2 (- 30.0)) (<= y71_2 30.0)) (and (and (>= y71_1 (- mean71 ?x3360)) $x5119) true))))
 (let (($x5114 (= preference71 1)))
 (=> $x5114 $x5125)))))))
(assert
 (let (($x5139 (= preference72 1)))
 (or (= preference72 0) $x5139)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5143 (+ mean72 ?x3360)))
 (let (($x5144 (<= y72_1 ?x5143)))
 (let (($x5150 (and (and (>= y72_2 (- 30.0)) (<= y72_2 30.0)) (and (and (>= y72_1 (- mean72 ?x3360)) $x5144) true))))
 (let (($x5139 (= preference72 1)))
 (=> $x5139 $x5150)))))))
(assert
 (let (($x5164 (= preference73 1)))
 (or (= preference73 0) $x5164)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5168 (+ mean73 ?x3360)))
 (let (($x5169 (<= y73_1 ?x5168)))
 (let (($x5175 (and (and (>= y73_2 (- 30.0)) (<= y73_2 30.0)) (and (and (>= y73_1 (- mean73 ?x3360)) $x5169) true))))
 (let (($x5164 (= preference73 1)))
 (=> $x5164 $x5175)))))))
(assert
 (let (($x5189 (= preference74 1)))
 (or (= preference74 0) $x5189)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5193 (+ mean74 ?x3360)))
 (let (($x5194 (<= y74_1 ?x5193)))
 (let (($x5200 (and (and (>= y74_2 (- 30.0)) (<= y74_2 30.0)) (and (and (>= y74_1 (- mean74 ?x3360)) $x5194) true))))
 (let (($x5189 (= preference74 1)))
 (=> $x5189 $x5200)))))))
(assert
 (let (($x5214 (= preference75 1)))
 (or (= preference75 0) $x5214)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5218 (+ mean75 ?x3360)))
 (let (($x5219 (<= y75_1 ?x5218)))
 (let (($x5225 (and (and (>= y75_2 (- 30.0)) (<= y75_2 30.0)) (and (and (>= y75_1 (- mean75 ?x3360)) $x5219) true))))
 (let (($x5214 (= preference75 1)))
 (=> $x5214 $x5225)))))))
(assert
 (let (($x5239 (= preference76 1)))
 (or (= preference76 0) $x5239)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5243 (+ mean76 ?x3360)))
 (let (($x5244 (<= y76_1 ?x5243)))
 (let (($x5250 (and (and (>= y76_2 (- 30.0)) (<= y76_2 30.0)) (and (and (>= y76_1 (- mean76 ?x3360)) $x5244) true))))
 (let (($x5239 (= preference76 1)))
 (=> $x5239 $x5250)))))))
(assert
 (let (($x5264 (= preference77 1)))
 (or (= preference77 0) $x5264)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5268 (+ mean77 ?x3360)))
 (let (($x5269 (<= y77_1 ?x5268)))
 (let (($x5275 (and (and (>= y77_2 (- 30.0)) (<= y77_2 30.0)) (and (and (>= y77_1 (- mean77 ?x3360)) $x5269) true))))
 (let (($x5264 (= preference77 1)))
 (=> $x5264 $x5275)))))))
(assert
 (let (($x5289 (= preference78 1)))
 (or (= preference78 0) $x5289)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5293 (+ mean78 ?x3360)))
 (let (($x5294 (<= y78_1 ?x5293)))
 (let (($x5300 (and (and (>= y78_2 (- 30.0)) (<= y78_2 30.0)) (and (and (>= y78_1 (- mean78 ?x3360)) $x5294) true))))
 (let (($x5289 (= preference78 1)))
 (=> $x5289 $x5300)))))))
(assert
 (let (($x5314 (= preference79 1)))
 (or (= preference79 0) $x5314)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5318 (+ mean79 ?x3360)))
 (let (($x5319 (<= y79_1 ?x5318)))
 (let (($x5325 (and (and (>= y79_2 (- 30.0)) (<= y79_2 30.0)) (and (and (>= y79_1 (- mean79 ?x3360)) $x5319) true))))
 (let (($x5314 (= preference79 1)))
 (=> $x5314 $x5325)))))))
(assert
 (let (($x5339 (= preference80 1)))
 (or (= preference80 0) $x5339)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5343 (+ mean80 ?x3360)))
 (let (($x5344 (<= y80_1 ?x5343)))
 (let (($x5350 (and (and (>= y80_2 (- 30.0)) (<= y80_2 30.0)) (and (and (>= y80_1 (- mean80 ?x3360)) $x5344) true))))
 (let (($x5339 (= preference80 1)))
 (=> $x5339 $x5350)))))))
(assert
 (let (($x5364 (= preference81 1)))
 (or (= preference81 0) $x5364)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5368 (+ mean81 ?x3360)))
 (let (($x5369 (<= y81_1 ?x5368)))
 (let (($x5375 (and (and (>= y81_2 (- 30.0)) (<= y81_2 30.0)) (and (and (>= y81_1 (- mean81 ?x3360)) $x5369) true))))
 (let (($x5364 (= preference81 1)))
 (=> $x5364 $x5375)))))))
(assert
 (let (($x5389 (= preference82 1)))
 (or (= preference82 0) $x5389)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5393 (+ mean82 ?x3360)))
 (let (($x5394 (<= y82_1 ?x5393)))
 (let (($x5400 (and (and (>= y82_2 (- 30.0)) (<= y82_2 30.0)) (and (and (>= y82_1 (- mean82 ?x3360)) $x5394) true))))
 (let (($x5389 (= preference82 1)))
 (=> $x5389 $x5400)))))))
(assert
 (let (($x5414 (= preference83 1)))
 (or (= preference83 0) $x5414)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5418 (+ mean83 ?x3360)))
 (let (($x5419 (<= y83_1 ?x5418)))
 (let (($x5425 (and (and (>= y83_2 (- 30.0)) (<= y83_2 30.0)) (and (and (>= y83_1 (- mean83 ?x3360)) $x5419) true))))
 (let (($x5414 (= preference83 1)))
 (=> $x5414 $x5425)))))))
(assert
 (let (($x5439 (= preference84 1)))
 (or (= preference84 0) $x5439)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5443 (+ mean84 ?x3360)))
 (let (($x5444 (<= y84_1 ?x5443)))
 (let (($x5450 (and (and (>= y84_2 (- 30.0)) (<= y84_2 30.0)) (and (and (>= y84_1 (- mean84 ?x3360)) $x5444) true))))
 (let (($x5439 (= preference84 1)))
 (=> $x5439 $x5450)))))))
(assert
 (let (($x5464 (= preference85 1)))
 (or (= preference85 0) $x5464)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5468 (+ mean85 ?x3360)))
 (let (($x5469 (<= y85_1 ?x5468)))
 (let (($x5475 (and (and (>= y85_2 (- 30.0)) (<= y85_2 30.0)) (and (and (>= y85_1 (- mean85 ?x3360)) $x5469) true))))
 (let (($x5464 (= preference85 1)))
 (=> $x5464 $x5475)))))))
(assert
 (let (($x5489 (= preference86 1)))
 (or (= preference86 0) $x5489)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5493 (+ mean86 ?x3360)))
 (let (($x5494 (<= y86_1 ?x5493)))
 (let (($x5500 (and (and (>= y86_2 (- 30.0)) (<= y86_2 30.0)) (and (and (>= y86_1 (- mean86 ?x3360)) $x5494) true))))
 (let (($x5489 (= preference86 1)))
 (=> $x5489 $x5500)))))))
(assert
 (let (($x5514 (= preference87 1)))
 (or (= preference87 0) $x5514)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5518 (+ mean87 ?x3360)))
 (let (($x5519 (<= y87_1 ?x5518)))
 (let (($x5525 (and (and (>= y87_2 (- 30.0)) (<= y87_2 30.0)) (and (and (>= y87_1 (- mean87 ?x3360)) $x5519) true))))
 (let (($x5514 (= preference87 1)))
 (=> $x5514 $x5525)))))))
(assert
 (let (($x5539 (= preference88 1)))
 (or (= preference88 0) $x5539)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5543 (+ mean88 ?x3360)))
 (let (($x5544 (<= y88_1 ?x5543)))
 (let (($x5550 (and (and (>= y88_2 (- 30.0)) (<= y88_2 30.0)) (and (and (>= y88_1 (- mean88 ?x3360)) $x5544) true))))
 (let (($x5539 (= preference88 1)))
 (=> $x5539 $x5550)))))))
(assert
 (let (($x5564 (= preference89 1)))
 (or (= preference89 0) $x5564)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5568 (+ mean89 ?x3360)))
 (let (($x5569 (<= y89_1 ?x5568)))
 (let (($x5575 (and (and (>= y89_2 (- 30.0)) (<= y89_2 30.0)) (and (and (>= y89_1 (- mean89 ?x3360)) $x5569) true))))
 (let (($x5564 (= preference89 1)))
 (=> $x5564 $x5575)))))))
(assert
 (let (($x5589 (= preference90 1)))
 (or (= preference90 0) $x5589)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5593 (+ mean90 ?x3360)))
 (let (($x5594 (<= y90_1 ?x5593)))
 (let (($x5600 (and (and (>= y90_2 (- 30.0)) (<= y90_2 30.0)) (and (and (>= y90_1 (- mean90 ?x3360)) $x5594) true))))
 (let (($x5589 (= preference90 1)))
 (=> $x5589 $x5600)))))))
(assert
 (let (($x5614 (= preference91 1)))
 (or (= preference91 0) $x5614)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5618 (+ mean91 ?x3360)))
 (let (($x5619 (<= y91_1 ?x5618)))
 (let (($x5625 (and (and (>= y91_2 (- 30.0)) (<= y91_2 30.0)) (and (and (>= y91_1 (- mean91 ?x3360)) $x5619) true))))
 (let (($x5614 (= preference91 1)))
 (=> $x5614 $x5625)))))))
(assert
 (let (($x5639 (= preference92 1)))
 (or (= preference92 0) $x5639)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5643 (+ mean92 ?x3360)))
 (let (($x5644 (<= y92_1 ?x5643)))
 (let (($x5650 (and (and (>= y92_2 (- 30.0)) (<= y92_2 30.0)) (and (and (>= y92_1 (- mean92 ?x3360)) $x5644) true))))
 (let (($x5639 (= preference92 1)))
 (=> $x5639 $x5650)))))))
(assert
 (let (($x5664 (= preference93 1)))
 (or (= preference93 0) $x5664)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5668 (+ mean93 ?x3360)))
 (let (($x5669 (<= y93_1 ?x5668)))
 (let (($x5675 (and (and (>= y93_2 (- 30.0)) (<= y93_2 30.0)) (and (and (>= y93_1 (- mean93 ?x3360)) $x5669) true))))
 (let (($x5664 (= preference93 1)))
 (=> $x5664 $x5675)))))))
(assert
 (let (($x5689 (= preference94 1)))
 (or (= preference94 0) $x5689)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5693 (+ mean94 ?x3360)))
 (let (($x5694 (<= y94_1 ?x5693)))
 (let (($x5700 (and (and (>= y94_2 (- 30.0)) (<= y94_2 30.0)) (and (and (>= y94_1 (- mean94 ?x3360)) $x5694) true))))
 (let (($x5689 (= preference94 1)))
 (=> $x5689 $x5700)))))))
(assert
 (let (($x5714 (= preference95 1)))
 (or (= preference95 0) $x5714)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5718 (+ mean95 ?x3360)))
 (let (($x5719 (<= y95_1 ?x5718)))
 (let (($x5725 (and (and (>= y95_2 (- 30.0)) (<= y95_2 30.0)) (and (and (>= y95_1 (- mean95 ?x3360)) $x5719) true))))
 (let (($x5714 (= preference95 1)))
 (=> $x5714 $x5725)))))))
(assert
 (let (($x5739 (= preference96 1)))
 (or (= preference96 0) $x5739)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5743 (+ mean96 ?x3360)))
 (let (($x5744 (<= y96_1 ?x5743)))
 (let (($x5750 (and (and (>= y96_2 (- 30.0)) (<= y96_2 30.0)) (and (and (>= y96_1 (- mean96 ?x3360)) $x5744) true))))
 (let (($x5739 (= preference96 1)))
 (=> $x5739 $x5750)))))))
(assert
 (let (($x5764 (= preference97 1)))
 (or (= preference97 0) $x5764)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5768 (+ mean97 ?x3360)))
 (let (($x5769 (<= y97_1 ?x5768)))
 (let (($x5775 (and (and (>= y97_2 (- 30.0)) (<= y97_2 30.0)) (and (and (>= y97_1 (- mean97 ?x3360)) $x5769) true))))
 (let (($x5764 (= preference97 1)))
 (=> $x5764 $x5775)))))))
(assert
 (let (($x5789 (= preference98 1)))
 (or (= preference98 0) $x5789)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5793 (+ mean98 ?x3360)))
 (let (($x5794 (<= y98_1 ?x5793)))
 (let (($x5800 (and (and (>= y98_2 (- 30.0)) (<= y98_2 30.0)) (and (and (>= y98_1 (- mean98 ?x3360)) $x5794) true))))
 (let (($x5789 (= preference98 1)))
 (=> $x5789 $x5800)))))))
(assert
 (let (($x5814 (= preference99 1)))
 (or (= preference99 0) $x5814)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5818 (+ mean99 ?x3360)))
 (let (($x5819 (<= y99_1 ?x5818)))
 (let (($x5825 (and (and (>= y99_2 (- 30.0)) (<= y99_2 30.0)) (and (and (>= y99_1 (- mean99 ?x3360)) $x5819) true))))
 (let (($x5814 (= preference99 1)))
 (=> $x5814 $x5825)))))))
(assert
 (let (($x5839 (= preference100 1)))
 (or (= preference100 0) $x5839)))
(assert
 (let ((?x3360 (* 3.0 noise)))
 (let ((?x5843 (+ mean100 ?x3360)))
 (let (($x5844 (<= y100_1 ?x5843)))
 (let (($x5850 (and (and (>= y100_2 (- 30.0)) (<= y100_2 30.0)) (and (and (>= y100_1 (- mean100 ?x3360)) $x5844) true))))
 (let (($x5839 (= preference100 1)))
 (=> $x5839 $x5850)))))))
(assert
 (>= noise (/ 1.0 10.0)))
(assert
 (<= noise 1.0))
(assert
 (>= intercept (- 6.0)))
(assert
 (<= intercept 6.0))
(assert
 (>= slope (- 6.0)))
(assert
 (<= slope 6.0))
(assert
 (>= proboutlier 0.0))
(assert
 (<= proboutlier 1.0))
(assert
 (let (($x5873 (= outlier1 1)))
 (let (($x18 (= outlier1 0)))
 (or $x18 $x5873))))
(assert
 (let (($x5875 (= outlier2 1)))
 (let (($x27 (= outlier2 0)))
 (or $x27 $x5875))))
(assert
 (let (($x5877 (= outlier3 1)))
 (let (($x36 (= outlier3 0)))
 (or $x36 $x5877))))
(assert
 (let (($x5879 (= outlier4 1)))
 (let (($x45 (= outlier4 0)))
 (or $x45 $x5879))))
(assert
 (let (($x5881 (= outlier5 1)))
 (let (($x54 (= outlier5 0)))
 (or $x54 $x5881))))
(assert
 (let (($x5883 (= outlier6 1)))
 (let (($x63 (= outlier6 0)))
 (or $x63 $x5883))))
(assert
 (let (($x5885 (= outlier7 1)))
 (let (($x72 (= outlier7 0)))
 (or $x72 $x5885))))
(assert
 (let (($x5887 (= outlier8 1)))
 (let (($x81 (= outlier8 0)))
 (or $x81 $x5887))))
(assert
 (let (($x5889 (= outlier9 1)))
 (let (($x90 (= outlier9 0)))
 (or $x90 $x5889))))
(assert
 (let (($x5891 (= outlier10 1)))
 (let (($x99 (= outlier10 0)))
 (or $x99 $x5891))))
(assert
 (let (($x5893 (= outlier11 1)))
 (let (($x108 (= outlier11 0)))
 (or $x108 $x5893))))
(assert
 (let (($x5895 (= outlier12 1)))
 (let (($x117 (= outlier12 0)))
 (or $x117 $x5895))))
(assert
 (let (($x5897 (= outlier13 1)))
 (let (($x126 (= outlier13 0)))
 (or $x126 $x5897))))
(assert
 (let (($x5899 (= outlier14 1)))
 (let (($x135 (= outlier14 0)))
 (or $x135 $x5899))))
(assert
 (let (($x5901 (= outlier15 1)))
 (let (($x144 (= outlier15 0)))
 (or $x144 $x5901))))
(assert
 (let (($x5903 (= outlier16 1)))
 (let (($x153 (= outlier16 0)))
 (or $x153 $x5903))))
(assert
 (let (($x5905 (= outlier17 1)))
 (let (($x162 (= outlier17 0)))
 (or $x162 $x5905))))
(assert
 (let (($x5907 (= outlier18 1)))
 (let (($x171 (= outlier18 0)))
 (or $x171 $x5907))))
(assert
 (let (($x5909 (= outlier19 1)))
 (let (($x180 (= outlier19 0)))
 (or $x180 $x5909))))
(assert
 (let (($x5911 (= outlier20 1)))
 (let (($x189 (= outlier20 0)))
 (or $x189 $x5911))))
(assert
 (let (($x5913 (= outlier21 1)))
 (let (($x198 (= outlier21 0)))
 (or $x198 $x5913))))
(assert
 (let (($x5915 (= outlier22 1)))
 (let (($x207 (= outlier22 0)))
 (or $x207 $x5915))))
(assert
 (let (($x5917 (= outlier23 1)))
 (let (($x216 (= outlier23 0)))
 (or $x216 $x5917))))
(assert
 (let (($x5919 (= outlier24 1)))
 (let (($x225 (= outlier24 0)))
 (or $x225 $x5919))))
(assert
 (let (($x5921 (= outlier25 1)))
 (let (($x234 (= outlier25 0)))
 (or $x234 $x5921))))
(assert
 (let (($x5923 (= outlier26 1)))
 (let (($x243 (= outlier26 0)))
 (or $x243 $x5923))))
(assert
 (let (($x5925 (= outlier27 1)))
 (let (($x252 (= outlier27 0)))
 (or $x252 $x5925))))
(assert
 (let (($x5927 (= outlier28 1)))
 (let (($x261 (= outlier28 0)))
 (or $x261 $x5927))))
(assert
 (let (($x5929 (= outlier29 1)))
 (let (($x270 (= outlier29 0)))
 (or $x270 $x5929))))
(assert
 (let (($x5931 (= outlier30 1)))
 (let (($x279 (= outlier30 0)))
 (or $x279 $x5931))))
(assert
 (let (($x5933 (= outlier31 1)))
 (let (($x288 (= outlier31 0)))
 (or $x288 $x5933))))
(assert
 (let (($x5935 (= outlier32 1)))
 (let (($x297 (= outlier32 0)))
 (or $x297 $x5935))))
(assert
 (let (($x5937 (= outlier33 1)))
 (let (($x306 (= outlier33 0)))
 (or $x306 $x5937))))
(assert
 (let (($x5939 (= outlier34 1)))
 (let (($x315 (= outlier34 0)))
 (or $x315 $x5939))))
(assert
 (let (($x5941 (= outlier35 1)))
 (let (($x324 (= outlier35 0)))
 (or $x324 $x5941))))
(assert
 (let (($x5943 (= outlier36 1)))
 (let (($x333 (= outlier36 0)))
 (or $x333 $x5943))))
(assert
 (let (($x5945 (= outlier37 1)))
 (let (($x342 (= outlier37 0)))
 (or $x342 $x5945))))
(assert
 (let (($x5947 (= outlier38 1)))
 (let (($x351 (= outlier38 0)))
 (or $x351 $x5947))))
(assert
 (let (($x5949 (= outlier39 1)))
 (let (($x360 (= outlier39 0)))
 (or $x360 $x5949))))
(assert
 (let (($x5951 (= outlier40 1)))
 (let (($x369 (= outlier40 0)))
 (or $x369 $x5951))))
(assert
 (let (($x5953 (= outlier41 1)))
 (let (($x378 (= outlier41 0)))
 (or $x378 $x5953))))
(assert
 (let (($x5955 (= outlier42 1)))
 (let (($x387 (= outlier42 0)))
 (or $x387 $x5955))))
(assert
 (let (($x5957 (= outlier43 1)))
 (let (($x396 (= outlier43 0)))
 (or $x396 $x5957))))
(assert
 (let (($x5959 (= outlier44 1)))
 (let (($x405 (= outlier44 0)))
 (or $x405 $x5959))))
(assert
 (let (($x5961 (= outlier45 1)))
 (let (($x414 (= outlier45 0)))
 (or $x414 $x5961))))
(assert
 (let (($x5963 (= outlier46 1)))
 (let (($x423 (= outlier46 0)))
 (or $x423 $x5963))))
(assert
 (let (($x5965 (= outlier47 1)))
 (let (($x432 (= outlier47 0)))
 (or $x432 $x5965))))
(assert
 (let (($x5967 (= outlier48 1)))
 (let (($x441 (= outlier48 0)))
 (or $x441 $x5967))))
(assert
 (let (($x5969 (= outlier49 1)))
 (let (($x450 (= outlier49 0)))
 (or $x450 $x5969))))
(assert
 (let (($x5971 (= outlier50 1)))
 (let (($x459 (= outlier50 0)))
 (or $x459 $x5971))))
(assert
 (let (($x5973 (= outlier51 1)))
 (let (($x468 (= outlier51 0)))
 (or $x468 $x5973))))
(assert
 (let (($x5975 (= outlier52 1)))
 (let (($x477 (= outlier52 0)))
 (or $x477 $x5975))))
(assert
 (let (($x5977 (= outlier53 1)))
 (let (($x486 (= outlier53 0)))
 (or $x486 $x5977))))
(assert
 (let (($x5979 (= outlier54 1)))
 (let (($x495 (= outlier54 0)))
 (or $x495 $x5979))))
(assert
 (let (($x5981 (= outlier55 1)))
 (let (($x504 (= outlier55 0)))
 (or $x504 $x5981))))
(assert
 (let (($x5983 (= outlier56 1)))
 (let (($x513 (= outlier56 0)))
 (or $x513 $x5983))))
(assert
 (let (($x5985 (= outlier57 1)))
 (let (($x522 (= outlier57 0)))
 (or $x522 $x5985))))
(assert
 (let (($x5987 (= outlier58 1)))
 (let (($x531 (= outlier58 0)))
 (or $x531 $x5987))))
(assert
 (let (($x5989 (= outlier59 1)))
 (let (($x540 (= outlier59 0)))
 (or $x540 $x5989))))
(assert
 (let (($x5991 (= outlier60 1)))
 (let (($x549 (= outlier60 0)))
 (or $x549 $x5991))))
(assert
 (let (($x5993 (= outlier61 1)))
 (let (($x558 (= outlier61 0)))
 (or $x558 $x5993))))
(assert
 (let (($x5995 (= outlier62 1)))
 (let (($x567 (= outlier62 0)))
 (or $x567 $x5995))))
(assert
 (let (($x5997 (= outlier63 1)))
 (let (($x576 (= outlier63 0)))
 (or $x576 $x5997))))
(assert
 (let (($x5999 (= outlier64 1)))
 (let (($x585 (= outlier64 0)))
 (or $x585 $x5999))))
(assert
 (let (($x6001 (= outlier65 1)))
 (let (($x594 (= outlier65 0)))
 (or $x594 $x6001))))
(assert
 (let (($x6003 (= outlier66 1)))
 (let (($x603 (= outlier66 0)))
 (or $x603 $x6003))))
(assert
 (let (($x6005 (= outlier67 1)))
 (let (($x612 (= outlier67 0)))
 (or $x612 $x6005))))
(assert
 (let (($x6007 (= outlier68 1)))
 (let (($x621 (= outlier68 0)))
 (or $x621 $x6007))))
(assert
 (let (($x6009 (= outlier69 1)))
 (let (($x630 (= outlier69 0)))
 (or $x630 $x6009))))
(assert
 (let (($x6011 (= outlier70 1)))
 (let (($x639 (= outlier70 0)))
 (or $x639 $x6011))))
(assert
 (let (($x6013 (= outlier71 1)))
 (let (($x648 (= outlier71 0)))
 (or $x648 $x6013))))
(assert
 (let (($x6015 (= outlier72 1)))
 (let (($x657 (= outlier72 0)))
 (or $x657 $x6015))))
(assert
 (let (($x6017 (= outlier73 1)))
 (let (($x666 (= outlier73 0)))
 (or $x666 $x6017))))
(assert
 (let (($x6019 (= outlier74 1)))
 (let (($x675 (= outlier74 0)))
 (or $x675 $x6019))))
(assert
 (let (($x6021 (= outlier75 1)))
 (let (($x684 (= outlier75 0)))
 (or $x684 $x6021))))
(assert
 (let (($x6023 (= outlier76 1)))
 (let (($x693 (= outlier76 0)))
 (or $x693 $x6023))))
(assert
 (let (($x6025 (= outlier77 1)))
 (let (($x702 (= outlier77 0)))
 (or $x702 $x6025))))
(assert
 (let (($x6027 (= outlier78 1)))
 (let (($x711 (= outlier78 0)))
 (or $x711 $x6027))))
(assert
 (let (($x6029 (= outlier79 1)))
 (let (($x720 (= outlier79 0)))
 (or $x720 $x6029))))
(assert
 (let (($x6031 (= outlier80 1)))
 (let (($x729 (= outlier80 0)))
 (or $x729 $x6031))))
(assert
 (let (($x6033 (= outlier81 1)))
 (let (($x738 (= outlier81 0)))
 (or $x738 $x6033))))
(assert
 (let (($x6035 (= outlier82 1)))
 (let (($x747 (= outlier82 0)))
 (or $x747 $x6035))))
(assert
 (let (($x6037 (= outlier83 1)))
 (let (($x756 (= outlier83 0)))
 (or $x756 $x6037))))
(assert
 (let (($x6039 (= outlier84 1)))
 (let (($x765 (= outlier84 0)))
 (or $x765 $x6039))))
(assert
 (let (($x6041 (= outlier85 1)))
 (let (($x774 (= outlier85 0)))
 (or $x774 $x6041))))
(assert
 (let (($x6043 (= outlier86 1)))
 (let (($x783 (= outlier86 0)))
 (or $x783 $x6043))))
(assert
 (let (($x6045 (= outlier87 1)))
 (let (($x792 (= outlier87 0)))
 (or $x792 $x6045))))
(assert
 (let (($x6047 (= outlier88 1)))
 (let (($x801 (= outlier88 0)))
 (or $x801 $x6047))))
(assert
 (let (($x6049 (= outlier89 1)))
 (let (($x810 (= outlier89 0)))
 (or $x810 $x6049))))
(assert
 (let (($x6051 (= outlier90 1)))
 (let (($x819 (= outlier90 0)))
 (or $x819 $x6051))))
(assert
 (let (($x6053 (= outlier91 1)))
 (let (($x828 (= outlier91 0)))
 (or $x828 $x6053))))
(assert
 (let (($x6055 (= outlier92 1)))
 (let (($x837 (= outlier92 0)))
 (or $x837 $x6055))))
(assert
 (let (($x6057 (= outlier93 1)))
 (let (($x846 (= outlier93 0)))
 (or $x846 $x6057))))
(assert
 (let (($x6059 (= outlier94 1)))
 (let (($x855 (= outlier94 0)))
 (or $x855 $x6059))))
(assert
 (let (($x6061 (= outlier95 1)))
 (let (($x864 (= outlier95 0)))
 (or $x864 $x6061))))
(assert
 (let (($x6063 (= outlier96 1)))
 (let (($x873 (= outlier96 0)))
 (or $x873 $x6063))))
(assert
 (let (($x6065 (= outlier97 1)))
 (let (($x882 (= outlier97 0)))
 (or $x882 $x6065))))
(assert
 (let (($x6067 (= outlier98 1)))
 (let (($x891 (= outlier98 0)))
 (or $x891 $x6067))))
(assert
 (let (($x6069 (= outlier99 1)))
 (let (($x900 (= outlier99 0)))
 (or $x900 $x6069))))
(assert
 (let (($x6071 (= outlier100 1)))
 (let (($x909 (= outlier100 0)))
 (or $x909 $x6071))))
(assert
 (let ((?x6078 (ite (< noise (/ 1.0 10.0)) 0.0 (ite (<= noise 1.0) noise_div 0.0))))
 (= likelihoodnoise ?x6078)))
(assert
 (let ((?x6095 (ite (< intercept 4.0) (+ (* (- (/ 734304212622459.0 15625000000000000.0)) intercept) (/ 2687220827487069.0 12500000000000000.0)) (ite (< intercept 6.0) (+ (* (- (/ 1548739910366263.0 125000000000000000.0)) intercept) (/ 3827773244966823.0 50000000000000000.0)) 0.0))))
 (let ((?x6107 (ite (< intercept 0.0) (+ (* (/ 2452708227076559.0 62500000000000000.0) intercept) (/ 19947339024974067.0 100000000000000000.0)) (ite (< intercept 2.0) (+ (* (- (/ 2452708227076559.0 62500000000000000.0)) intercept) (/ 19947339024974067.0 100000000000000000.0)) ?x6095))))
 (let ((?x6119 (ite (< intercept (- 4.0)) (+ (* (/ 1548739910366263.0 125000000000000000.0) intercept) (/ 3827773244966823.0 50000000000000000.0)) (ite (< intercept (- 2.0)) (+ (* (/ 734304212622459.0 15625000000000000.0) intercept) (/ 2687220827487069.0 12500000000000000.0)) ?x6107))))
 (let ((?x6123 (ite (> intercept 6.0) 0.0 (ite (< intercept (- 6.0)) 0.0 ?x6119))))
 (= likelihoodintercept ?x6123))))))
(assert
 (let ((?x6175 (ite (< slope 4.0) (+ (* (- (/ 734304212622459.0 15625000000000000.0)) slope) (/ 2687220827487069.0 12500000000000000.0)) (ite (< slope 6.0) (+ (* (- (/ 1548739910366263.0 125000000000000000.0)) slope) (/ 3827773244966823.0 50000000000000000.0)) 0.0))))
 (let ((?x6183 (ite (< slope 0.0) (+ (* (/ 2452708227076559.0 62500000000000000.0) slope) (/ 19947339024974067.0 100000000000000000.0)) (ite (< slope 2.0) (+ (* (- (/ 2452708227076559.0 62500000000000000.0)) slope) (/ 19947339024974067.0 100000000000000000.0)) ?x6175))))
 (let ((?x6191 (ite (< slope (- 4.0)) (+ (* (/ 1548739910366263.0 125000000000000000.0) slope) (/ 3827773244966823.0 50000000000000000.0)) (ite (< slope (- 2.0)) (+ (* (/ 734304212622459.0 15625000000000000.0) slope) (/ 2687220827487069.0 12500000000000000.0)) ?x6183))))
 (= likelihoodslope (ite (> slope 6.0) 0.0 (ite (< slope (- 6.0)) 0.0 ?x6191)))))))
(assert
 (let ((?x6245 (ite (< proboutlier 0.0) 0.0 (ite (<= proboutlier 1.0) proboutlier_div 0.0))))
 (= likelihoodproboutlier ?x6245)))
(assert
 (= likelihoodoutlier1 (ite (= outlier1 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x6270 (= y1_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y1_1_endpoint3_1| $x6270)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x6265 (= y1_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y1_1_endpoint2_1| $x6265)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x6283 (= y1_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y1_1_endpoint1_1| $x6283)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x6317 (= y1_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y1_1_endpoint0_2| $x6317)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x6333 (= y1_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y1_1_endpoint1_2| $x6333)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x6342 (= y1_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y1_1_endpoint2_2| $x6342)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x6351 (= y1_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y1_1_endpoint3_2| $x6351)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x6340 (+ mean1 ?x6279)))
 (let ((?x6385 (/ (- y1_1_endpoint3_2 y1_1_endpoint2_2) (- (+ mean1 (* ?x6258 3.0)) ?x6340))))
 (let ((?x6391 (ite (< y1_1 (+ mean1 (* ?x6258 3.0))) (+ (* ?x6385 y1_1) (- y1_1_endpoint2_2 (* ?x6385 ?x6340))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x6331 (+ mean1 ?x6297)))
 (let ((?x6380 (/ (- y1_1_endpoint2_2 y1_1_endpoint1_2) (- ?x6340 ?x6331))))
 (let ((?x6395 (ite (< y1_1 ?x6340) (+ (* ?x6380 y1_1) (- y1_1_endpoint1_2 (* ?x6380 ?x6331))) ?x6391)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x6314 (+ mean1 ?x6313)))
 (let ((?x6375 (/ (- y1_1_endpoint1_2 y1_1_endpoint0_2) (- ?x6331 ?x6314))))
 (let ((?x6399 (ite (< y1_1 ?x6331) (+ (* ?x6375 y1_1) (- y1_1_endpoint0_2 (* ?x6375 ?x6314))) ?x6395)))
 (let ((?x6298 (- mean1 ?x6297)))
 (let ((?x6370 (/ (- y1_1_endpoint0_2 y1_1_endpoint1_1) (- ?x6314 ?x6298))))
 (let ((?x6403 (ite (< y1_1 ?x6314) (+ (* ?x6370 y1_1) (- y1_1_endpoint1_1 (* ?x6370 ?x6298))) ?x6399)))
 (let ((?x6280 (- mean1 ?x6279)))
 (let ((?x6365 (/ (- y1_1_endpoint1_1 y1_1_endpoint2_1) (- ?x6298 ?x6280))))
 (let ((?x6407 (ite (< y1_1 ?x6298) (+ (* ?x6365 y1_1) (- y1_1_endpoint2_1 (* ?x6365 ?x6280))) ?x6403)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x6259 (- mean1 ?x6257)))
 (let ((?x6360 (/ (- y1_1_endpoint2_1 y1_1_endpoint3_1) (- ?x6280 ?x6259))))
 (let ((?x6411 (ite (< y1_1 ?x6280) (+ (* ?x6360 y1_1) (- y1_1_endpoint3_1 (* ?x6360 ?x6259))) ?x6407)))
 (let ((?x6415 (ite (> y1_1 (+ mean1 ?x6257)) 0.0 (ite (< y1_1 ?x6259) 0.0 ?x6411))))
 (= likelihoody1_1 ?x6415))))))))))))))))))))))))))
(assert
 (let ((?x6614 (ite (< y1_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y1_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y1_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y1_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x6626 (ite (< y1_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y1_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y1_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y1_2) (/ 3989467804994813.0 100000000000000000.0)) ?x6614))))
 (let ((?x6639 (ite (< y1_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y1_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y1_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y1_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x6626))))
 (= likelihoody1_2 (ite (> y1_2 30.0) 0.0 (ite (< y1_2 (- 30.0)) 0.0 ?x6639)))))))
(assert
 (= likelihoodoutlier2 (ite (= outlier2 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x6699 (= y2_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y2_1_endpoint3_1| $x6699)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x6696 (= y2_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y2_1_endpoint2_1| $x6696)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x6708 (= y2_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y2_1_endpoint1_1| $x6708)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x6726 (= y2_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y2_1_endpoint0_2| $x6726)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x6735 (= y2_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y2_1_endpoint1_2| $x6735)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x6744 (= y2_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y2_1_endpoint2_2| $x6744)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x6753 (= y2_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y2_1_endpoint3_2| $x6753)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x6742 (+ mean2 ?x6279)))
 (let ((?x6787 (/ (- y2_1_endpoint3_2 y2_1_endpoint2_2) (- (+ mean2 (* ?x6258 3.0)) ?x6742))))
 (let ((?x6793 (ite (< y2_1 (+ mean2 (* ?x6258 3.0))) (+ (* ?x6787 y2_1) (- y2_1_endpoint2_2 (* ?x6787 ?x6742))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x6733 (+ mean2 ?x6297)))
 (let ((?x6782 (/ (- y2_1_endpoint2_2 y2_1_endpoint1_2) (- ?x6742 ?x6733))))
 (let ((?x6797 (ite (< y2_1 ?x6742) (+ (* ?x6782 y2_1) (- y2_1_endpoint1_2 (* ?x6782 ?x6733))) ?x6793)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x6724 (+ mean2 ?x6313)))
 (let ((?x6777 (/ (- y2_1_endpoint1_2 y2_1_endpoint0_2) (- ?x6733 ?x6724))))
 (let ((?x6801 (ite (< y2_1 ?x6733) (+ (* ?x6777 y2_1) (- y2_1_endpoint0_2 (* ?x6777 ?x6724))) ?x6797)))
 (let ((?x6715 (- mean2 ?x6297)))
 (let ((?x6772 (/ (- y2_1_endpoint0_2 y2_1_endpoint1_1) (- ?x6724 ?x6715))))
 (let ((?x6805 (ite (< y2_1 ?x6724) (+ (* ?x6772 y2_1) (- y2_1_endpoint1_1 (* ?x6772 ?x6715))) ?x6801)))
 (let ((?x6706 (- mean2 ?x6279)))
 (let ((?x6767 (/ (- y2_1_endpoint1_1 y2_1_endpoint2_1) (- ?x6715 ?x6706))))
 (let ((?x6809 (ite (< y2_1 ?x6715) (+ (* ?x6767 y2_1) (- y2_1_endpoint2_1 (* ?x6767 ?x6706))) ?x6805)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x6692 (- mean2 ?x6257)))
 (let ((?x6762 (/ (- y2_1_endpoint2_1 y2_1_endpoint3_1) (- ?x6706 ?x6692))))
 (let ((?x6813 (ite (< y2_1 ?x6706) (+ (* ?x6762 y2_1) (- y2_1_endpoint3_1 (* ?x6762 ?x6692))) ?x6809)))
 (let ((?x6817 (ite (> y2_1 (+ mean2 ?x6257)) 0.0 (ite (< y2_1 ?x6692) 0.0 ?x6813))))
 (= likelihoody2_1 ?x6817))))))))))))))))))))))))))
(assert
 (let ((?x7006 (ite (< y2_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y2_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y2_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y2_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x7014 (ite (< y2_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y2_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y2_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y2_2) (/ 3989467804994813.0 100000000000000000.0)) ?x7006))))
 (let ((?x7022 (ite (< y2_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y2_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y2_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y2_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x7014))))
 (= likelihoody2_2 (ite (> y2_2 30.0) 0.0 (ite (< y2_2 (- 30.0)) 0.0 ?x7022)))))))
(assert
 (= likelihoodoutlier3 (ite (= outlier3 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x7082 (= y3_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y3_1_endpoint3_1| $x7082)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x7079 (= y3_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y3_1_endpoint2_1| $x7079)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7091 (= y3_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y3_1_endpoint1_1| $x7091)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x7109 (= y3_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y3_1_endpoint0_2| $x7109)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7118 (= y3_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y3_1_endpoint1_2| $x7118)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x7127 (= y3_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y3_1_endpoint2_2| $x7127)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x7136 (= y3_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y3_1_endpoint3_2| $x7136)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x7125 (+ mean3 ?x6279)))
 (let ((?x7170 (/ (- y3_1_endpoint3_2 y3_1_endpoint2_2) (- (+ mean3 (* ?x6258 3.0)) ?x7125))))
 (let ((?x7176 (ite (< y3_1 (+ mean3 (* ?x6258 3.0))) (+ (* ?x7170 y3_1) (- y3_1_endpoint2_2 (* ?x7170 ?x7125))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x7116 (+ mean3 ?x6297)))
 (let ((?x7165 (/ (- y3_1_endpoint2_2 y3_1_endpoint1_2) (- ?x7125 ?x7116))))
 (let ((?x7180 (ite (< y3_1 ?x7125) (+ (* ?x7165 y3_1) (- y3_1_endpoint1_2 (* ?x7165 ?x7116))) ?x7176)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x7107 (+ mean3 ?x6313)))
 (let ((?x7160 (/ (- y3_1_endpoint1_2 y3_1_endpoint0_2) (- ?x7116 ?x7107))))
 (let ((?x7184 (ite (< y3_1 ?x7116) (+ (* ?x7160 y3_1) (- y3_1_endpoint0_2 (* ?x7160 ?x7107))) ?x7180)))
 (let ((?x7098 (- mean3 ?x6297)))
 (let ((?x7155 (/ (- y3_1_endpoint0_2 y3_1_endpoint1_1) (- ?x7107 ?x7098))))
 (let ((?x7188 (ite (< y3_1 ?x7107) (+ (* ?x7155 y3_1) (- y3_1_endpoint1_1 (* ?x7155 ?x7098))) ?x7184)))
 (let ((?x7089 (- mean3 ?x6279)))
 (let ((?x7150 (/ (- y3_1_endpoint1_1 y3_1_endpoint2_1) (- ?x7098 ?x7089))))
 (let ((?x7192 (ite (< y3_1 ?x7098) (+ (* ?x7150 y3_1) (- y3_1_endpoint2_1 (* ?x7150 ?x7089))) ?x7188)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x7075 (- mean3 ?x6257)))
 (let ((?x7145 (/ (- y3_1_endpoint2_1 y3_1_endpoint3_1) (- ?x7089 ?x7075))))
 (let ((?x7196 (ite (< y3_1 ?x7089) (+ (* ?x7145 y3_1) (- y3_1_endpoint3_1 (* ?x7145 ?x7075))) ?x7192)))
 (let ((?x7200 (ite (> y3_1 (+ mean3 ?x6257)) 0.0 (ite (< y3_1 ?x7075) 0.0 ?x7196))))
 (= likelihoody3_1 ?x7200))))))))))))))))))))))))))
(assert
 (let ((?x7389 (ite (< y3_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y3_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y3_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y3_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x7397 (ite (< y3_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y3_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y3_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y3_2) (/ 3989467804994813.0 100000000000000000.0)) ?x7389))))
 (let ((?x7405 (ite (< y3_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y3_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y3_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y3_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x7397))))
 (= likelihoody3_2 (ite (> y3_2 30.0) 0.0 (ite (< y3_2 (- 30.0)) 0.0 ?x7405)))))))
(assert
 (= likelihoodoutlier4 (ite (= outlier4 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x7465 (= y4_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y4_1_endpoint3_1| $x7465)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x7462 (= y4_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y4_1_endpoint2_1| $x7462)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7474 (= y4_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y4_1_endpoint1_1| $x7474)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x7492 (= y4_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y4_1_endpoint0_2| $x7492)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7501 (= y4_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y4_1_endpoint1_2| $x7501)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x7510 (= y4_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y4_1_endpoint2_2| $x7510)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x7519 (= y4_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y4_1_endpoint3_2| $x7519)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x7508 (+ mean4 ?x6279)))
 (let ((?x7553 (/ (- y4_1_endpoint3_2 y4_1_endpoint2_2) (- (+ mean4 (* ?x6258 3.0)) ?x7508))))
 (let ((?x7559 (ite (< y4_1 (+ mean4 (* ?x6258 3.0))) (+ (* ?x7553 y4_1) (- y4_1_endpoint2_2 (* ?x7553 ?x7508))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x7499 (+ mean4 ?x6297)))
 (let ((?x7548 (/ (- y4_1_endpoint2_2 y4_1_endpoint1_2) (- ?x7508 ?x7499))))
 (let ((?x7563 (ite (< y4_1 ?x7508) (+ (* ?x7548 y4_1) (- y4_1_endpoint1_2 (* ?x7548 ?x7499))) ?x7559)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x7490 (+ mean4 ?x6313)))
 (let ((?x7543 (/ (- y4_1_endpoint1_2 y4_1_endpoint0_2) (- ?x7499 ?x7490))))
 (let ((?x7567 (ite (< y4_1 ?x7499) (+ (* ?x7543 y4_1) (- y4_1_endpoint0_2 (* ?x7543 ?x7490))) ?x7563)))
 (let ((?x7481 (- mean4 ?x6297)))
 (let ((?x7538 (/ (- y4_1_endpoint0_2 y4_1_endpoint1_1) (- ?x7490 ?x7481))))
 (let ((?x7571 (ite (< y4_1 ?x7490) (+ (* ?x7538 y4_1) (- y4_1_endpoint1_1 (* ?x7538 ?x7481))) ?x7567)))
 (let ((?x7472 (- mean4 ?x6279)))
 (let ((?x7533 (/ (- y4_1_endpoint1_1 y4_1_endpoint2_1) (- ?x7481 ?x7472))))
 (let ((?x7575 (ite (< y4_1 ?x7481) (+ (* ?x7533 y4_1) (- y4_1_endpoint2_1 (* ?x7533 ?x7472))) ?x7571)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x7458 (- mean4 ?x6257)))
 (let ((?x7528 (/ (- y4_1_endpoint2_1 y4_1_endpoint3_1) (- ?x7472 ?x7458))))
 (let ((?x7579 (ite (< y4_1 ?x7472) (+ (* ?x7528 y4_1) (- y4_1_endpoint3_1 (* ?x7528 ?x7458))) ?x7575)))
 (let ((?x7583 (ite (> y4_1 (+ mean4 ?x6257)) 0.0 (ite (< y4_1 ?x7458) 0.0 ?x7579))))
 (= likelihoody4_1 ?x7583))))))))))))))))))))))))))
(assert
 (let ((?x7772 (ite (< y4_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y4_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y4_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y4_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x7780 (ite (< y4_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y4_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y4_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y4_2) (/ 3989467804994813.0 100000000000000000.0)) ?x7772))))
 (let ((?x7788 (ite (< y4_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y4_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y4_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y4_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x7780))))
 (= likelihoody4_2 (ite (> y4_2 30.0) 0.0 (ite (< y4_2 (- 30.0)) 0.0 ?x7788)))))))
(assert
 (= likelihoodoutlier5 (ite (= outlier5 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x7848 (= y5_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y5_1_endpoint3_1| $x7848)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x7845 (= y5_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y5_1_endpoint2_1| $x7845)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7857 (= y5_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y5_1_endpoint1_1| $x7857)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x7875 (= y5_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y5_1_endpoint0_2| $x7875)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7884 (= y5_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y5_1_endpoint1_2| $x7884)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x7893 (= y5_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y5_1_endpoint2_2| $x7893)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x7902 (= y5_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y5_1_endpoint3_2| $x7902)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x7891 (+ mean5 ?x6279)))
 (let ((?x7936 (/ (- y5_1_endpoint3_2 y5_1_endpoint2_2) (- (+ mean5 (* ?x6258 3.0)) ?x7891))))
 (let ((?x7942 (ite (< y5_1 (+ mean5 (* ?x6258 3.0))) (+ (* ?x7936 y5_1) (- y5_1_endpoint2_2 (* ?x7936 ?x7891))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x7882 (+ mean5 ?x6297)))
 (let ((?x7931 (/ (- y5_1_endpoint2_2 y5_1_endpoint1_2) (- ?x7891 ?x7882))))
 (let ((?x7946 (ite (< y5_1 ?x7891) (+ (* ?x7931 y5_1) (- y5_1_endpoint1_2 (* ?x7931 ?x7882))) ?x7942)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x7873 (+ mean5 ?x6313)))
 (let ((?x7926 (/ (- y5_1_endpoint1_2 y5_1_endpoint0_2) (- ?x7882 ?x7873))))
 (let ((?x7950 (ite (< y5_1 ?x7882) (+ (* ?x7926 y5_1) (- y5_1_endpoint0_2 (* ?x7926 ?x7873))) ?x7946)))
 (let ((?x7864 (- mean5 ?x6297)))
 (let ((?x7921 (/ (- y5_1_endpoint0_2 y5_1_endpoint1_1) (- ?x7873 ?x7864))))
 (let ((?x7954 (ite (< y5_1 ?x7873) (+ (* ?x7921 y5_1) (- y5_1_endpoint1_1 (* ?x7921 ?x7864))) ?x7950)))
 (let ((?x7855 (- mean5 ?x6279)))
 (let ((?x7916 (/ (- y5_1_endpoint1_1 y5_1_endpoint2_1) (- ?x7864 ?x7855))))
 (let ((?x7958 (ite (< y5_1 ?x7864) (+ (* ?x7916 y5_1) (- y5_1_endpoint2_1 (* ?x7916 ?x7855))) ?x7954)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x7841 (- mean5 ?x6257)))
 (let ((?x7911 (/ (- y5_1_endpoint2_1 y5_1_endpoint3_1) (- ?x7855 ?x7841))))
 (let ((?x7962 (ite (< y5_1 ?x7855) (+ (* ?x7911 y5_1) (- y5_1_endpoint3_1 (* ?x7911 ?x7841))) ?x7958)))
 (let ((?x7966 (ite (> y5_1 (+ mean5 ?x6257)) 0.0 (ite (< y5_1 ?x7841) 0.0 ?x7962))))
 (= likelihoody5_1 ?x7966))))))))))))))))))))))))))
(assert
 (let ((?x8155 (ite (< y5_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y5_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y5_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y5_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x8163 (ite (< y5_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y5_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y5_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y5_2) (/ 3989467804994813.0 100000000000000000.0)) ?x8155))))
 (let ((?x8171 (ite (< y5_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y5_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y5_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y5_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x8163))))
 (= likelihoody5_2 (ite (> y5_2 30.0) 0.0 (ite (< y5_2 (- 30.0)) 0.0 ?x8171)))))))
(assert
 (= likelihoodoutlier6 (ite (= outlier6 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x8231 (= y6_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y6_1_endpoint3_1| $x8231)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x8228 (= y6_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y6_1_endpoint2_1| $x8228)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x8240 (= y6_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y6_1_endpoint1_1| $x8240)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x8258 (= y6_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y6_1_endpoint0_2| $x8258)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x8267 (= y6_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y6_1_endpoint1_2| $x8267)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x8276 (= y6_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y6_1_endpoint2_2| $x8276)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x8285 (= y6_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y6_1_endpoint3_2| $x8285)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x8274 (+ mean6 ?x6279)))
 (let ((?x8319 (/ (- y6_1_endpoint3_2 y6_1_endpoint2_2) (- (+ mean6 (* ?x6258 3.0)) ?x8274))))
 (let ((?x8325 (ite (< y6_1 (+ mean6 (* ?x6258 3.0))) (+ (* ?x8319 y6_1) (- y6_1_endpoint2_2 (* ?x8319 ?x8274))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x8265 (+ mean6 ?x6297)))
 (let ((?x8314 (/ (- y6_1_endpoint2_2 y6_1_endpoint1_2) (- ?x8274 ?x8265))))
 (let ((?x8329 (ite (< y6_1 ?x8274) (+ (* ?x8314 y6_1) (- y6_1_endpoint1_2 (* ?x8314 ?x8265))) ?x8325)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x8256 (+ mean6 ?x6313)))
 (let ((?x8309 (/ (- y6_1_endpoint1_2 y6_1_endpoint0_2) (- ?x8265 ?x8256))))
 (let ((?x8333 (ite (< y6_1 ?x8265) (+ (* ?x8309 y6_1) (- y6_1_endpoint0_2 (* ?x8309 ?x8256))) ?x8329)))
 (let ((?x8247 (- mean6 ?x6297)))
 (let ((?x8304 (/ (- y6_1_endpoint0_2 y6_1_endpoint1_1) (- ?x8256 ?x8247))))
 (let ((?x8337 (ite (< y6_1 ?x8256) (+ (* ?x8304 y6_1) (- y6_1_endpoint1_1 (* ?x8304 ?x8247))) ?x8333)))
 (let ((?x8238 (- mean6 ?x6279)))
 (let ((?x8299 (/ (- y6_1_endpoint1_1 y6_1_endpoint2_1) (- ?x8247 ?x8238))))
 (let ((?x8341 (ite (< y6_1 ?x8247) (+ (* ?x8299 y6_1) (- y6_1_endpoint2_1 (* ?x8299 ?x8238))) ?x8337)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x8224 (- mean6 ?x6257)))
 (let ((?x8294 (/ (- y6_1_endpoint2_1 y6_1_endpoint3_1) (- ?x8238 ?x8224))))
 (let ((?x8345 (ite (< y6_1 ?x8238) (+ (* ?x8294 y6_1) (- y6_1_endpoint3_1 (* ?x8294 ?x8224))) ?x8341)))
 (let ((?x8349 (ite (> y6_1 (+ mean6 ?x6257)) 0.0 (ite (< y6_1 ?x8224) 0.0 ?x8345))))
 (= likelihoody6_1 ?x8349))))))))))))))))))))))))))
(assert
 (let ((?x8538 (ite (< y6_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y6_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y6_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y6_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x8546 (ite (< y6_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y6_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y6_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y6_2) (/ 3989467804994813.0 100000000000000000.0)) ?x8538))))
 (let ((?x8554 (ite (< y6_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y6_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y6_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y6_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x8546))))
 (= likelihoody6_2 (ite (> y6_2 30.0) 0.0 (ite (< y6_2 (- 30.0)) 0.0 ?x8554)))))))
(assert
 (= likelihoodoutlier7 (ite (= outlier7 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x8614 (= y7_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y7_1_endpoint3_1| $x8614)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x8611 (= y7_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y7_1_endpoint2_1| $x8611)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x8623 (= y7_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y7_1_endpoint1_1| $x8623)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x8641 (= y7_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y7_1_endpoint0_2| $x8641)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x8650 (= y7_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y7_1_endpoint1_2| $x8650)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x8659 (= y7_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y7_1_endpoint2_2| $x8659)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x8668 (= y7_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y7_1_endpoint3_2| $x8668)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x8657 (+ mean7 ?x6279)))
 (let ((?x8702 (/ (- y7_1_endpoint3_2 y7_1_endpoint2_2) (- (+ mean7 (* ?x6258 3.0)) ?x8657))))
 (let ((?x8708 (ite (< y7_1 (+ mean7 (* ?x6258 3.0))) (+ (* ?x8702 y7_1) (- y7_1_endpoint2_2 (* ?x8702 ?x8657))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x8648 (+ mean7 ?x6297)))
 (let ((?x8697 (/ (- y7_1_endpoint2_2 y7_1_endpoint1_2) (- ?x8657 ?x8648))))
 (let ((?x8712 (ite (< y7_1 ?x8657) (+ (* ?x8697 y7_1) (- y7_1_endpoint1_2 (* ?x8697 ?x8648))) ?x8708)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x8639 (+ mean7 ?x6313)))
 (let ((?x8692 (/ (- y7_1_endpoint1_2 y7_1_endpoint0_2) (- ?x8648 ?x8639))))
 (let ((?x8716 (ite (< y7_1 ?x8648) (+ (* ?x8692 y7_1) (- y7_1_endpoint0_2 (* ?x8692 ?x8639))) ?x8712)))
 (let ((?x8630 (- mean7 ?x6297)))
 (let ((?x8687 (/ (- y7_1_endpoint0_2 y7_1_endpoint1_1) (- ?x8639 ?x8630))))
 (let ((?x8720 (ite (< y7_1 ?x8639) (+ (* ?x8687 y7_1) (- y7_1_endpoint1_1 (* ?x8687 ?x8630))) ?x8716)))
 (let ((?x8621 (- mean7 ?x6279)))
 (let ((?x8682 (/ (- y7_1_endpoint1_1 y7_1_endpoint2_1) (- ?x8630 ?x8621))))
 (let ((?x8724 (ite (< y7_1 ?x8630) (+ (* ?x8682 y7_1) (- y7_1_endpoint2_1 (* ?x8682 ?x8621))) ?x8720)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x8607 (- mean7 ?x6257)))
 (let ((?x8677 (/ (- y7_1_endpoint2_1 y7_1_endpoint3_1) (- ?x8621 ?x8607))))
 (let ((?x8728 (ite (< y7_1 ?x8621) (+ (* ?x8677 y7_1) (- y7_1_endpoint3_1 (* ?x8677 ?x8607))) ?x8724)))
 (let ((?x8732 (ite (> y7_1 (+ mean7 ?x6257)) 0.0 (ite (< y7_1 ?x8607) 0.0 ?x8728))))
 (= likelihoody7_1 ?x8732))))))))))))))))))))))))))
(assert
 (let ((?x8921 (ite (< y7_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y7_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y7_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y7_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x8929 (ite (< y7_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y7_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y7_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y7_2) (/ 3989467804994813.0 100000000000000000.0)) ?x8921))))
 (let ((?x8937 (ite (< y7_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y7_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y7_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y7_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x8929))))
 (= likelihoody7_2 (ite (> y7_2 30.0) 0.0 (ite (< y7_2 (- 30.0)) 0.0 ?x8937)))))))
(assert
 (= likelihoodoutlier8 (ite (= outlier8 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x8997 (= y8_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y8_1_endpoint3_1| $x8997)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x8994 (= y8_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y8_1_endpoint2_1| $x8994)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9006 (= y8_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y8_1_endpoint1_1| $x9006)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x9024 (= y8_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y8_1_endpoint0_2| $x9024)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9033 (= y8_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y8_1_endpoint1_2| $x9033)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x9042 (= y8_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y8_1_endpoint2_2| $x9042)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x9051 (= y8_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y8_1_endpoint3_2| $x9051)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x9040 (+ mean8 ?x6279)))
 (let ((?x9085 (/ (- y8_1_endpoint3_2 y8_1_endpoint2_2) (- (+ mean8 (* ?x6258 3.0)) ?x9040))))
 (let ((?x9091 (ite (< y8_1 (+ mean8 (* ?x6258 3.0))) (+ (* ?x9085 y8_1) (- y8_1_endpoint2_2 (* ?x9085 ?x9040))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x9031 (+ mean8 ?x6297)))
 (let ((?x9080 (/ (- y8_1_endpoint2_2 y8_1_endpoint1_2) (- ?x9040 ?x9031))))
 (let ((?x9095 (ite (< y8_1 ?x9040) (+ (* ?x9080 y8_1) (- y8_1_endpoint1_2 (* ?x9080 ?x9031))) ?x9091)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x9022 (+ mean8 ?x6313)))
 (let ((?x9075 (/ (- y8_1_endpoint1_2 y8_1_endpoint0_2) (- ?x9031 ?x9022))))
 (let ((?x9099 (ite (< y8_1 ?x9031) (+ (* ?x9075 y8_1) (- y8_1_endpoint0_2 (* ?x9075 ?x9022))) ?x9095)))
 (let ((?x9013 (- mean8 ?x6297)))
 (let ((?x9070 (/ (- y8_1_endpoint0_2 y8_1_endpoint1_1) (- ?x9022 ?x9013))))
 (let ((?x9103 (ite (< y8_1 ?x9022) (+ (* ?x9070 y8_1) (- y8_1_endpoint1_1 (* ?x9070 ?x9013))) ?x9099)))
 (let ((?x9004 (- mean8 ?x6279)))
 (let ((?x9065 (/ (- y8_1_endpoint1_1 y8_1_endpoint2_1) (- ?x9013 ?x9004))))
 (let ((?x9107 (ite (< y8_1 ?x9013) (+ (* ?x9065 y8_1) (- y8_1_endpoint2_1 (* ?x9065 ?x9004))) ?x9103)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x8990 (- mean8 ?x6257)))
 (let ((?x9060 (/ (- y8_1_endpoint2_1 y8_1_endpoint3_1) (- ?x9004 ?x8990))))
 (let ((?x9111 (ite (< y8_1 ?x9004) (+ (* ?x9060 y8_1) (- y8_1_endpoint3_1 (* ?x9060 ?x8990))) ?x9107)))
 (let ((?x9115 (ite (> y8_1 (+ mean8 ?x6257)) 0.0 (ite (< y8_1 ?x8990) 0.0 ?x9111))))
 (= likelihoody8_1 ?x9115))))))))))))))))))))))))))
(assert
 (let ((?x9304 (ite (< y8_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y8_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y8_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y8_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x9312 (ite (< y8_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y8_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y8_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y8_2) (/ 3989467804994813.0 100000000000000000.0)) ?x9304))))
 (let ((?x9320 (ite (< y8_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y8_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y8_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y8_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x9312))))
 (= likelihoody8_2 (ite (> y8_2 30.0) 0.0 (ite (< y8_2 (- 30.0)) 0.0 ?x9320)))))))
(assert
 (= likelihoodoutlier9 (ite (= outlier9 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x9380 (= y9_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y9_1_endpoint3_1| $x9380)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x9377 (= y9_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y9_1_endpoint2_1| $x9377)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9389 (= y9_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y9_1_endpoint1_1| $x9389)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x9407 (= y9_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y9_1_endpoint0_2| $x9407)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9416 (= y9_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y9_1_endpoint1_2| $x9416)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x9425 (= y9_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y9_1_endpoint2_2| $x9425)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x9434 (= y9_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y9_1_endpoint3_2| $x9434)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x9423 (+ mean9 ?x6279)))
 (let ((?x9468 (/ (- y9_1_endpoint3_2 y9_1_endpoint2_2) (- (+ mean9 (* ?x6258 3.0)) ?x9423))))
 (let ((?x9474 (ite (< y9_1 (+ mean9 (* ?x6258 3.0))) (+ (* ?x9468 y9_1) (- y9_1_endpoint2_2 (* ?x9468 ?x9423))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x9414 (+ mean9 ?x6297)))
 (let ((?x9463 (/ (- y9_1_endpoint2_2 y9_1_endpoint1_2) (- ?x9423 ?x9414))))
 (let ((?x9478 (ite (< y9_1 ?x9423) (+ (* ?x9463 y9_1) (- y9_1_endpoint1_2 (* ?x9463 ?x9414))) ?x9474)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x9405 (+ mean9 ?x6313)))
 (let ((?x9458 (/ (- y9_1_endpoint1_2 y9_1_endpoint0_2) (- ?x9414 ?x9405))))
 (let ((?x9482 (ite (< y9_1 ?x9414) (+ (* ?x9458 y9_1) (- y9_1_endpoint0_2 (* ?x9458 ?x9405))) ?x9478)))
 (let ((?x9396 (- mean9 ?x6297)))
 (let ((?x9453 (/ (- y9_1_endpoint0_2 y9_1_endpoint1_1) (- ?x9405 ?x9396))))
 (let ((?x9486 (ite (< y9_1 ?x9405) (+ (* ?x9453 y9_1) (- y9_1_endpoint1_1 (* ?x9453 ?x9396))) ?x9482)))
 (let ((?x9387 (- mean9 ?x6279)))
 (let ((?x9448 (/ (- y9_1_endpoint1_1 y9_1_endpoint2_1) (- ?x9396 ?x9387))))
 (let ((?x9490 (ite (< y9_1 ?x9396) (+ (* ?x9448 y9_1) (- y9_1_endpoint2_1 (* ?x9448 ?x9387))) ?x9486)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x9373 (- mean9 ?x6257)))
 (let ((?x9443 (/ (- y9_1_endpoint2_1 y9_1_endpoint3_1) (- ?x9387 ?x9373))))
 (let ((?x9494 (ite (< y9_1 ?x9387) (+ (* ?x9443 y9_1) (- y9_1_endpoint3_1 (* ?x9443 ?x9373))) ?x9490)))
 (let ((?x9498 (ite (> y9_1 (+ mean9 ?x6257)) 0.0 (ite (< y9_1 ?x9373) 0.0 ?x9494))))
 (= likelihoody9_1 ?x9498))))))))))))))))))))))))))
(assert
 (let ((?x9687 (ite (< y9_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y9_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y9_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y9_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x9695 (ite (< y9_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y9_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y9_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y9_2) (/ 3989467804994813.0 100000000000000000.0)) ?x9687))))
 (let ((?x9703 (ite (< y9_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y9_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y9_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y9_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x9695))))
 (= likelihoody9_2 (ite (> y9_2 30.0) 0.0 (ite (< y9_2 (- 30.0)) 0.0 ?x9703)))))))
(assert
 (= likelihoodoutlier10 (ite (= outlier10 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x9763 (= y10_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y10_1_endpoint3_1| $x9763)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x9760 (= y10_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y10_1_endpoint2_1| $x9760)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9772 (= y10_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y10_1_endpoint1_1| $x9772)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x9790 (= y10_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y10_1_endpoint0_2| $x9790)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9799 (= y10_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y10_1_endpoint1_2| $x9799)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x9808 (= y10_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y10_1_endpoint2_2| $x9808)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x9817 (= y10_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y10_1_endpoint3_2| $x9817)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x9806 (+ mean10 ?x6279)))
 (let ((?x9851 (/ (- y10_1_endpoint3_2 y10_1_endpoint2_2) (- (+ mean10 (* ?x6258 3.0)) ?x9806))))
 (let ((?x9857 (ite (< y10_1 (+ mean10 (* ?x6258 3.0))) (+ (* ?x9851 y10_1) (- y10_1_endpoint2_2 (* ?x9851 ?x9806))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x9797 (+ mean10 ?x6297)))
 (let ((?x9846 (/ (- y10_1_endpoint2_2 y10_1_endpoint1_2) (- ?x9806 ?x9797))))
 (let ((?x9861 (ite (< y10_1 ?x9806) (+ (* ?x9846 y10_1) (- y10_1_endpoint1_2 (* ?x9846 ?x9797))) ?x9857)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x9788 (+ mean10 ?x6313)))
 (let ((?x9841 (/ (- y10_1_endpoint1_2 y10_1_endpoint0_2) (- ?x9797 ?x9788))))
 (let ((?x9865 (ite (< y10_1 ?x9797) (+ (* ?x9841 y10_1) (- y10_1_endpoint0_2 (* ?x9841 ?x9788))) ?x9861)))
 (let ((?x9779 (- mean10 ?x6297)))
 (let ((?x9836 (/ (- y10_1_endpoint0_2 y10_1_endpoint1_1) (- ?x9788 ?x9779))))
 (let ((?x9869 (ite (< y10_1 ?x9788) (+ (* ?x9836 y10_1) (- y10_1_endpoint1_1 (* ?x9836 ?x9779))) ?x9865)))
 (let ((?x9770 (- mean10 ?x6279)))
 (let ((?x9831 (/ (- y10_1_endpoint1_1 y10_1_endpoint2_1) (- ?x9779 ?x9770))))
 (let ((?x9873 (ite (< y10_1 ?x9779) (+ (* ?x9831 y10_1) (- y10_1_endpoint2_1 (* ?x9831 ?x9770))) ?x9869)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x9756 (- mean10 ?x6257)))
 (let ((?x9826 (/ (- y10_1_endpoint2_1 y10_1_endpoint3_1) (- ?x9770 ?x9756))))
 (let ((?x9877 (ite (< y10_1 ?x9770) (+ (* ?x9826 y10_1) (- y10_1_endpoint3_1 (* ?x9826 ?x9756))) ?x9873)))
 (let ((?x9881 (ite (> y10_1 (+ mean10 ?x6257)) 0.0 (ite (< y10_1 ?x9756) 0.0 ?x9877))))
 (= likelihoody10_1 ?x9881))))))))))))))))))))))))))
(assert
 (let ((?x10070 (ite (< y10_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y10_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y10_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y10_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x10078 (ite (< y10_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y10_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y10_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y10_2) (/ 3989467804994813.0 100000000000000000.0)) ?x10070))))
 (let ((?x10086 (ite (< y10_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y10_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y10_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y10_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x10078))))
 (= likelihoody10_2 (ite (> y10_2 30.0) 0.0 (ite (< y10_2 (- 30.0)) 0.0 ?x10086)))))))
(assert
 (= likelihoodoutlier11 (ite (= outlier11 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x10146 (= y11_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y11_1_endpoint3_1| $x10146)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x10143 (= y11_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y11_1_endpoint2_1| $x10143)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x10155 (= y11_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y11_1_endpoint1_1| $x10155)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x10173 (= y11_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y11_1_endpoint0_2| $x10173)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x10182 (= y11_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y11_1_endpoint1_2| $x10182)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x10191 (= y11_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y11_1_endpoint2_2| $x10191)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x10200 (= y11_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y11_1_endpoint3_2| $x10200)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x10189 (+ mean11 ?x6279)))
 (let ((?x10234 (/ (- y11_1_endpoint3_2 y11_1_endpoint2_2) (- (+ mean11 (* ?x6258 3.0)) ?x10189))))
 (let ((?x10240 (ite (< y11_1 (+ mean11 (* ?x6258 3.0))) (+ (* ?x10234 y11_1) (- y11_1_endpoint2_2 (* ?x10234 ?x10189))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x10180 (+ mean11 ?x6297)))
 (let ((?x10229 (/ (- y11_1_endpoint2_2 y11_1_endpoint1_2) (- ?x10189 ?x10180))))
 (let ((?x10244 (ite (< y11_1 ?x10189) (+ (* ?x10229 y11_1) (- y11_1_endpoint1_2 (* ?x10229 ?x10180))) ?x10240)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x10171 (+ mean11 ?x6313)))
 (let ((?x10224 (/ (- y11_1_endpoint1_2 y11_1_endpoint0_2) (- ?x10180 ?x10171))))
 (let ((?x10248 (ite (< y11_1 ?x10180) (+ (* ?x10224 y11_1) (- y11_1_endpoint0_2 (* ?x10224 ?x10171))) ?x10244)))
 (let ((?x10162 (- mean11 ?x6297)))
 (let ((?x10219 (/ (- y11_1_endpoint0_2 y11_1_endpoint1_1) (- ?x10171 ?x10162))))
 (let ((?x10252 (ite (< y11_1 ?x10171) (+ (* ?x10219 y11_1) (- y11_1_endpoint1_1 (* ?x10219 ?x10162))) ?x10248)))
 (let ((?x10153 (- mean11 ?x6279)))
 (let ((?x10214 (/ (- y11_1_endpoint1_1 y11_1_endpoint2_1) (- ?x10162 ?x10153))))
 (let ((?x10256 (ite (< y11_1 ?x10162) (+ (* ?x10214 y11_1) (- y11_1_endpoint2_1 (* ?x10214 ?x10153))) ?x10252)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x10139 (- mean11 ?x6257)))
 (let ((?x10209 (/ (- y11_1_endpoint2_1 y11_1_endpoint3_1) (- ?x10153 ?x10139))))
 (let ((?x10260 (ite (< y11_1 ?x10153) (+ (* ?x10209 y11_1) (- y11_1_endpoint3_1 (* ?x10209 ?x10139))) ?x10256)))
 (let ((?x10264 (ite (> y11_1 (+ mean11 ?x6257)) 0.0 (ite (< y11_1 ?x10139) 0.0 ?x10260))))
 (= likelihoody11_1 ?x10264))))))))))))))))))))))))))
(assert
 (let ((?x10453 (ite (< y11_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y11_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y11_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y11_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x10461 (ite (< y11_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y11_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y11_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y11_2) (/ 3989467804994813.0 100000000000000000.0)) ?x10453))))
 (let ((?x10469 (ite (< y11_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y11_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y11_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y11_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x10461))))
 (= likelihoody11_2 (ite (> y11_2 30.0) 0.0 (ite (< y11_2 (- 30.0)) 0.0 ?x10469)))))))
(assert
 (= likelihoodoutlier12 (ite (= outlier12 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x10529 (= y12_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y12_1_endpoint3_1| $x10529)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x10526 (= y12_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y12_1_endpoint2_1| $x10526)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x10538 (= y12_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y12_1_endpoint1_1| $x10538)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x10556 (= y12_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y12_1_endpoint0_2| $x10556)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x10565 (= y12_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y12_1_endpoint1_2| $x10565)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x10574 (= y12_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y12_1_endpoint2_2| $x10574)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x10583 (= y12_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y12_1_endpoint3_2| $x10583)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x10572 (+ mean12 ?x6279)))
 (let ((?x10617 (/ (- y12_1_endpoint3_2 y12_1_endpoint2_2) (- (+ mean12 (* ?x6258 3.0)) ?x10572))))
 (let ((?x10623 (ite (< y12_1 (+ mean12 (* ?x6258 3.0))) (+ (* ?x10617 y12_1) (- y12_1_endpoint2_2 (* ?x10617 ?x10572))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x10563 (+ mean12 ?x6297)))
 (let ((?x10612 (/ (- y12_1_endpoint2_2 y12_1_endpoint1_2) (- ?x10572 ?x10563))))
 (let ((?x10627 (ite (< y12_1 ?x10572) (+ (* ?x10612 y12_1) (- y12_1_endpoint1_2 (* ?x10612 ?x10563))) ?x10623)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x10554 (+ mean12 ?x6313)))
 (let ((?x10607 (/ (- y12_1_endpoint1_2 y12_1_endpoint0_2) (- ?x10563 ?x10554))))
 (let ((?x10631 (ite (< y12_1 ?x10563) (+ (* ?x10607 y12_1) (- y12_1_endpoint0_2 (* ?x10607 ?x10554))) ?x10627)))
 (let ((?x10545 (- mean12 ?x6297)))
 (let ((?x10602 (/ (- y12_1_endpoint0_2 y12_1_endpoint1_1) (- ?x10554 ?x10545))))
 (let ((?x10635 (ite (< y12_1 ?x10554) (+ (* ?x10602 y12_1) (- y12_1_endpoint1_1 (* ?x10602 ?x10545))) ?x10631)))
 (let ((?x10536 (- mean12 ?x6279)))
 (let ((?x10597 (/ (- y12_1_endpoint1_1 y12_1_endpoint2_1) (- ?x10545 ?x10536))))
 (let ((?x10639 (ite (< y12_1 ?x10545) (+ (* ?x10597 y12_1) (- y12_1_endpoint2_1 (* ?x10597 ?x10536))) ?x10635)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x10522 (- mean12 ?x6257)))
 (let ((?x10592 (/ (- y12_1_endpoint2_1 y12_1_endpoint3_1) (- ?x10536 ?x10522))))
 (let ((?x10643 (ite (< y12_1 ?x10536) (+ (* ?x10592 y12_1) (- y12_1_endpoint3_1 (* ?x10592 ?x10522))) ?x10639)))
 (let ((?x10647 (ite (> y12_1 (+ mean12 ?x6257)) 0.0 (ite (< y12_1 ?x10522) 0.0 ?x10643))))
 (= likelihoody12_1 ?x10647))))))))))))))))))))))))))
(assert
 (let ((?x10836 (ite (< y12_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y12_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y12_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y12_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x10844 (ite (< y12_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y12_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y12_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y12_2) (/ 3989467804994813.0 100000000000000000.0)) ?x10836))))
 (let ((?x10852 (ite (< y12_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y12_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y12_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y12_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x10844))))
 (= likelihoody12_2 (ite (> y12_2 30.0) 0.0 (ite (< y12_2 (- 30.0)) 0.0 ?x10852)))))))
(assert
 (= likelihoodoutlier13 (ite (= outlier13 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x10912 (= y13_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y13_1_endpoint3_1| $x10912)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x10909 (= y13_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y13_1_endpoint2_1| $x10909)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x10921 (= y13_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y13_1_endpoint1_1| $x10921)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x10939 (= y13_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y13_1_endpoint0_2| $x10939)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x10948 (= y13_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y13_1_endpoint1_2| $x10948)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x10957 (= y13_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y13_1_endpoint2_2| $x10957)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x10966 (= y13_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y13_1_endpoint3_2| $x10966)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x10955 (+ mean13 ?x6279)))
 (let ((?x11000 (/ (- y13_1_endpoint3_2 y13_1_endpoint2_2) (- (+ mean13 (* ?x6258 3.0)) ?x10955))))
 (let ((?x11006 (ite (< y13_1 (+ mean13 (* ?x6258 3.0))) (+ (* ?x11000 y13_1) (- y13_1_endpoint2_2 (* ?x11000 ?x10955))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x10946 (+ mean13 ?x6297)))
 (let ((?x10995 (/ (- y13_1_endpoint2_2 y13_1_endpoint1_2) (- ?x10955 ?x10946))))
 (let ((?x11010 (ite (< y13_1 ?x10955) (+ (* ?x10995 y13_1) (- y13_1_endpoint1_2 (* ?x10995 ?x10946))) ?x11006)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x10937 (+ mean13 ?x6313)))
 (let ((?x10990 (/ (- y13_1_endpoint1_2 y13_1_endpoint0_2) (- ?x10946 ?x10937))))
 (let ((?x11014 (ite (< y13_1 ?x10946) (+ (* ?x10990 y13_1) (- y13_1_endpoint0_2 (* ?x10990 ?x10937))) ?x11010)))
 (let ((?x10928 (- mean13 ?x6297)))
 (let ((?x10985 (/ (- y13_1_endpoint0_2 y13_1_endpoint1_1) (- ?x10937 ?x10928))))
 (let ((?x11018 (ite (< y13_1 ?x10937) (+ (* ?x10985 y13_1) (- y13_1_endpoint1_1 (* ?x10985 ?x10928))) ?x11014)))
 (let ((?x10919 (- mean13 ?x6279)))
 (let ((?x10980 (/ (- y13_1_endpoint1_1 y13_1_endpoint2_1) (- ?x10928 ?x10919))))
 (let ((?x11022 (ite (< y13_1 ?x10928) (+ (* ?x10980 y13_1) (- y13_1_endpoint2_1 (* ?x10980 ?x10919))) ?x11018)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x10905 (- mean13 ?x6257)))
 (let ((?x10975 (/ (- y13_1_endpoint2_1 y13_1_endpoint3_1) (- ?x10919 ?x10905))))
 (let ((?x11026 (ite (< y13_1 ?x10919) (+ (* ?x10975 y13_1) (- y13_1_endpoint3_1 (* ?x10975 ?x10905))) ?x11022)))
 (let ((?x11030 (ite (> y13_1 (+ mean13 ?x6257)) 0.0 (ite (< y13_1 ?x10905) 0.0 ?x11026))))
 (= likelihoody13_1 ?x11030))))))))))))))))))))))))))
(assert
 (let ((?x11219 (ite (< y13_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y13_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y13_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y13_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x11227 (ite (< y13_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y13_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y13_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y13_2) (/ 3989467804994813.0 100000000000000000.0)) ?x11219))))
 (let ((?x11235 (ite (< y13_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y13_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y13_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y13_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x11227))))
 (= likelihoody13_2 (ite (> y13_2 30.0) 0.0 (ite (< y13_2 (- 30.0)) 0.0 ?x11235)))))))
(assert
 (= likelihoodoutlier14 (ite (= outlier14 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x11295 (= y14_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y14_1_endpoint3_1| $x11295)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x11292 (= y14_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y14_1_endpoint2_1| $x11292)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x11304 (= y14_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y14_1_endpoint1_1| $x11304)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x11322 (= y14_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y14_1_endpoint0_2| $x11322)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x11331 (= y14_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y14_1_endpoint1_2| $x11331)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x11340 (= y14_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y14_1_endpoint2_2| $x11340)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x11349 (= y14_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y14_1_endpoint3_2| $x11349)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x11338 (+ mean14 ?x6279)))
 (let ((?x11383 (/ (- y14_1_endpoint3_2 y14_1_endpoint2_2) (- (+ mean14 (* ?x6258 3.0)) ?x11338))))
 (let ((?x11389 (ite (< y14_1 (+ mean14 (* ?x6258 3.0))) (+ (* ?x11383 y14_1) (- y14_1_endpoint2_2 (* ?x11383 ?x11338))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x11329 (+ mean14 ?x6297)))
 (let ((?x11378 (/ (- y14_1_endpoint2_2 y14_1_endpoint1_2) (- ?x11338 ?x11329))))
 (let ((?x11393 (ite (< y14_1 ?x11338) (+ (* ?x11378 y14_1) (- y14_1_endpoint1_2 (* ?x11378 ?x11329))) ?x11389)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x11320 (+ mean14 ?x6313)))
 (let ((?x11373 (/ (- y14_1_endpoint1_2 y14_1_endpoint0_2) (- ?x11329 ?x11320))))
 (let ((?x11397 (ite (< y14_1 ?x11329) (+ (* ?x11373 y14_1) (- y14_1_endpoint0_2 (* ?x11373 ?x11320))) ?x11393)))
 (let ((?x11311 (- mean14 ?x6297)))
 (let ((?x11368 (/ (- y14_1_endpoint0_2 y14_1_endpoint1_1) (- ?x11320 ?x11311))))
 (let ((?x11401 (ite (< y14_1 ?x11320) (+ (* ?x11368 y14_1) (- y14_1_endpoint1_1 (* ?x11368 ?x11311))) ?x11397)))
 (let ((?x11302 (- mean14 ?x6279)))
 (let ((?x11363 (/ (- y14_1_endpoint1_1 y14_1_endpoint2_1) (- ?x11311 ?x11302))))
 (let ((?x11405 (ite (< y14_1 ?x11311) (+ (* ?x11363 y14_1) (- y14_1_endpoint2_1 (* ?x11363 ?x11302))) ?x11401)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x11288 (- mean14 ?x6257)))
 (let ((?x11358 (/ (- y14_1_endpoint2_1 y14_1_endpoint3_1) (- ?x11302 ?x11288))))
 (let ((?x11409 (ite (< y14_1 ?x11302) (+ (* ?x11358 y14_1) (- y14_1_endpoint3_1 (* ?x11358 ?x11288))) ?x11405)))
 (let ((?x11413 (ite (> y14_1 (+ mean14 ?x6257)) 0.0 (ite (< y14_1 ?x11288) 0.0 ?x11409))))
 (= likelihoody14_1 ?x11413))))))))))))))))))))))))))
(assert
 (let ((?x11602 (ite (< y14_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y14_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y14_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y14_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x11610 (ite (< y14_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y14_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y14_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y14_2) (/ 3989467804994813.0 100000000000000000.0)) ?x11602))))
 (let ((?x11618 (ite (< y14_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y14_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y14_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y14_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x11610))))
 (= likelihoody14_2 (ite (> y14_2 30.0) 0.0 (ite (< y14_2 (- 30.0)) 0.0 ?x11618)))))))
(assert
 (= likelihoodoutlier15 (ite (= outlier15 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x11678 (= y15_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y15_1_endpoint3_1| $x11678)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x11675 (= y15_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y15_1_endpoint2_1| $x11675)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x11687 (= y15_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y15_1_endpoint1_1| $x11687)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x11705 (= y15_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y15_1_endpoint0_2| $x11705)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x11714 (= y15_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y15_1_endpoint1_2| $x11714)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x11723 (= y15_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y15_1_endpoint2_2| $x11723)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x11732 (= y15_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y15_1_endpoint3_2| $x11732)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x11721 (+ mean15 ?x6279)))
 (let ((?x11766 (/ (- y15_1_endpoint3_2 y15_1_endpoint2_2) (- (+ mean15 (* ?x6258 3.0)) ?x11721))))
 (let ((?x11772 (ite (< y15_1 (+ mean15 (* ?x6258 3.0))) (+ (* ?x11766 y15_1) (- y15_1_endpoint2_2 (* ?x11766 ?x11721))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x11712 (+ mean15 ?x6297)))
 (let ((?x11761 (/ (- y15_1_endpoint2_2 y15_1_endpoint1_2) (- ?x11721 ?x11712))))
 (let ((?x11776 (ite (< y15_1 ?x11721) (+ (* ?x11761 y15_1) (- y15_1_endpoint1_2 (* ?x11761 ?x11712))) ?x11772)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x11703 (+ mean15 ?x6313)))
 (let ((?x11756 (/ (- y15_1_endpoint1_2 y15_1_endpoint0_2) (- ?x11712 ?x11703))))
 (let ((?x11780 (ite (< y15_1 ?x11712) (+ (* ?x11756 y15_1) (- y15_1_endpoint0_2 (* ?x11756 ?x11703))) ?x11776)))
 (let ((?x11694 (- mean15 ?x6297)))
 (let ((?x11751 (/ (- y15_1_endpoint0_2 y15_1_endpoint1_1) (- ?x11703 ?x11694))))
 (let ((?x11784 (ite (< y15_1 ?x11703) (+ (* ?x11751 y15_1) (- y15_1_endpoint1_1 (* ?x11751 ?x11694))) ?x11780)))
 (let ((?x11685 (- mean15 ?x6279)))
 (let ((?x11746 (/ (- y15_1_endpoint1_1 y15_1_endpoint2_1) (- ?x11694 ?x11685))))
 (let ((?x11788 (ite (< y15_1 ?x11694) (+ (* ?x11746 y15_1) (- y15_1_endpoint2_1 (* ?x11746 ?x11685))) ?x11784)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x11671 (- mean15 ?x6257)))
 (let ((?x11741 (/ (- y15_1_endpoint2_1 y15_1_endpoint3_1) (- ?x11685 ?x11671))))
 (let ((?x11792 (ite (< y15_1 ?x11685) (+ (* ?x11741 y15_1) (- y15_1_endpoint3_1 (* ?x11741 ?x11671))) ?x11788)))
 (let ((?x11796 (ite (> y15_1 (+ mean15 ?x6257)) 0.0 (ite (< y15_1 ?x11671) 0.0 ?x11792))))
 (= likelihoody15_1 ?x11796))))))))))))))))))))))))))
(assert
 (let ((?x11985 (ite (< y15_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y15_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y15_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y15_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x11993 (ite (< y15_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y15_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y15_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y15_2) (/ 3989467804994813.0 100000000000000000.0)) ?x11985))))
 (let ((?x12001 (ite (< y15_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y15_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y15_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y15_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x11993))))
 (= likelihoody15_2 (ite (> y15_2 30.0) 0.0 (ite (< y15_2 (- 30.0)) 0.0 ?x12001)))))))
(assert
 (= likelihoodoutlier16 (ite (= outlier16 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x12061 (= y16_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y16_1_endpoint3_1| $x12061)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x12058 (= y16_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y16_1_endpoint2_1| $x12058)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x12070 (= y16_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y16_1_endpoint1_1| $x12070)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x12088 (= y16_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y16_1_endpoint0_2| $x12088)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x12097 (= y16_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y16_1_endpoint1_2| $x12097)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x12106 (= y16_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y16_1_endpoint2_2| $x12106)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x12115 (= y16_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y16_1_endpoint3_2| $x12115)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x12104 (+ mean16 ?x6279)))
 (let ((?x12149 (/ (- y16_1_endpoint3_2 y16_1_endpoint2_2) (- (+ mean16 (* ?x6258 3.0)) ?x12104))))
 (let ((?x12155 (ite (< y16_1 (+ mean16 (* ?x6258 3.0))) (+ (* ?x12149 y16_1) (- y16_1_endpoint2_2 (* ?x12149 ?x12104))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x12095 (+ mean16 ?x6297)))
 (let ((?x12144 (/ (- y16_1_endpoint2_2 y16_1_endpoint1_2) (- ?x12104 ?x12095))))
 (let ((?x12159 (ite (< y16_1 ?x12104) (+ (* ?x12144 y16_1) (- y16_1_endpoint1_2 (* ?x12144 ?x12095))) ?x12155)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x12086 (+ mean16 ?x6313)))
 (let ((?x12139 (/ (- y16_1_endpoint1_2 y16_1_endpoint0_2) (- ?x12095 ?x12086))))
 (let ((?x12163 (ite (< y16_1 ?x12095) (+ (* ?x12139 y16_1) (- y16_1_endpoint0_2 (* ?x12139 ?x12086))) ?x12159)))
 (let ((?x12077 (- mean16 ?x6297)))
 (let ((?x12134 (/ (- y16_1_endpoint0_2 y16_1_endpoint1_1) (- ?x12086 ?x12077))))
 (let ((?x12167 (ite (< y16_1 ?x12086) (+ (* ?x12134 y16_1) (- y16_1_endpoint1_1 (* ?x12134 ?x12077))) ?x12163)))
 (let ((?x12068 (- mean16 ?x6279)))
 (let ((?x12129 (/ (- y16_1_endpoint1_1 y16_1_endpoint2_1) (- ?x12077 ?x12068))))
 (let ((?x12171 (ite (< y16_1 ?x12077) (+ (* ?x12129 y16_1) (- y16_1_endpoint2_1 (* ?x12129 ?x12068))) ?x12167)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x12054 (- mean16 ?x6257)))
 (let ((?x12124 (/ (- y16_1_endpoint2_1 y16_1_endpoint3_1) (- ?x12068 ?x12054))))
 (let ((?x12175 (ite (< y16_1 ?x12068) (+ (* ?x12124 y16_1) (- y16_1_endpoint3_1 (* ?x12124 ?x12054))) ?x12171)))
 (let ((?x12179 (ite (> y16_1 (+ mean16 ?x6257)) 0.0 (ite (< y16_1 ?x12054) 0.0 ?x12175))))
 (= likelihoody16_1 ?x12179))))))))))))))))))))))))))
(assert
 (let ((?x12368 (ite (< y16_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y16_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y16_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y16_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x12376 (ite (< y16_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y16_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y16_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y16_2) (/ 3989467804994813.0 100000000000000000.0)) ?x12368))))
 (let ((?x12384 (ite (< y16_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y16_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y16_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y16_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x12376))))
 (= likelihoody16_2 (ite (> y16_2 30.0) 0.0 (ite (< y16_2 (- 30.0)) 0.0 ?x12384)))))))
(assert
 (= likelihoodoutlier17 (ite (= outlier17 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x12444 (= y17_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y17_1_endpoint3_1| $x12444)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x12441 (= y17_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y17_1_endpoint2_1| $x12441)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x12453 (= y17_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y17_1_endpoint1_1| $x12453)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x12471 (= y17_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y17_1_endpoint0_2| $x12471)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x12480 (= y17_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y17_1_endpoint1_2| $x12480)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x12489 (= y17_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y17_1_endpoint2_2| $x12489)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x12498 (= y17_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y17_1_endpoint3_2| $x12498)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x12487 (+ mean17 ?x6279)))
 (let ((?x12532 (/ (- y17_1_endpoint3_2 y17_1_endpoint2_2) (- (+ mean17 (* ?x6258 3.0)) ?x12487))))
 (let ((?x12538 (ite (< y17_1 (+ mean17 (* ?x6258 3.0))) (+ (* ?x12532 y17_1) (- y17_1_endpoint2_2 (* ?x12532 ?x12487))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x12478 (+ mean17 ?x6297)))
 (let ((?x12527 (/ (- y17_1_endpoint2_2 y17_1_endpoint1_2) (- ?x12487 ?x12478))))
 (let ((?x12542 (ite (< y17_1 ?x12487) (+ (* ?x12527 y17_1) (- y17_1_endpoint1_2 (* ?x12527 ?x12478))) ?x12538)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x12469 (+ mean17 ?x6313)))
 (let ((?x12522 (/ (- y17_1_endpoint1_2 y17_1_endpoint0_2) (- ?x12478 ?x12469))))
 (let ((?x12546 (ite (< y17_1 ?x12478) (+ (* ?x12522 y17_1) (- y17_1_endpoint0_2 (* ?x12522 ?x12469))) ?x12542)))
 (let ((?x12460 (- mean17 ?x6297)))
 (let ((?x12517 (/ (- y17_1_endpoint0_2 y17_1_endpoint1_1) (- ?x12469 ?x12460))))
 (let ((?x12550 (ite (< y17_1 ?x12469) (+ (* ?x12517 y17_1) (- y17_1_endpoint1_1 (* ?x12517 ?x12460))) ?x12546)))
 (let ((?x12451 (- mean17 ?x6279)))
 (let ((?x12512 (/ (- y17_1_endpoint1_1 y17_1_endpoint2_1) (- ?x12460 ?x12451))))
 (let ((?x12554 (ite (< y17_1 ?x12460) (+ (* ?x12512 y17_1) (- y17_1_endpoint2_1 (* ?x12512 ?x12451))) ?x12550)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x12437 (- mean17 ?x6257)))
 (let ((?x12507 (/ (- y17_1_endpoint2_1 y17_1_endpoint3_1) (- ?x12451 ?x12437))))
 (let ((?x12558 (ite (< y17_1 ?x12451) (+ (* ?x12507 y17_1) (- y17_1_endpoint3_1 (* ?x12507 ?x12437))) ?x12554)))
 (let ((?x12562 (ite (> y17_1 (+ mean17 ?x6257)) 0.0 (ite (< y17_1 ?x12437) 0.0 ?x12558))))
 (= likelihoody17_1 ?x12562))))))))))))))))))))))))))
(assert
 (let ((?x12751 (ite (< y17_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y17_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y17_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y17_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x12759 (ite (< y17_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y17_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y17_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y17_2) (/ 3989467804994813.0 100000000000000000.0)) ?x12751))))
 (let ((?x12767 (ite (< y17_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y17_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y17_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y17_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x12759))))
 (= likelihoody17_2 (ite (> y17_2 30.0) 0.0 (ite (< y17_2 (- 30.0)) 0.0 ?x12767)))))))
(assert
 (= likelihoodoutlier18 (ite (= outlier18 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x12827 (= y18_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y18_1_endpoint3_1| $x12827)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x12824 (= y18_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y18_1_endpoint2_1| $x12824)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x12836 (= y18_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y18_1_endpoint1_1| $x12836)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x12854 (= y18_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y18_1_endpoint0_2| $x12854)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x12863 (= y18_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y18_1_endpoint1_2| $x12863)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x12872 (= y18_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y18_1_endpoint2_2| $x12872)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x12881 (= y18_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y18_1_endpoint3_2| $x12881)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x12870 (+ mean18 ?x6279)))
 (let ((?x12915 (/ (- y18_1_endpoint3_2 y18_1_endpoint2_2) (- (+ mean18 (* ?x6258 3.0)) ?x12870))))
 (let ((?x12921 (ite (< y18_1 (+ mean18 (* ?x6258 3.0))) (+ (* ?x12915 y18_1) (- y18_1_endpoint2_2 (* ?x12915 ?x12870))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x12861 (+ mean18 ?x6297)))
 (let ((?x12910 (/ (- y18_1_endpoint2_2 y18_1_endpoint1_2) (- ?x12870 ?x12861))))
 (let ((?x12925 (ite (< y18_1 ?x12870) (+ (* ?x12910 y18_1) (- y18_1_endpoint1_2 (* ?x12910 ?x12861))) ?x12921)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x12852 (+ mean18 ?x6313)))
 (let ((?x12905 (/ (- y18_1_endpoint1_2 y18_1_endpoint0_2) (- ?x12861 ?x12852))))
 (let ((?x12929 (ite (< y18_1 ?x12861) (+ (* ?x12905 y18_1) (- y18_1_endpoint0_2 (* ?x12905 ?x12852))) ?x12925)))
 (let ((?x12843 (- mean18 ?x6297)))
 (let ((?x12900 (/ (- y18_1_endpoint0_2 y18_1_endpoint1_1) (- ?x12852 ?x12843))))
 (let ((?x12933 (ite (< y18_1 ?x12852) (+ (* ?x12900 y18_1) (- y18_1_endpoint1_1 (* ?x12900 ?x12843))) ?x12929)))
 (let ((?x12834 (- mean18 ?x6279)))
 (let ((?x12895 (/ (- y18_1_endpoint1_1 y18_1_endpoint2_1) (- ?x12843 ?x12834))))
 (let ((?x12937 (ite (< y18_1 ?x12843) (+ (* ?x12895 y18_1) (- y18_1_endpoint2_1 (* ?x12895 ?x12834))) ?x12933)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x12820 (- mean18 ?x6257)))
 (let ((?x12890 (/ (- y18_1_endpoint2_1 y18_1_endpoint3_1) (- ?x12834 ?x12820))))
 (let ((?x12941 (ite (< y18_1 ?x12834) (+ (* ?x12890 y18_1) (- y18_1_endpoint3_1 (* ?x12890 ?x12820))) ?x12937)))
 (let ((?x12945 (ite (> y18_1 (+ mean18 ?x6257)) 0.0 (ite (< y18_1 ?x12820) 0.0 ?x12941))))
 (= likelihoody18_1 ?x12945))))))))))))))))))))))))))
(assert
 (let ((?x13134 (ite (< y18_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y18_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y18_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y18_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x13142 (ite (< y18_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y18_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y18_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y18_2) (/ 3989467804994813.0 100000000000000000.0)) ?x13134))))
 (let ((?x13150 (ite (< y18_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y18_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y18_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y18_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x13142))))
 (= likelihoody18_2 (ite (> y18_2 30.0) 0.0 (ite (< y18_2 (- 30.0)) 0.0 ?x13150)))))))
(assert
 (= likelihoodoutlier19 (ite (= outlier19 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x13210 (= y19_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y19_1_endpoint3_1| $x13210)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x13207 (= y19_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y19_1_endpoint2_1| $x13207)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x13219 (= y19_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y19_1_endpoint1_1| $x13219)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x13237 (= y19_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y19_1_endpoint0_2| $x13237)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x13246 (= y19_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y19_1_endpoint1_2| $x13246)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x13255 (= y19_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y19_1_endpoint2_2| $x13255)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x13264 (= y19_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y19_1_endpoint3_2| $x13264)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x13253 (+ mean19 ?x6279)))
 (let ((?x13298 (/ (- y19_1_endpoint3_2 y19_1_endpoint2_2) (- (+ mean19 (* ?x6258 3.0)) ?x13253))))
 (let ((?x13304 (ite (< y19_1 (+ mean19 (* ?x6258 3.0))) (+ (* ?x13298 y19_1) (- y19_1_endpoint2_2 (* ?x13298 ?x13253))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x13244 (+ mean19 ?x6297)))
 (let ((?x13293 (/ (- y19_1_endpoint2_2 y19_1_endpoint1_2) (- ?x13253 ?x13244))))
 (let ((?x13308 (ite (< y19_1 ?x13253) (+ (* ?x13293 y19_1) (- y19_1_endpoint1_2 (* ?x13293 ?x13244))) ?x13304)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x13235 (+ mean19 ?x6313)))
 (let ((?x13288 (/ (- y19_1_endpoint1_2 y19_1_endpoint0_2) (- ?x13244 ?x13235))))
 (let ((?x13312 (ite (< y19_1 ?x13244) (+ (* ?x13288 y19_1) (- y19_1_endpoint0_2 (* ?x13288 ?x13235))) ?x13308)))
 (let ((?x13226 (- mean19 ?x6297)))
 (let ((?x13283 (/ (- y19_1_endpoint0_2 y19_1_endpoint1_1) (- ?x13235 ?x13226))))
 (let ((?x13316 (ite (< y19_1 ?x13235) (+ (* ?x13283 y19_1) (- y19_1_endpoint1_1 (* ?x13283 ?x13226))) ?x13312)))
 (let ((?x13217 (- mean19 ?x6279)))
 (let ((?x13278 (/ (- y19_1_endpoint1_1 y19_1_endpoint2_1) (- ?x13226 ?x13217))))
 (let ((?x13320 (ite (< y19_1 ?x13226) (+ (* ?x13278 y19_1) (- y19_1_endpoint2_1 (* ?x13278 ?x13217))) ?x13316)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x13203 (- mean19 ?x6257)))
 (let ((?x13273 (/ (- y19_1_endpoint2_1 y19_1_endpoint3_1) (- ?x13217 ?x13203))))
 (let ((?x13324 (ite (< y19_1 ?x13217) (+ (* ?x13273 y19_1) (- y19_1_endpoint3_1 (* ?x13273 ?x13203))) ?x13320)))
 (let ((?x13328 (ite (> y19_1 (+ mean19 ?x6257)) 0.0 (ite (< y19_1 ?x13203) 0.0 ?x13324))))
 (= likelihoody19_1 ?x13328))))))))))))))))))))))))))
(assert
 (let ((?x13517 (ite (< y19_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y19_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y19_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y19_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x13525 (ite (< y19_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y19_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y19_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y19_2) (/ 3989467804994813.0 100000000000000000.0)) ?x13517))))
 (let ((?x13533 (ite (< y19_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y19_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y19_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y19_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x13525))))
 (= likelihoody19_2 (ite (> y19_2 30.0) 0.0 (ite (< y19_2 (- 30.0)) 0.0 ?x13533)))))))
(assert
 (= likelihoodoutlier20 (ite (= outlier20 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x13593 (= y20_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y20_1_endpoint3_1| $x13593)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x13590 (= y20_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y20_1_endpoint2_1| $x13590)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x13602 (= y20_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y20_1_endpoint1_1| $x13602)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x13620 (= y20_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y20_1_endpoint0_2| $x13620)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x13629 (= y20_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y20_1_endpoint1_2| $x13629)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x13638 (= y20_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y20_1_endpoint2_2| $x13638)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x13647 (= y20_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y20_1_endpoint3_2| $x13647)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x13636 (+ mean20 ?x6279)))
 (let ((?x13681 (/ (- y20_1_endpoint3_2 y20_1_endpoint2_2) (- (+ mean20 (* ?x6258 3.0)) ?x13636))))
 (let ((?x13687 (ite (< y20_1 (+ mean20 (* ?x6258 3.0))) (+ (* ?x13681 y20_1) (- y20_1_endpoint2_2 (* ?x13681 ?x13636))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x13627 (+ mean20 ?x6297)))
 (let ((?x13676 (/ (- y20_1_endpoint2_2 y20_1_endpoint1_2) (- ?x13636 ?x13627))))
 (let ((?x13691 (ite (< y20_1 ?x13636) (+ (* ?x13676 y20_1) (- y20_1_endpoint1_2 (* ?x13676 ?x13627))) ?x13687)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x13618 (+ mean20 ?x6313)))
 (let ((?x13671 (/ (- y20_1_endpoint1_2 y20_1_endpoint0_2) (- ?x13627 ?x13618))))
 (let ((?x13695 (ite (< y20_1 ?x13627) (+ (* ?x13671 y20_1) (- y20_1_endpoint0_2 (* ?x13671 ?x13618))) ?x13691)))
 (let ((?x13609 (- mean20 ?x6297)))
 (let ((?x13666 (/ (- y20_1_endpoint0_2 y20_1_endpoint1_1) (- ?x13618 ?x13609))))
 (let ((?x13699 (ite (< y20_1 ?x13618) (+ (* ?x13666 y20_1) (- y20_1_endpoint1_1 (* ?x13666 ?x13609))) ?x13695)))
 (let ((?x13600 (- mean20 ?x6279)))
 (let ((?x13661 (/ (- y20_1_endpoint1_1 y20_1_endpoint2_1) (- ?x13609 ?x13600))))
 (let ((?x13703 (ite (< y20_1 ?x13609) (+ (* ?x13661 y20_1) (- y20_1_endpoint2_1 (* ?x13661 ?x13600))) ?x13699)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x13586 (- mean20 ?x6257)))
 (let ((?x13656 (/ (- y20_1_endpoint2_1 y20_1_endpoint3_1) (- ?x13600 ?x13586))))
 (let ((?x13707 (ite (< y20_1 ?x13600) (+ (* ?x13656 y20_1) (- y20_1_endpoint3_1 (* ?x13656 ?x13586))) ?x13703)))
 (let ((?x13711 (ite (> y20_1 (+ mean20 ?x6257)) 0.0 (ite (< y20_1 ?x13586) 0.0 ?x13707))))
 (= likelihoody20_1 ?x13711))))))))))))))))))))))))))
(assert
 (let ((?x13900 (ite (< y20_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y20_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y20_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y20_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x13908 (ite (< y20_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y20_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y20_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y20_2) (/ 3989467804994813.0 100000000000000000.0)) ?x13900))))
 (let ((?x13916 (ite (< y20_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y20_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y20_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y20_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x13908))))
 (= likelihoody20_2 (ite (> y20_2 30.0) 0.0 (ite (< y20_2 (- 30.0)) 0.0 ?x13916)))))))
(assert
 (= likelihoodoutlier21 (ite (= outlier21 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x13976 (= y21_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y21_1_endpoint3_1| $x13976)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x13973 (= y21_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y21_1_endpoint2_1| $x13973)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x13985 (= y21_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y21_1_endpoint1_1| $x13985)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x14003 (= y21_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y21_1_endpoint0_2| $x14003)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x14012 (= y21_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y21_1_endpoint1_2| $x14012)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x14021 (= y21_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y21_1_endpoint2_2| $x14021)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x14030 (= y21_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y21_1_endpoint3_2| $x14030)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x14019 (+ mean21 ?x6279)))
 (let ((?x14064 (/ (- y21_1_endpoint3_2 y21_1_endpoint2_2) (- (+ mean21 (* ?x6258 3.0)) ?x14019))))
 (let ((?x14070 (ite (< y21_1 (+ mean21 (* ?x6258 3.0))) (+ (* ?x14064 y21_1) (- y21_1_endpoint2_2 (* ?x14064 ?x14019))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x14010 (+ mean21 ?x6297)))
 (let ((?x14059 (/ (- y21_1_endpoint2_2 y21_1_endpoint1_2) (- ?x14019 ?x14010))))
 (let ((?x14074 (ite (< y21_1 ?x14019) (+ (* ?x14059 y21_1) (- y21_1_endpoint1_2 (* ?x14059 ?x14010))) ?x14070)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x14001 (+ mean21 ?x6313)))
 (let ((?x14054 (/ (- y21_1_endpoint1_2 y21_1_endpoint0_2) (- ?x14010 ?x14001))))
 (let ((?x14078 (ite (< y21_1 ?x14010) (+ (* ?x14054 y21_1) (- y21_1_endpoint0_2 (* ?x14054 ?x14001))) ?x14074)))
 (let ((?x13992 (- mean21 ?x6297)))
 (let ((?x14049 (/ (- y21_1_endpoint0_2 y21_1_endpoint1_1) (- ?x14001 ?x13992))))
 (let ((?x14082 (ite (< y21_1 ?x14001) (+ (* ?x14049 y21_1) (- y21_1_endpoint1_1 (* ?x14049 ?x13992))) ?x14078)))
 (let ((?x13983 (- mean21 ?x6279)))
 (let ((?x14044 (/ (- y21_1_endpoint1_1 y21_1_endpoint2_1) (- ?x13992 ?x13983))))
 (let ((?x14086 (ite (< y21_1 ?x13992) (+ (* ?x14044 y21_1) (- y21_1_endpoint2_1 (* ?x14044 ?x13983))) ?x14082)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x13969 (- mean21 ?x6257)))
 (let ((?x14039 (/ (- y21_1_endpoint2_1 y21_1_endpoint3_1) (- ?x13983 ?x13969))))
 (let ((?x14090 (ite (< y21_1 ?x13983) (+ (* ?x14039 y21_1) (- y21_1_endpoint3_1 (* ?x14039 ?x13969))) ?x14086)))
 (let ((?x14094 (ite (> y21_1 (+ mean21 ?x6257)) 0.0 (ite (< y21_1 ?x13969) 0.0 ?x14090))))
 (= likelihoody21_1 ?x14094))))))))))))))))))))))))))
(assert
 (let ((?x14283 (ite (< y21_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y21_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y21_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y21_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x14291 (ite (< y21_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y21_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y21_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y21_2) (/ 3989467804994813.0 100000000000000000.0)) ?x14283))))
 (let ((?x14299 (ite (< y21_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y21_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y21_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y21_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x14291))))
 (= likelihoody21_2 (ite (> y21_2 30.0) 0.0 (ite (< y21_2 (- 30.0)) 0.0 ?x14299)))))))
(assert
 (= likelihoodoutlier22 (ite (= outlier22 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x14359 (= y22_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y22_1_endpoint3_1| $x14359)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x14356 (= y22_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y22_1_endpoint2_1| $x14356)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x14368 (= y22_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y22_1_endpoint1_1| $x14368)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x14386 (= y22_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y22_1_endpoint0_2| $x14386)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x14395 (= y22_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y22_1_endpoint1_2| $x14395)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x14404 (= y22_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y22_1_endpoint2_2| $x14404)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x14413 (= y22_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y22_1_endpoint3_2| $x14413)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x14402 (+ mean22 ?x6279)))
 (let ((?x14447 (/ (- y22_1_endpoint3_2 y22_1_endpoint2_2) (- (+ mean22 (* ?x6258 3.0)) ?x14402))))
 (let ((?x14453 (ite (< y22_1 (+ mean22 (* ?x6258 3.0))) (+ (* ?x14447 y22_1) (- y22_1_endpoint2_2 (* ?x14447 ?x14402))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x14393 (+ mean22 ?x6297)))
 (let ((?x14442 (/ (- y22_1_endpoint2_2 y22_1_endpoint1_2) (- ?x14402 ?x14393))))
 (let ((?x14457 (ite (< y22_1 ?x14402) (+ (* ?x14442 y22_1) (- y22_1_endpoint1_2 (* ?x14442 ?x14393))) ?x14453)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x14384 (+ mean22 ?x6313)))
 (let ((?x14437 (/ (- y22_1_endpoint1_2 y22_1_endpoint0_2) (- ?x14393 ?x14384))))
 (let ((?x14461 (ite (< y22_1 ?x14393) (+ (* ?x14437 y22_1) (- y22_1_endpoint0_2 (* ?x14437 ?x14384))) ?x14457)))
 (let ((?x14375 (- mean22 ?x6297)))
 (let ((?x14432 (/ (- y22_1_endpoint0_2 y22_1_endpoint1_1) (- ?x14384 ?x14375))))
 (let ((?x14465 (ite (< y22_1 ?x14384) (+ (* ?x14432 y22_1) (- y22_1_endpoint1_1 (* ?x14432 ?x14375))) ?x14461)))
 (let ((?x14366 (- mean22 ?x6279)))
 (let ((?x14427 (/ (- y22_1_endpoint1_1 y22_1_endpoint2_1) (- ?x14375 ?x14366))))
 (let ((?x14469 (ite (< y22_1 ?x14375) (+ (* ?x14427 y22_1) (- y22_1_endpoint2_1 (* ?x14427 ?x14366))) ?x14465)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x14352 (- mean22 ?x6257)))
 (let ((?x14422 (/ (- y22_1_endpoint2_1 y22_1_endpoint3_1) (- ?x14366 ?x14352))))
 (let ((?x14473 (ite (< y22_1 ?x14366) (+ (* ?x14422 y22_1) (- y22_1_endpoint3_1 (* ?x14422 ?x14352))) ?x14469)))
 (let ((?x14477 (ite (> y22_1 (+ mean22 ?x6257)) 0.0 (ite (< y22_1 ?x14352) 0.0 ?x14473))))
 (= likelihoody22_1 ?x14477))))))))))))))))))))))))))
(assert
 (let ((?x14666 (ite (< y22_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y22_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y22_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y22_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x14674 (ite (< y22_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y22_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y22_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y22_2) (/ 3989467804994813.0 100000000000000000.0)) ?x14666))))
 (let ((?x14682 (ite (< y22_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y22_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y22_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y22_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x14674))))
 (= likelihoody22_2 (ite (> y22_2 30.0) 0.0 (ite (< y22_2 (- 30.0)) 0.0 ?x14682)))))))
(assert
 (= likelihoodoutlier23 (ite (= outlier23 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x14742 (= y23_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y23_1_endpoint3_1| $x14742)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x14739 (= y23_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y23_1_endpoint2_1| $x14739)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x14751 (= y23_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y23_1_endpoint1_1| $x14751)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x14769 (= y23_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y23_1_endpoint0_2| $x14769)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x14778 (= y23_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y23_1_endpoint1_2| $x14778)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x14787 (= y23_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y23_1_endpoint2_2| $x14787)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x14796 (= y23_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y23_1_endpoint3_2| $x14796)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x14785 (+ mean23 ?x6279)))
 (let ((?x14830 (/ (- y23_1_endpoint3_2 y23_1_endpoint2_2) (- (+ mean23 (* ?x6258 3.0)) ?x14785))))
 (let ((?x14836 (ite (< y23_1 (+ mean23 (* ?x6258 3.0))) (+ (* ?x14830 y23_1) (- y23_1_endpoint2_2 (* ?x14830 ?x14785))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x14776 (+ mean23 ?x6297)))
 (let ((?x14825 (/ (- y23_1_endpoint2_2 y23_1_endpoint1_2) (- ?x14785 ?x14776))))
 (let ((?x14840 (ite (< y23_1 ?x14785) (+ (* ?x14825 y23_1) (- y23_1_endpoint1_2 (* ?x14825 ?x14776))) ?x14836)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x14767 (+ mean23 ?x6313)))
 (let ((?x14820 (/ (- y23_1_endpoint1_2 y23_1_endpoint0_2) (- ?x14776 ?x14767))))
 (let ((?x14844 (ite (< y23_1 ?x14776) (+ (* ?x14820 y23_1) (- y23_1_endpoint0_2 (* ?x14820 ?x14767))) ?x14840)))
 (let ((?x14758 (- mean23 ?x6297)))
 (let ((?x14815 (/ (- y23_1_endpoint0_2 y23_1_endpoint1_1) (- ?x14767 ?x14758))))
 (let ((?x14848 (ite (< y23_1 ?x14767) (+ (* ?x14815 y23_1) (- y23_1_endpoint1_1 (* ?x14815 ?x14758))) ?x14844)))
 (let ((?x14749 (- mean23 ?x6279)))
 (let ((?x14810 (/ (- y23_1_endpoint1_1 y23_1_endpoint2_1) (- ?x14758 ?x14749))))
 (let ((?x14852 (ite (< y23_1 ?x14758) (+ (* ?x14810 y23_1) (- y23_1_endpoint2_1 (* ?x14810 ?x14749))) ?x14848)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x14735 (- mean23 ?x6257)))
 (let ((?x14805 (/ (- y23_1_endpoint2_1 y23_1_endpoint3_1) (- ?x14749 ?x14735))))
 (let ((?x14856 (ite (< y23_1 ?x14749) (+ (* ?x14805 y23_1) (- y23_1_endpoint3_1 (* ?x14805 ?x14735))) ?x14852)))
 (let ((?x14860 (ite (> y23_1 (+ mean23 ?x6257)) 0.0 (ite (< y23_1 ?x14735) 0.0 ?x14856))))
 (= likelihoody23_1 ?x14860))))))))))))))))))))))))))
(assert
 (let ((?x15033 (ite (< y23_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y23_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y23_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y23_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x15041 (ite (< y23_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y23_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y23_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y23_2) (/ 3989467804994813.0 100000000000000000.0)) ?x15033))))
 (let ((?x15049 (ite (< y23_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y23_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y23_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y23_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x15041))))
 (= likelihoody23_2 (ite (> y23_2 30.0) 0.0 (ite (< y23_2 (- 30.0)) 0.0 ?x15049)))))))
(assert
 (= likelihoodoutlier24 (ite (= outlier24 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x15104 (= y24_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y24_1_endpoint3_1| $x15104)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x15101 (= y24_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y24_1_endpoint2_1| $x15101)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x15112 (= y24_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y24_1_endpoint1_1| $x15112)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x15129 (= y24_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y24_1_endpoint0_2| $x15129)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x15138 (= y24_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y24_1_endpoint1_2| $x15138)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x15146 (= y24_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y24_1_endpoint2_2| $x15146)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x15155 (= y24_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y24_1_endpoint3_2| $x15155)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x15144 (+ mean24 ?x6279)))
 (let ((?x15188 (/ (- y24_1_endpoint3_2 y24_1_endpoint2_2) (- (+ mean24 (* ?x6258 3.0)) ?x15144))))
 (let ((?x15194 (ite (< y24_1 (+ mean24 (* ?x6258 3.0))) (+ (* ?x15188 y24_1) (- y24_1_endpoint2_2 (* ?x15188 ?x15144))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x15136 (+ mean24 ?x6297)))
 (let ((?x15183 (/ (- y24_1_endpoint2_2 y24_1_endpoint1_2) (- ?x15144 ?x15136))))
 (let ((?x15198 (ite (< y24_1 ?x15144) (+ (* ?x15183 y24_1) (- y24_1_endpoint1_2 (* ?x15183 ?x15136))) ?x15194)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x15127 (+ mean24 ?x6313)))
 (let ((?x15178 (/ (- y24_1_endpoint1_2 y24_1_endpoint0_2) (- ?x15136 ?x15127))))
 (let ((?x15202 (ite (< y24_1 ?x15136) (+ (* ?x15178 y24_1) (- y24_1_endpoint0_2 (* ?x15178 ?x15127))) ?x15198)))
 (let ((?x15119 (- mean24 ?x6297)))
 (let ((?x15173 (/ (- y24_1_endpoint0_2 y24_1_endpoint1_1) (- ?x15127 ?x15119))))
 (let ((?x15206 (ite (< y24_1 ?x15127) (+ (* ?x15173 y24_1) (- y24_1_endpoint1_1 (* ?x15173 ?x15119))) ?x15202)))
 (let ((?x15110 (- mean24 ?x6279)))
 (let ((?x15168 (/ (- y24_1_endpoint1_1 y24_1_endpoint2_1) (- ?x15119 ?x15110))))
 (let ((?x15210 (ite (< y24_1 ?x15119) (+ (* ?x15168 y24_1) (- y24_1_endpoint2_1 (* ?x15168 ?x15110))) ?x15206)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x15097 (- mean24 ?x6257)))
 (let ((?x15163 (/ (- y24_1_endpoint2_1 y24_1_endpoint3_1) (- ?x15110 ?x15097))))
 (let ((?x15214 (ite (< y24_1 ?x15110) (+ (* ?x15163 y24_1) (- y24_1_endpoint3_1 (* ?x15163 ?x15097))) ?x15210)))
 (let ((?x15218 (ite (> y24_1 (+ mean24 ?x6257)) 0.0 (ite (< y24_1 ?x15097) 0.0 ?x15214))))
 (= likelihoody24_1 ?x15218))))))))))))))))))))))))))
(assert
 (let ((?x15373 (ite (< y24_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y24_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y24_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y24_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x15381 (ite (< y24_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y24_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y24_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y24_2) (/ 3989467804994813.0 100000000000000000.0)) ?x15373))))
 (let ((?x15389 (ite (< y24_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y24_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y24_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y24_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x15381))))
 (= likelihoody24_2 (ite (> y24_2 30.0) 0.0 (ite (< y24_2 (- 30.0)) 0.0 ?x15389)))))))
(assert
 (= likelihoodoutlier25 (ite (= outlier25 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x15443 (= y25_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y25_1_endpoint3_1| $x15443)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x15440 (= y25_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y25_1_endpoint2_1| $x15440)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x15452 (= y25_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y25_1_endpoint1_1| $x15452)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x15469 (= y25_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y25_1_endpoint0_2| $x15469)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x15477 (= y25_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y25_1_endpoint1_2| $x15477)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x15486 (= y25_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y25_1_endpoint2_2| $x15486)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x15494 (= y25_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y25_1_endpoint3_2| $x15494)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x15484 (+ mean25 ?x6279)))
 (let ((?x15528 (/ (- y25_1_endpoint3_2 y25_1_endpoint2_2) (- (+ mean25 (* ?x6258 3.0)) ?x15484))))
 (let ((?x15534 (ite (< y25_1 (+ mean25 (* ?x6258 3.0))) (+ (* ?x15528 y25_1) (- y25_1_endpoint2_2 (* ?x15528 ?x15484))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x15475 (+ mean25 ?x6297)))
 (let ((?x15523 (/ (- y25_1_endpoint2_2 y25_1_endpoint1_2) (- ?x15484 ?x15475))))
 (let ((?x15538 (ite (< y25_1 ?x15484) (+ (* ?x15523 y25_1) (- y25_1_endpoint1_2 (* ?x15523 ?x15475))) ?x15534)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x15467 (+ mean25 ?x6313)))
 (let ((?x15518 (/ (- y25_1_endpoint1_2 y25_1_endpoint0_2) (- ?x15475 ?x15467))))
 (let ((?x15542 (ite (< y25_1 ?x15475) (+ (* ?x15518 y25_1) (- y25_1_endpoint0_2 (* ?x15518 ?x15467))) ?x15538)))
 (let ((?x15458 (- mean25 ?x6297)))
 (let ((?x15513 (/ (- y25_1_endpoint0_2 y25_1_endpoint1_1) (- ?x15467 ?x15458))))
 (let ((?x15546 (ite (< y25_1 ?x15467) (+ (* ?x15513 y25_1) (- y25_1_endpoint1_1 (* ?x15513 ?x15458))) ?x15542)))
 (let ((?x15450 (- mean25 ?x6279)))
 (let ((?x15508 (/ (- y25_1_endpoint1_1 y25_1_endpoint2_1) (- ?x15458 ?x15450))))
 (let ((?x15550 (ite (< y25_1 ?x15458) (+ (* ?x15508 y25_1) (- y25_1_endpoint2_1 (* ?x15508 ?x15450))) ?x15546)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x15436 (- mean25 ?x6257)))
 (let ((?x15503 (/ (- y25_1_endpoint2_1 y25_1_endpoint3_1) (- ?x15450 ?x15436))))
 (let ((?x15554 (ite (< y25_1 ?x15450) (+ (* ?x15503 y25_1) (- y25_1_endpoint3_1 (* ?x15503 ?x15436))) ?x15550)))
 (let ((?x15558 (ite (> y25_1 (+ mean25 ?x6257)) 0.0 (ite (< y25_1 ?x15436) 0.0 ?x15554))))
 (= likelihoody25_1 ?x15558))))))))))))))))))))))))))
(assert
 (let ((?x15710 (ite (< y25_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y25_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y25_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y25_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x15718 (ite (< y25_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y25_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y25_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y25_2) (/ 3989467804994813.0 100000000000000000.0)) ?x15710))))
 (let ((?x15726 (ite (< y25_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y25_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y25_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y25_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x15718))))
 (= likelihoody25_2 (ite (> y25_2 30.0) 0.0 (ite (< y25_2 (- 30.0)) 0.0 ?x15726)))))))
(assert
 (= likelihoodoutlier26 (ite (= outlier26 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x15781 (= y26_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y26_1_endpoint3_1| $x15781)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x15778 (= y26_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y26_1_endpoint2_1| $x15778)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x15789 (= y26_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y26_1_endpoint1_1| $x15789)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x15806 (= y26_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y26_1_endpoint0_2| $x15806)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x15815 (= y26_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y26_1_endpoint1_2| $x15815)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x15823 (= y26_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y26_1_endpoint2_2| $x15823)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x15832 (= y26_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y26_1_endpoint3_2| $x15832)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x15821 (+ mean26 ?x6279)))
 (let ((?x15865 (/ (- y26_1_endpoint3_2 y26_1_endpoint2_2) (- (+ mean26 (* ?x6258 3.0)) ?x15821))))
 (let ((?x15871 (ite (< y26_1 (+ mean26 (* ?x6258 3.0))) (+ (* ?x15865 y26_1) (- y26_1_endpoint2_2 (* ?x15865 ?x15821))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x15813 (+ mean26 ?x6297)))
 (let ((?x15860 (/ (- y26_1_endpoint2_2 y26_1_endpoint1_2) (- ?x15821 ?x15813))))
 (let ((?x15875 (ite (< y26_1 ?x15821) (+ (* ?x15860 y26_1) (- y26_1_endpoint1_2 (* ?x15860 ?x15813))) ?x15871)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x15804 (+ mean26 ?x6313)))
 (let ((?x15855 (/ (- y26_1_endpoint1_2 y26_1_endpoint0_2) (- ?x15813 ?x15804))))
 (let ((?x15879 (ite (< y26_1 ?x15813) (+ (* ?x15855 y26_1) (- y26_1_endpoint0_2 (* ?x15855 ?x15804))) ?x15875)))
 (let ((?x15796 (- mean26 ?x6297)))
 (let ((?x15850 (/ (- y26_1_endpoint0_2 y26_1_endpoint1_1) (- ?x15804 ?x15796))))
 (let ((?x15883 (ite (< y26_1 ?x15804) (+ (* ?x15850 y26_1) (- y26_1_endpoint1_1 (* ?x15850 ?x15796))) ?x15879)))
 (let ((?x15787 (- mean26 ?x6279)))
 (let ((?x15845 (/ (- y26_1_endpoint1_1 y26_1_endpoint2_1) (- ?x15796 ?x15787))))
 (let ((?x15887 (ite (< y26_1 ?x15796) (+ (* ?x15845 y26_1) (- y26_1_endpoint2_1 (* ?x15845 ?x15787))) ?x15883)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x15774 (- mean26 ?x6257)))
 (let ((?x15840 (/ (- y26_1_endpoint2_1 y26_1_endpoint3_1) (- ?x15787 ?x15774))))
 (let ((?x15891 (ite (< y26_1 ?x15787) (+ (* ?x15840 y26_1) (- y26_1_endpoint3_1 (* ?x15840 ?x15774))) ?x15887)))
 (let ((?x15895 (ite (> y26_1 (+ mean26 ?x6257)) 0.0 (ite (< y26_1 ?x15774) 0.0 ?x15891))))
 (= likelihoody26_1 ?x15895))))))))))))))))))))))))))
(assert
 (let ((?x16083 (ite (< y26_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y26_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y26_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y26_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x16091 (ite (< y26_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y26_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y26_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y26_2) (/ 3989467804994813.0 100000000000000000.0)) ?x16083))))
 (let ((?x16099 (ite (< y26_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y26_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y26_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y26_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x16091))))
 (= likelihoody26_2 (ite (> y26_2 30.0) 0.0 (ite (< y26_2 (- 30.0)) 0.0 ?x16099)))))))
(assert
 (= likelihoodoutlier27 (ite (= outlier27 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x16159 (= y27_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y27_1_endpoint3_1| $x16159)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x16156 (= y27_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y27_1_endpoint2_1| $x16156)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16168 (= y27_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y27_1_endpoint1_1| $x16168)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x16186 (= y27_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y27_1_endpoint0_2| $x16186)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16195 (= y27_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y27_1_endpoint1_2| $x16195)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x16204 (= y27_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y27_1_endpoint2_2| $x16204)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x16213 (= y27_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y27_1_endpoint3_2| $x16213)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x16202 (+ mean27 ?x6279)))
 (let ((?x16247 (/ (- y27_1_endpoint3_2 y27_1_endpoint2_2) (- (+ mean27 (* ?x6258 3.0)) ?x16202))))
 (let ((?x16253 (ite (< y27_1 (+ mean27 (* ?x6258 3.0))) (+ (* ?x16247 y27_1) (- y27_1_endpoint2_2 (* ?x16247 ?x16202))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x16193 (+ mean27 ?x6297)))
 (let ((?x16242 (/ (- y27_1_endpoint2_2 y27_1_endpoint1_2) (- ?x16202 ?x16193))))
 (let ((?x16257 (ite (< y27_1 ?x16202) (+ (* ?x16242 y27_1) (- y27_1_endpoint1_2 (* ?x16242 ?x16193))) ?x16253)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x16184 (+ mean27 ?x6313)))
 (let ((?x16237 (/ (- y27_1_endpoint1_2 y27_1_endpoint0_2) (- ?x16193 ?x16184))))
 (let ((?x16261 (ite (< y27_1 ?x16193) (+ (* ?x16237 y27_1) (- y27_1_endpoint0_2 (* ?x16237 ?x16184))) ?x16257)))
 (let ((?x16175 (- mean27 ?x6297)))
 (let ((?x16232 (/ (- y27_1_endpoint0_2 y27_1_endpoint1_1) (- ?x16184 ?x16175))))
 (let ((?x16265 (ite (< y27_1 ?x16184) (+ (* ?x16232 y27_1) (- y27_1_endpoint1_1 (* ?x16232 ?x16175))) ?x16261)))
 (let ((?x16166 (- mean27 ?x6279)))
 (let ((?x16227 (/ (- y27_1_endpoint1_1 y27_1_endpoint2_1) (- ?x16175 ?x16166))))
 (let ((?x16269 (ite (< y27_1 ?x16175) (+ (* ?x16227 y27_1) (- y27_1_endpoint2_1 (* ?x16227 ?x16166))) ?x16265)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x16152 (- mean27 ?x6257)))
 (let ((?x16222 (/ (- y27_1_endpoint2_1 y27_1_endpoint3_1) (- ?x16166 ?x16152))))
 (let ((?x16273 (ite (< y27_1 ?x16166) (+ (* ?x16222 y27_1) (- y27_1_endpoint3_1 (* ?x16222 ?x16152))) ?x16269)))
 (let ((?x16277 (ite (> y27_1 (+ mean27 ?x6257)) 0.0 (ite (< y27_1 ?x16152) 0.0 ?x16273))))
 (= likelihoody27_1 ?x16277))))))))))))))))))))))))))
(assert
 (let ((?x16456 (ite (< y27_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y27_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y27_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y27_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x16464 (ite (< y27_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y27_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y27_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y27_2) (/ 3989467804994813.0 100000000000000000.0)) ?x16456))))
 (let ((?x16472 (ite (< y27_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y27_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y27_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y27_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x16464))))
 (= likelihoody27_2 (ite (> y27_2 30.0) 0.0 (ite (< y27_2 (- 30.0)) 0.0 ?x16472)))))))
(assert
 (= likelihoodoutlier28 (ite (= outlier28 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x16528 (= y28_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y28_1_endpoint3_1| $x16528)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x16525 (= y28_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y28_1_endpoint2_1| $x16525)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16537 (= y28_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y28_1_endpoint1_1| $x16537)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x16553 (= y28_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y28_1_endpoint0_2| $x16553)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16562 (= y28_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y28_1_endpoint1_2| $x16562)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x16571 (= y28_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y28_1_endpoint2_2| $x16571)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x16580 (= y28_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y28_1_endpoint3_2| $x16580)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x16569 (+ mean28 ?x6279)))
 (let ((?x16612 (/ (- y28_1_endpoint3_2 y28_1_endpoint2_2) (- (+ mean28 (* ?x6258 3.0)) ?x16569))))
 (let ((?x16618 (ite (< y28_1 (+ mean28 (* ?x6258 3.0))) (+ (* ?x16612 y28_1) (- y28_1_endpoint2_2 (* ?x16612 ?x16569))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x16560 (+ mean28 ?x6297)))
 (let ((?x16607 (/ (- y28_1_endpoint2_2 y28_1_endpoint1_2) (- ?x16569 ?x16560))))
 (let ((?x16622 (ite (< y28_1 ?x16569) (+ (* ?x16607 y28_1) (- y28_1_endpoint1_2 (* ?x16607 ?x16560))) ?x16618)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x16551 (+ mean28 ?x6313)))
 (let ((?x16602 (/ (- y28_1_endpoint1_2 y28_1_endpoint0_2) (- ?x16560 ?x16551))))
 (let ((?x16626 (ite (< y28_1 ?x16560) (+ (* ?x16602 y28_1) (- y28_1_endpoint0_2 (* ?x16602 ?x16551))) ?x16622)))
 (let ((?x16542 (- mean28 ?x6297)))
 (let ((?x16597 (/ (- y28_1_endpoint0_2 y28_1_endpoint1_1) (- ?x16551 ?x16542))))
 (let ((?x16630 (ite (< y28_1 ?x16551) (+ (* ?x16597 y28_1) (- y28_1_endpoint1_1 (* ?x16597 ?x16542))) ?x16626)))
 (let ((?x16535 (- mean28 ?x6279)))
 (let ((?x16592 (/ (- y28_1_endpoint1_1 y28_1_endpoint2_1) (- ?x16542 ?x16535))))
 (let ((?x16634 (ite (< y28_1 ?x16542) (+ (* ?x16592 y28_1) (- y28_1_endpoint2_1 (* ?x16592 ?x16535))) ?x16630)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x16521 (- mean28 ?x6257)))
 (let ((?x16587 (/ (- y28_1_endpoint2_1 y28_1_endpoint3_1) (- ?x16535 ?x16521))))
 (let ((?x16638 (ite (< y28_1 ?x16535) (+ (* ?x16587 y28_1) (- y28_1_endpoint3_1 (* ?x16587 ?x16521))) ?x16634)))
 (let ((?x16642 (ite (> y28_1 (+ mean28 ?x6257)) 0.0 (ite (< y28_1 ?x16521) 0.0 ?x16638))))
 (= likelihoody28_1 ?x16642))))))))))))))))))))))))))
(assert
 (let ((?x16809 (ite (< y28_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y28_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y28_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y28_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x16817 (ite (< y28_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y28_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y28_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y28_2) (/ 3989467804994813.0 100000000000000000.0)) ?x16809))))
 (let ((?x16825 (ite (< y28_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y28_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y28_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y28_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x16817))))
 (= likelihoody28_2 (ite (> y28_2 30.0) 0.0 (ite (< y28_2 (- 30.0)) 0.0 ?x16825)))))))
(assert
 (= likelihoodoutlier29 (ite (= outlier29 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x16881 (= y29_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y29_1_endpoint3_1| $x16881)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x16878 (= y29_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y29_1_endpoint2_1| $x16878)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16890 (= y29_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y29_1_endpoint1_1| $x16890)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x16906 (= y29_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y29_1_endpoint0_2| $x16906)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16915 (= y29_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y29_1_endpoint1_2| $x16915)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x16924 (= y29_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y29_1_endpoint2_2| $x16924)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x16933 (= y29_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y29_1_endpoint3_2| $x16933)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x16922 (+ mean29 ?x6279)))
 (let ((?x16967 (/ (- y29_1_endpoint3_2 y29_1_endpoint2_2) (- (+ mean29 (* ?x6258 3.0)) ?x16922))))
 (let ((?x16973 (ite (< y29_1 (+ mean29 (* ?x6258 3.0))) (+ (* ?x16967 y29_1) (- y29_1_endpoint2_2 (* ?x16967 ?x16922))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x16913 (+ mean29 ?x6297)))
 (let ((?x16962 (/ (- y29_1_endpoint2_2 y29_1_endpoint1_2) (- ?x16922 ?x16913))))
 (let ((?x16977 (ite (< y29_1 ?x16922) (+ (* ?x16962 y29_1) (- y29_1_endpoint1_2 (* ?x16962 ?x16913))) ?x16973)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x16904 (+ mean29 ?x6313)))
 (let ((?x16957 (/ (- y29_1_endpoint1_2 y29_1_endpoint0_2) (- ?x16913 ?x16904))))
 (let ((?x16981 (ite (< y29_1 ?x16913) (+ (* ?x16957 y29_1) (- y29_1_endpoint0_2 (* ?x16957 ?x16904))) ?x16977)))
 (let ((?x16897 (- mean29 ?x6297)))
 (let ((?x16952 (/ (- y29_1_endpoint0_2 y29_1_endpoint1_1) (- ?x16904 ?x16897))))
 (let ((?x16985 (ite (< y29_1 ?x16904) (+ (* ?x16952 y29_1) (- y29_1_endpoint1_1 (* ?x16952 ?x16897))) ?x16981)))
 (let ((?x16888 (- mean29 ?x6279)))
 (let ((?x16947 (/ (- y29_1_endpoint1_1 y29_1_endpoint2_1) (- ?x16897 ?x16888))))
 (let ((?x16989 (ite (< y29_1 ?x16897) (+ (* ?x16947 y29_1) (- y29_1_endpoint2_1 (* ?x16947 ?x16888))) ?x16985)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x16874 (- mean29 ?x6257)))
 (let ((?x16942 (/ (- y29_1_endpoint2_1 y29_1_endpoint3_1) (- ?x16888 ?x16874))))
 (let ((?x16993 (ite (< y29_1 ?x16888) (+ (* ?x16942 y29_1) (- y29_1_endpoint3_1 (* ?x16942 ?x16874))) ?x16989)))
 (let ((?x16997 (ite (> y29_1 (+ mean29 ?x6257)) 0.0 (ite (< y29_1 ?x16874) 0.0 ?x16993))))
 (= likelihoody29_1 ?x16997))))))))))))))))))))))))))
(assert
 (let ((?x17162 (ite (< y29_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y29_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y29_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y29_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x17170 (ite (< y29_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y29_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y29_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y29_2) (/ 3989467804994813.0 100000000000000000.0)) ?x17162))))
 (let ((?x17178 (ite (< y29_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y29_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y29_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y29_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x17170))))
 (= likelihoody29_2 (ite (> y29_2 30.0) 0.0 (ite (< y29_2 (- 30.0)) 0.0 ?x17178)))))))
(assert
 (= likelihoodoutlier30 (ite (= outlier30 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x17234 (= y30_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y30_1_endpoint3_1| $x17234)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x17231 (= y30_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y30_1_endpoint2_1| $x17231)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17243 (= y30_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y30_1_endpoint1_1| $x17243)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x17261 (= y30_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y30_1_endpoint0_2| $x17261)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17268 (= y30_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y30_1_endpoint1_2| $x17268)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x17277 (= y30_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y30_1_endpoint2_2| $x17277)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x17286 (= y30_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y30_1_endpoint3_2| $x17286)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x17275 (+ mean30 ?x6279)))
 (let ((?x17320 (/ (- y30_1_endpoint3_2 y30_1_endpoint2_2) (- (+ mean30 (* ?x6258 3.0)) ?x17275))))
 (let ((?x17326 (ite (< y30_1 (+ mean30 (* ?x6258 3.0))) (+ (* ?x17320 y30_1) (- y30_1_endpoint2_2 (* ?x17320 ?x17275))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x17266 (+ mean30 ?x6297)))
 (let ((?x17315 (/ (- y30_1_endpoint2_2 y30_1_endpoint1_2) (- ?x17275 ?x17266))))
 (let ((?x17330 (ite (< y30_1 ?x17275) (+ (* ?x17315 y30_1) (- y30_1_endpoint1_2 (* ?x17315 ?x17266))) ?x17326)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x17259 (+ mean30 ?x6313)))
 (let ((?x17310 (/ (- y30_1_endpoint1_2 y30_1_endpoint0_2) (- ?x17266 ?x17259))))
 (let ((?x17334 (ite (< y30_1 ?x17266) (+ (* ?x17310 y30_1) (- y30_1_endpoint0_2 (* ?x17310 ?x17259))) ?x17330)))
 (let ((?x17250 (- mean30 ?x6297)))
 (let ((?x17305 (/ (- y30_1_endpoint0_2 y30_1_endpoint1_1) (- ?x17259 ?x17250))))
 (let ((?x17338 (ite (< y30_1 ?x17259) (+ (* ?x17305 y30_1) (- y30_1_endpoint1_1 (* ?x17305 ?x17250))) ?x17334)))
 (let ((?x17241 (- mean30 ?x6279)))
 (let ((?x17300 (/ (- y30_1_endpoint1_1 y30_1_endpoint2_1) (- ?x17250 ?x17241))))
 (let ((?x17342 (ite (< y30_1 ?x17250) (+ (* ?x17300 y30_1) (- y30_1_endpoint2_1 (* ?x17300 ?x17241))) ?x17338)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x17227 (- mean30 ?x6257)))
 (let ((?x17295 (/ (- y30_1_endpoint2_1 y30_1_endpoint3_1) (- ?x17241 ?x17227))))
 (let ((?x17346 (ite (< y30_1 ?x17241) (+ (* ?x17295 y30_1) (- y30_1_endpoint3_1 (* ?x17295 ?x17227))) ?x17342)))
 (let ((?x17350 (ite (> y30_1 (+ mean30 ?x6257)) 0.0 (ite (< y30_1 ?x17227) 0.0 ?x17346))))
 (= likelihoody30_1 ?x17350))))))))))))))))))))))))))
(assert
 (let ((?x17518 (ite (< y30_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y30_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y30_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y30_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x17526 (ite (< y30_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y30_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y30_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y30_2) (/ 3989467804994813.0 100000000000000000.0)) ?x17518))))
 (let ((?x17534 (ite (< y30_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y30_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y30_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y30_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x17526))))
 (= likelihoody30_2 (ite (> y30_2 30.0) 0.0 (ite (< y30_2 (- 30.0)) 0.0 ?x17534)))))))
(assert
 (= likelihoodoutlier31 (ite (= outlier31 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x17588 (= y31_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y31_1_endpoint3_1| $x17588)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x17585 (= y31_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y31_1_endpoint2_1| $x17585)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17597 (= y31_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y31_1_endpoint1_1| $x17597)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x17615 (= y31_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y31_1_endpoint0_2| $x17615)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17624 (= y31_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y31_1_endpoint1_2| $x17624)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x17631 (= y31_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y31_1_endpoint2_2| $x17631)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x17640 (= y31_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y31_1_endpoint3_2| $x17640)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x17629 (+ mean31 ?x6279)))
 (let ((?x17674 (/ (- y31_1_endpoint3_2 y31_1_endpoint2_2) (- (+ mean31 (* ?x6258 3.0)) ?x17629))))
 (let ((?x17680 (ite (< y31_1 (+ mean31 (* ?x6258 3.0))) (+ (* ?x17674 y31_1) (- y31_1_endpoint2_2 (* ?x17674 ?x17629))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x17622 (+ mean31 ?x6297)))
 (let ((?x17669 (/ (- y31_1_endpoint2_2 y31_1_endpoint1_2) (- ?x17629 ?x17622))))
 (let ((?x17684 (ite (< y31_1 ?x17629) (+ (* ?x17669 y31_1) (- y31_1_endpoint1_2 (* ?x17669 ?x17622))) ?x17680)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x17613 (+ mean31 ?x6313)))
 (let ((?x17664 (/ (- y31_1_endpoint1_2 y31_1_endpoint0_2) (- ?x17622 ?x17613))))
 (let ((?x17688 (ite (< y31_1 ?x17622) (+ (* ?x17664 y31_1) (- y31_1_endpoint0_2 (* ?x17664 ?x17613))) ?x17684)))
 (let ((?x17604 (- mean31 ?x6297)))
 (let ((?x17659 (/ (- y31_1_endpoint0_2 y31_1_endpoint1_1) (- ?x17613 ?x17604))))
 (let ((?x17692 (ite (< y31_1 ?x17613) (+ (* ?x17659 y31_1) (- y31_1_endpoint1_1 (* ?x17659 ?x17604))) ?x17688)))
 (let ((?x17595 (- mean31 ?x6279)))
 (let ((?x17654 (/ (- y31_1_endpoint1_1 y31_1_endpoint2_1) (- ?x17604 ?x17595))))
 (let ((?x17696 (ite (< y31_1 ?x17604) (+ (* ?x17654 y31_1) (- y31_1_endpoint2_1 (* ?x17654 ?x17595))) ?x17692)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x17581 (- mean31 ?x6257)))
 (let ((?x17649 (/ (- y31_1_endpoint2_1 y31_1_endpoint3_1) (- ?x17595 ?x17581))))
 (let ((?x17700 (ite (< y31_1 ?x17595) (+ (* ?x17649 y31_1) (- y31_1_endpoint3_1 (* ?x17649 ?x17581))) ?x17696)))
 (let ((?x17704 (ite (> y31_1 (+ mean31 ?x6257)) 0.0 (ite (< y31_1 ?x17581) 0.0 ?x17700))))
 (= likelihoody31_1 ?x17704))))))))))))))))))))))))))
(assert
 (let ((?x17871 (ite (< y31_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y31_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y31_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y31_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x17879 (ite (< y31_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y31_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y31_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y31_2) (/ 3989467804994813.0 100000000000000000.0)) ?x17871))))
 (let ((?x17887 (ite (< y31_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y31_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y31_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y31_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x17879))))
 (= likelihoody31_2 (ite (> y31_2 30.0) 0.0 (ite (< y31_2 (- 30.0)) 0.0 ?x17887)))))))
(assert
 (= likelihoodoutlier32 (ite (= outlier32 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x17943 (= y32_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y32_1_endpoint3_1| $x17943)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x17940 (= y32_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y32_1_endpoint2_1| $x17940)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17950 (= y32_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y32_1_endpoint1_1| $x17950)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x17968 (= y32_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y32_1_endpoint0_2| $x17968)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17977 (= y32_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y32_1_endpoint1_2| $x17977)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x17986 (= y32_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y32_1_endpoint2_2| $x17986)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x17993 (= y32_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y32_1_endpoint3_2| $x17993)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x17984 (+ mean32 ?x6279)))
 (let ((?x18027 (/ (- y32_1_endpoint3_2 y32_1_endpoint2_2) (- (+ mean32 (* ?x6258 3.0)) ?x17984))))
 (let ((?x18033 (ite (< y32_1 (+ mean32 (* ?x6258 3.0))) (+ (* ?x18027 y32_1) (- y32_1_endpoint2_2 (* ?x18027 ?x17984))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x17975 (+ mean32 ?x6297)))
 (let ((?x18022 (/ (- y32_1_endpoint2_2 y32_1_endpoint1_2) (- ?x17984 ?x17975))))
 (let ((?x18037 (ite (< y32_1 ?x17984) (+ (* ?x18022 y32_1) (- y32_1_endpoint1_2 (* ?x18022 ?x17975))) ?x18033)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x17966 (+ mean32 ?x6313)))
 (let ((?x18017 (/ (- y32_1_endpoint1_2 y32_1_endpoint0_2) (- ?x17975 ?x17966))))
 (let ((?x18041 (ite (< y32_1 ?x17975) (+ (* ?x18017 y32_1) (- y32_1_endpoint0_2 (* ?x18017 ?x17966))) ?x18037)))
 (let ((?x17957 (- mean32 ?x6297)))
 (let ((?x18012 (/ (- y32_1_endpoint0_2 y32_1_endpoint1_1) (- ?x17966 ?x17957))))
 (let ((?x18045 (ite (< y32_1 ?x17966) (+ (* ?x18012 y32_1) (- y32_1_endpoint1_1 (* ?x18012 ?x17957))) ?x18041)))
 (let ((?x17948 (- mean32 ?x6279)))
 (let ((?x18007 (/ (- y32_1_endpoint1_1 y32_1_endpoint2_1) (- ?x17957 ?x17948))))
 (let ((?x18049 (ite (< y32_1 ?x17957) (+ (* ?x18007 y32_1) (- y32_1_endpoint2_1 (* ?x18007 ?x17948))) ?x18045)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x17936 (- mean32 ?x6257)))
 (let ((?x18002 (/ (- y32_1_endpoint2_1 y32_1_endpoint3_1) (- ?x17948 ?x17936))))
 (let ((?x18053 (ite (< y32_1 ?x17948) (+ (* ?x18002 y32_1) (- y32_1_endpoint3_1 (* ?x18002 ?x17936))) ?x18049)))
 (let ((?x18057 (ite (> y32_1 (+ mean32 ?x6257)) 0.0 (ite (< y32_1 ?x17936) 0.0 ?x18053))))
 (= likelihoody32_1 ?x18057))))))))))))))))))))))))))
(assert
 (let ((?x18158 (ite (< y32_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y32_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y32_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y32_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x18166 (ite (< y32_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y32_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y32_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y32_2) (/ 3989467804994813.0 100000000000000000.0)) ?x18158))))
 (let ((?x18174 (ite (< y32_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y32_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y32_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y32_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x18166))))
 (= likelihoody32_2 (ite (> y32_2 30.0) 0.0 (ite (< y32_2 (- 30.0)) 0.0 ?x18174)))))))
(assert
 (= likelihoodoutlier33 (ite (= outlier33 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x18213 (= y33_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y33_1_endpoint3_1| $x18213)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x18210 (= y33_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y33_1_endpoint2_1| $x18210)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18222 (= y33_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y33_1_endpoint1_1| $x18222)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x6512 (= y33_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y33_1_endpoint0_2| $x6512)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18238 (= y33_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y33_1_endpoint1_2| $x18238)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x18246 (= y33_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y33_1_endpoint2_2| $x18246)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x18255 (= y33_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y33_1_endpoint3_2| $x18255)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x18244 (+ mean33 ?x6279)))
 (let ((?x18288 (/ (- y33_1_endpoint3_2 y33_1_endpoint2_2) (- (+ mean33 (* ?x6258 3.0)) ?x18244))))
 (let ((?x18294 (ite (< y33_1 (+ mean33 (* ?x6258 3.0))) (+ (* ?x18288 y33_1) (- y33_1_endpoint2_2 (* ?x18288 ?x18244))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x6521 (+ mean33 ?x6297)))
 (let ((?x18283 (/ (- y33_1_endpoint2_2 y33_1_endpoint1_2) (- ?x18244 ?x6521))))
 (let ((?x18298 (ite (< y33_1 ?x18244) (+ (* ?x18283 y33_1) (- y33_1_endpoint1_2 (* ?x18283 ?x6521))) ?x18294)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x6510 (+ mean33 ?x6313)))
 (let ((?x18278 (/ (- y33_1_endpoint1_2 y33_1_endpoint0_2) (- ?x6521 ?x6510))))
 (let ((?x18302 (ite (< y33_1 ?x6521) (+ (* ?x18278 y33_1) (- y33_1_endpoint0_2 (* ?x18278 ?x6510))) ?x18298)))
 (let ((?x6515 (- mean33 ?x6297)))
 (let ((?x18273 (/ (- y33_1_endpoint0_2 y33_1_endpoint1_1) (- ?x6510 ?x6515))))
 (let ((?x18306 (ite (< y33_1 ?x6510) (+ (* ?x18273 y33_1) (- y33_1_endpoint1_1 (* ?x18273 ?x6515))) ?x18302)))
 (let ((?x18220 (- mean33 ?x6279)))
 (let ((?x18268 (/ (- y33_1_endpoint1_1 y33_1_endpoint2_1) (- ?x6515 ?x18220))))
 (let ((?x18310 (ite (< y33_1 ?x6515) (+ (* ?x18268 y33_1) (- y33_1_endpoint2_1 (* ?x18268 ?x18220))) ?x18306)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x18206 (- mean33 ?x6257)))
 (let ((?x18263 (/ (- y33_1_endpoint2_1 y33_1_endpoint3_1) (- ?x18220 ?x18206))))
 (let ((?x18314 (ite (< y33_1 ?x18220) (+ (* ?x18263 y33_1) (- y33_1_endpoint3_1 (* ?x18263 ?x18206))) ?x18310)))
 (let ((?x18318 (ite (> y33_1 (+ mean33 ?x6257)) 0.0 (ite (< y33_1 ?x18206) 0.0 ?x18314))))
 (= likelihoody33_1 ?x18318))))))))))))))))))))))))))
(assert
 (let ((?x18410 (ite (< y33_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y33_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y33_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y33_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x18418 (ite (< y33_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y33_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y33_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y33_2) (/ 3989467804994813.0 100000000000000000.0)) ?x18410))))
 (let ((?x18426 (ite (< y33_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y33_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y33_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y33_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x18418))))
 (= likelihoody33_2 (ite (> y33_2 30.0) 0.0 (ite (< y33_2 (- 30.0)) 0.0 ?x18426)))))))
(assert
 (= likelihoodoutlier34 (ite (= outlier34 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x18465 (= y34_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y34_1_endpoint3_1| $x18465)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x18462 (= y34_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y34_1_endpoint2_1| $x18462)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18471 (= y34_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y34_1_endpoint1_1| $x18471)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x18481 (= y34_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y34_1_endpoint0_2| $x18481)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18489 (= y34_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y34_1_endpoint1_2| $x18489)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x18498 (= y34_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y34_1_endpoint2_2| $x18498)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x18506 (= y34_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y34_1_endpoint3_2| $x18506)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x18496 (+ mean34 ?x6279)))
 (let ((?x18539 (/ (- y34_1_endpoint3_2 y34_1_endpoint2_2) (- (+ mean34 (* ?x6258 3.0)) ?x18496))))
 (let ((?x18545 (ite (< y34_1 (+ mean34 (* ?x6258 3.0))) (+ (* ?x18539 y34_1) (- y34_1_endpoint2_2 (* ?x18539 ?x18496))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x18487 (+ mean34 ?x6297)))
 (let ((?x18534 (/ (- y34_1_endpoint2_2 y34_1_endpoint1_2) (- ?x18496 ?x18487))))
 (let ((?x18549 (ite (< y34_1 ?x18496) (+ (* ?x18534 y34_1) (- y34_1_endpoint1_2 (* ?x18534 ?x18487))) ?x18545)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x6918 (+ mean34 ?x6313)))
 (let ((?x18529 (/ (- y34_1_endpoint1_2 y34_1_endpoint0_2) (- ?x18487 ?x6918))))
 (let ((?x18553 (ite (< y34_1 ?x18487) (+ (* ?x18529 y34_1) (- y34_1_endpoint0_2 (* ?x18529 ?x6918))) ?x18549)))
 (let ((?x6907 (- mean34 ?x6297)))
 (let ((?x18524 (/ (- y34_1_endpoint0_2 y34_1_endpoint1_1) (- ?x6918 ?x6907))))
 (let ((?x18557 (ite (< y34_1 ?x6918) (+ (* ?x18524 y34_1) (- y34_1_endpoint1_1 (* ?x18524 ?x6907))) ?x18553)))
 (let ((?x6912 (- mean34 ?x6279)))
 (let ((?x18519 (/ (- y34_1_endpoint1_1 y34_1_endpoint2_1) (- ?x6907 ?x6912))))
 (let ((?x18561 (ite (< y34_1 ?x6907) (+ (* ?x18519 y34_1) (- y34_1_endpoint2_1 (* ?x18519 ?x6912))) ?x18557)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x18458 (- mean34 ?x6257)))
 (let ((?x18514 (/ (- y34_1_endpoint2_1 y34_1_endpoint3_1) (- ?x6912 ?x18458))))
 (let ((?x18565 (ite (< y34_1 ?x6912) (+ (* ?x18514 y34_1) (- y34_1_endpoint3_1 (* ?x18514 ?x18458))) ?x18561)))
 (let ((?x18569 (ite (> y34_1 (+ mean34 ?x6257)) 0.0 (ite (< y34_1 ?x18458) 0.0 ?x18565))))
 (= likelihoody34_1 ?x18569))))))))))))))))))))))))))
(assert
 (let ((?x18664 (ite (< y34_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y34_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y34_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y34_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x18672 (ite (< y34_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y34_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y34_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y34_2) (/ 3989467804994813.0 100000000000000000.0)) ?x18664))))
 (let ((?x18680 (ite (< y34_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y34_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y34_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y34_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x18672))))
 (= likelihoody34_2 (ite (> y34_2 30.0) 0.0 (ite (< y34_2 (- 30.0)) 0.0 ?x18680)))))))
(assert
 (= likelihoodoutlier35 (ite (= outlier35 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x18716 (= y35_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y35_1_endpoint3_1| $x18716)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x18713 (= y35_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y35_1_endpoint2_1| $x18713)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7292 (= y35_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y35_1_endpoint1_1| $x7292)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x18734 (= y35_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y35_1_endpoint0_2| $x18734)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18743 (= y35_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y35_1_endpoint1_2| $x18743)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x18751 (= y35_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y35_1_endpoint2_2| $x18751)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x18759 (= y35_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y35_1_endpoint3_2| $x18759)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x18749 (+ mean35 ?x6279)))
 (let ((?x18790 (/ (- y35_1_endpoint3_2 y35_1_endpoint2_2) (- (+ mean35 (* ?x6258 3.0)) ?x18749))))
 (let ((?x18796 (ite (< y35_1 (+ mean35 (* ?x6258 3.0))) (+ (* ?x18790 y35_1) (- y35_1_endpoint2_2 (* ?x18790 ?x18749))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x18741 (+ mean35 ?x6297)))
 (let ((?x18785 (/ (- y35_1_endpoint2_2 y35_1_endpoint1_2) (- ?x18749 ?x18741))))
 (let ((?x18800 (ite (< y35_1 ?x18749) (+ (* ?x18785 y35_1) (- y35_1_endpoint1_2 (* ?x18785 ?x18741))) ?x18796)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x18732 (+ mean35 ?x6313)))
 (let ((?x18780 (/ (- y35_1_endpoint1_2 y35_1_endpoint0_2) (- ?x18741 ?x18732))))
 (let ((?x18804 (ite (< y35_1 ?x18741) (+ (* ?x18780 y35_1) (- y35_1_endpoint0_2 (* ?x18780 ?x18732))) ?x18800)))
 (let ((?x7301 (- mean35 ?x6297)))
 (let ((?x18775 (/ (- y35_1_endpoint0_2 y35_1_endpoint1_1) (- ?x18732 ?x7301))))
 (let ((?x18808 (ite (< y35_1 ?x18732) (+ (* ?x18775 y35_1) (- y35_1_endpoint1_1 (* ?x18775 ?x7301))) ?x18804)))
 (let ((?x7290 (- mean35 ?x6279)))
 (let ((?x18770 (/ (- y35_1_endpoint1_1 y35_1_endpoint2_1) (- ?x7301 ?x7290))))
 (let ((?x18812 (ite (< y35_1 ?x7301) (+ (* ?x18770 y35_1) (- y35_1_endpoint2_1 (* ?x18770 ?x7290))) ?x18808)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x7295 (- mean35 ?x6257)))
 (let ((?x18765 (/ (- y35_1_endpoint2_1 y35_1_endpoint3_1) (- ?x7290 ?x7295))))
 (let ((?x18816 (ite (< y35_1 ?x7290) (+ (* ?x18765 y35_1) (- y35_1_endpoint3_1 (* ?x18765 ?x7295))) ?x18812)))
 (let ((?x18820 (ite (> y35_1 (+ mean35 ?x6257)) 0.0 (ite (< y35_1 ?x7295) 0.0 ?x18816))))
 (= likelihoody35_1 ?x18820))))))))))))))))))))))))))
(assert
 (let ((?x18914 (ite (< y35_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y35_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y35_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y35_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x18922 (ite (< y35_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y35_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y35_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y35_2) (/ 3989467804994813.0 100000000000000000.0)) ?x18914))))
 (let ((?x18930 (ite (< y35_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y35_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y35_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y35_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x18922))))
 (= likelihoody35_2 (ite (> y35_2 30.0) 0.0 (ite (< y35_2 (- 30.0)) 0.0 ?x18930)))))))
(assert
 (= likelihoodoutlier36 (ite (= outlier36 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x18964 (= y36_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y36_1_endpoint3_1| $x18964)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x18961 (= y36_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y36_1_endpoint2_1| $x18961)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18970 (= y36_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y36_1_endpoint1_1| $x18970)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x18987 (= y36_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y36_1_endpoint0_2| $x18987)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18995 (= y36_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y36_1_endpoint1_2| $x18995)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19003 (= y36_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y36_1_endpoint2_2| $x19003)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19009 (= y36_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y36_1_endpoint3_2| $x19009)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x19001 (+ mean36 ?x6279)))
 (let ((?x19042 (/ (- y36_1_endpoint3_2 y36_1_endpoint2_2) (- (+ mean36 (* ?x6258 3.0)) ?x19001))))
 (let ((?x19048 (ite (< y36_1 (+ mean36 (* ?x6258 3.0))) (+ (* ?x19042 y36_1) (- y36_1_endpoint2_2 (* ?x19042 ?x19001))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x18993 (+ mean36 ?x6297)))
 (let ((?x19037 (/ (- y36_1_endpoint2_2 y36_1_endpoint1_2) (- ?x19001 ?x18993))))
 (let ((?x19052 (ite (< y36_1 ?x19001) (+ (* ?x19037 y36_1) (- y36_1_endpoint1_2 (* ?x19037 ?x18993))) ?x19048)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x18985 (+ mean36 ?x6313)))
 (let ((?x19032 (/ (- y36_1_endpoint1_2 y36_1_endpoint0_2) (- ?x18993 ?x18985))))
 (let ((?x19056 (ite (< y36_1 ?x18993) (+ (* ?x19032 y36_1) (- y36_1_endpoint0_2 (* ?x19032 ?x18985))) ?x19052)))
 (let ((?x18976 (- mean36 ?x6297)))
 (let ((?x19027 (/ (- y36_1_endpoint0_2 y36_1_endpoint1_1) (- ?x18985 ?x18976))))
 (let ((?x19060 (ite (< y36_1 ?x18985) (+ (* ?x19027 y36_1) (- y36_1_endpoint1_1 (* ?x19027 ?x18976))) ?x19056)))
 (let ((?x7684 (- mean36 ?x6279)))
 (let ((?x19022 (/ (- y36_1_endpoint1_1 y36_1_endpoint2_1) (- ?x18976 ?x7684))))
 (let ((?x19064 (ite (< y36_1 ?x18976) (+ (* ?x19022 y36_1) (- y36_1_endpoint2_1 (* ?x19022 ?x7684))) ?x19060)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x7673 (- mean36 ?x6257)))
 (let ((?x19017 (/ (- y36_1_endpoint2_1 y36_1_endpoint3_1) (- ?x7684 ?x7673))))
 (let ((?x19068 (ite (< y36_1 ?x7684) (+ (* ?x19017 y36_1) (- y36_1_endpoint3_1 (* ?x19017 ?x7673))) ?x19064)))
 (let ((?x19072 (ite (> y36_1 (+ mean36 ?x6257)) 0.0 (ite (< y36_1 ?x7673) 0.0 ?x19068))))
 (= likelihoody36_1 ?x19072))))))))))))))))))))))))))
(assert
 (let ((?x19163 (ite (< y36_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y36_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y36_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y36_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x19171 (ite (< y36_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y36_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y36_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y36_2) (/ 3989467804994813.0 100000000000000000.0)) ?x19163))))
 (let ((?x19179 (ite (< y36_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y36_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y36_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y36_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x19171))))
 (= likelihoody36_2 (ite (> y36_2 30.0) 0.0 (ite (< y36_2 (- 30.0)) 0.0 ?x19179)))))))
(assert
 (= likelihoodoutlier37 (ite (= outlier37 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19215 (= y37_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y37_1_endpoint3_1| $x19215)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19212 (= y37_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y37_1_endpoint2_1| $x19212)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19223 (= y37_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y37_1_endpoint1_1| $x19223)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x19240 (= y37_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y37_1_endpoint0_2| $x19240)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19248 (= y37_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y37_1_endpoint1_2| $x19248)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19254 (= y37_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y37_1_endpoint2_2| $x19254)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19262 (= y37_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y37_1_endpoint3_2| $x19262)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x8083 (+ mean37 ?x6279)))
 (let ((?x19296 (/ (- y37_1_endpoint3_2 y37_1_endpoint2_2) (- (+ mean37 (* ?x6258 3.0)) ?x8083))))
 (let ((?x19302 (ite (< y37_1 (+ mean37 (* ?x6258 3.0))) (+ (* ?x19296 y37_1) (- y37_1_endpoint2_2 (* ?x19296 ?x8083))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x19246 (+ mean37 ?x6297)))
 (let ((?x19291 (/ (- y37_1_endpoint2_2 y37_1_endpoint1_2) (- ?x8083 ?x19246))))
 (let ((?x19306 (ite (< y37_1 ?x8083) (+ (* ?x19291 y37_1) (- y37_1_endpoint1_2 (* ?x19291 ?x19246))) ?x19302)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x19238 (+ mean37 ?x6313)))
 (let ((?x19286 (/ (- y37_1_endpoint1_2 y37_1_endpoint0_2) (- ?x19246 ?x19238))))
 (let ((?x19310 (ite (< y37_1 ?x19246) (+ (* ?x19286 y37_1) (- y37_1_endpoint0_2 (* ?x19286 ?x19238))) ?x19306)))
 (let ((?x19230 (- mean37 ?x6297)))
 (let ((?x19281 (/ (- y37_1_endpoint0_2 y37_1_endpoint1_1) (- ?x19238 ?x19230))))
 (let ((?x19314 (ite (< y37_1 ?x19238) (+ (* ?x19281 y37_1) (- y37_1_endpoint1_1 (* ?x19281 ?x19230))) ?x19310)))
 (let ((?x19221 (- mean37 ?x6279)))
 (let ((?x19276 (/ (- y37_1_endpoint1_1 y37_1_endpoint2_1) (- ?x19230 ?x19221))))
 (let ((?x19318 (ite (< y37_1 ?x19230) (+ (* ?x19276 y37_1) (- y37_1_endpoint2_1 (* ?x19276 ?x19221))) ?x19314)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x8067 (- mean37 ?x6257)))
 (let ((?x19271 (/ (- y37_1_endpoint2_1 y37_1_endpoint3_1) (- ?x19221 ?x8067))))
 (let ((?x19322 (ite (< y37_1 ?x19221) (+ (* ?x19271 y37_1) (- y37_1_endpoint3_1 (* ?x19271 ?x8067))) ?x19318)))
 (let ((?x19326 (ite (> y37_1 (+ mean37 ?x6257)) 0.0 (ite (< y37_1 ?x8067) 0.0 ?x19322))))
 (= likelihoody37_1 ?x19326))))))))))))))))))))))))))
(assert
 (let ((?x19413 (ite (< y37_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y37_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y37_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y37_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x19421 (ite (< y37_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y37_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y37_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y37_2) (/ 3989467804994813.0 100000000000000000.0)) ?x19413))))
 (let ((?x19429 (ite (< y37_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y37_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y37_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y37_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x19421))))
 (= likelihoody37_2 (ite (> y37_2 30.0) 0.0 (ite (< y37_2 (- 30.0)) 0.0 ?x19429)))))))
(assert
 (= likelihoodoutlier38 (ite (= outlier38 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19467 (= y38_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y38_1_endpoint3_1| $x19467)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19464 (= y38_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y38_1_endpoint2_1| $x19464)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19476 (= y38_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y38_1_endpoint1_1| $x19476)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x19492 (= y38_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y38_1_endpoint0_2| $x19492)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19498 (= y38_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y38_1_endpoint1_2| $x19498)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19506 (= y38_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y38_1_endpoint2_2| $x19506)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19515 (= y38_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y38_1_endpoint3_2| $x19515)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x19504 (+ mean38 ?x6279)))
 (let ((?x19548 (/ (- y38_1_endpoint3_2 y38_1_endpoint2_2) (- (+ mean38 (* ?x6258 3.0)) ?x19504))))
 (let ((?x19554 (ite (< y38_1 (+ mean38 (* ?x6258 3.0))) (+ (* ?x19548 y38_1) (- y38_1_endpoint2_2 (* ?x19548 ?x19504))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x8466 (+ mean38 ?x6297)))
 (let ((?x19543 (/ (- y38_1_endpoint2_2 y38_1_endpoint1_2) (- ?x19504 ?x8466))))
 (let ((?x19558 (ite (< y38_1 ?x19504) (+ (* ?x19543 y38_1) (- y38_1_endpoint1_2 (* ?x19543 ?x8466))) ?x19554)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x19490 (+ mean38 ?x6313)))
 (let ((?x19538 (/ (- y38_1_endpoint1_2 y38_1_endpoint0_2) (- ?x8466 ?x19490))))
 (let ((?x19562 (ite (< y38_1 ?x8466) (+ (* ?x19538 y38_1) (- y38_1_endpoint0_2 (* ?x19538 ?x19490))) ?x19558)))
 (let ((?x19482 (- mean38 ?x6297)))
 (let ((?x19533 (/ (- y38_1_endpoint0_2 y38_1_endpoint1_1) (- ?x19490 ?x19482))))
 (let ((?x19566 (ite (< y38_1 ?x19490) (+ (* ?x19533 y38_1) (- y38_1_endpoint1_1 (* ?x19533 ?x19482))) ?x19562)))
 (let ((?x19474 (- mean38 ?x6279)))
 (let ((?x19528 (/ (- y38_1_endpoint1_1 y38_1_endpoint2_1) (- ?x19482 ?x19474))))
 (let ((?x19570 (ite (< y38_1 ?x19482) (+ (* ?x19528 y38_1) (- y38_1_endpoint2_1 (* ?x19528 ?x19474))) ?x19566)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x19460 (- mean38 ?x6257)))
 (let ((?x19523 (/ (- y38_1_endpoint2_1 y38_1_endpoint3_1) (- ?x19474 ?x19460))))
 (let ((?x19574 (ite (< y38_1 ?x19474) (+ (* ?x19523 y38_1) (- y38_1_endpoint3_1 (* ?x19523 ?x19460))) ?x19570)))
 (let ((?x19578 (ite (> y38_1 (+ mean38 ?x6257)) 0.0 (ite (< y38_1 ?x19460) 0.0 ?x19574))))
 (= likelihoody38_1 ?x19578))))))))))))))))))))))))))
(assert
 (let ((?x19666 (ite (< y38_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y38_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y38_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y38_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x19674 (ite (< y38_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y38_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y38_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y38_2) (/ 3989467804994813.0 100000000000000000.0)) ?x19666))))
 (let ((?x19682 (ite (< y38_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y38_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y38_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y38_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x19674))))
 (= likelihoody38_2 (ite (> y38_2 30.0) 0.0 (ite (< y38_2 (- 30.0)) 0.0 ?x19682)))))))
(assert
 (= likelihoodoutlier39 (ite (= outlier39 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19721 (= y39_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y39_1_endpoint3_1| $x19721)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19718 (= y39_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y39_1_endpoint2_1| $x19718)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19729 (= y39_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y39_1_endpoint1_1| $x19729)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x19743 (= y39_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y39_1_endpoint0_2| $x19743)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19751 (= y39_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y39_1_endpoint1_2| $x19751)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19760 (= y39_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y39_1_endpoint2_2| $x19760)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19768 (= y39_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y39_1_endpoint3_2| $x19768)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x19758 (+ mean39 ?x6279)))
 (let ((?x19800 (/ (- y39_1_endpoint3_2 y39_1_endpoint2_2) (- (+ mean39 (* ?x6258 3.0)) ?x19758))))
 (let ((?x19806 (ite (< y39_1 (+ mean39 (* ?x6258 3.0))) (+ (* ?x19800 y39_1) (- y39_1_endpoint2_2 (* ?x19800 ?x19758))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x19749 (+ mean39 ?x6297)))
 (let ((?x19795 (/ (- y39_1_endpoint2_2 y39_1_endpoint1_2) (- ?x19758 ?x19749))))
 (let ((?x19810 (ite (< y39_1 ?x19758) (+ (* ?x19795 y39_1) (- y39_1_endpoint1_2 (* ?x19795 ?x19749))) ?x19806)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x8849 (+ mean39 ?x6313)))
 (let ((?x19790 (/ (- y39_1_endpoint1_2 y39_1_endpoint0_2) (- ?x19749 ?x8849))))
 (let ((?x19814 (ite (< y39_1 ?x19749) (+ (* ?x19790 y39_1) (- y39_1_endpoint0_2 (* ?x19790 ?x8849))) ?x19810)))
 (let ((?x19735 (- mean39 ?x6297)))
 (let ((?x19785 (/ (- y39_1_endpoint0_2 y39_1_endpoint1_1) (- ?x8849 ?x19735))))
 (let ((?x19818 (ite (< y39_1 ?x8849) (+ (* ?x19785 y39_1) (- y39_1_endpoint1_1 (* ?x19785 ?x19735))) ?x19814)))
 (let ((?x19727 (- mean39 ?x6279)))
 (let ((?x19780 (/ (- y39_1_endpoint1_1 y39_1_endpoint2_1) (- ?x19735 ?x19727))))
 (let ((?x19822 (ite (< y39_1 ?x19735) (+ (* ?x19780 y39_1) (- y39_1_endpoint2_1 (* ?x19780 ?x19727))) ?x19818)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x19714 (- mean39 ?x6257)))
 (let ((?x19775 (/ (- y39_1_endpoint2_1 y39_1_endpoint3_1) (- ?x19727 ?x19714))))
 (let ((?x19826 (ite (< y39_1 ?x19727) (+ (* ?x19775 y39_1) (- y39_1_endpoint3_1 (* ?x19775 ?x19714))) ?x19822)))
 (let ((?x19830 (ite (> y39_1 (+ mean39 ?x6257)) 0.0 (ite (< y39_1 ?x19714) 0.0 ?x19826))))
 (= likelihoody39_1 ?x19830))))))))))))))))))))))))))
(assert
 (let ((?x19918 (ite (< y39_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y39_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y39_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y39_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x19926 (ite (< y39_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y39_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y39_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y39_2) (/ 3989467804994813.0 100000000000000000.0)) ?x19918))))
 (let ((?x19934 (ite (< y39_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y39_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y39_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y39_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x19926))))
 (= likelihoody39_2 (ite (> y39_2 30.0) 0.0 (ite (< y39_2 (- 30.0)) 0.0 ?x19934)))))))
(assert
 (= likelihoodoutlier40 (ite (= outlier40 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x19974 (= y40_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y40_1_endpoint3_1| $x19974)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x19971 (= y40_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y40_1_endpoint2_1| $x19971)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19982 (= y40_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y40_1_endpoint1_1| $x19982)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x19996 (= y40_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y40_1_endpoint0_2| $x19996)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20005 (= y40_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y40_1_endpoint1_2| $x20005)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20013 (= y40_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y40_1_endpoint2_2| $x20013)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20020 (= y40_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y40_1_endpoint3_2| $x20020)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x20011 (+ mean40 ?x6279)))
 (let ((?x20051 (/ (- y40_1_endpoint3_2 y40_1_endpoint2_2) (- (+ mean40 (* ?x6258 3.0)) ?x20011))))
 (let ((?x20057 (ite (< y40_1 (+ mean40 (* ?x6258 3.0))) (+ (* ?x20051 y40_1) (- y40_1_endpoint2_2 (* ?x20051 ?x20011))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x20003 (+ mean40 ?x6297)))
 (let ((?x20046 (/ (- y40_1_endpoint2_2 y40_1_endpoint1_2) (- ?x20011 ?x20003))))
 (let ((?x20061 (ite (< y40_1 ?x20011) (+ (* ?x20046 y40_1) (- y40_1_endpoint1_2 (* ?x20046 ?x20003))) ?x20057)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x19994 (+ mean40 ?x6313)))
 (let ((?x20041 (/ (- y40_1_endpoint1_2 y40_1_endpoint0_2) (- ?x20003 ?x19994))))
 (let ((?x20065 (ite (< y40_1 ?x20003) (+ (* ?x20041 y40_1) (- y40_1_endpoint0_2 (* ?x20041 ?x19994))) ?x20061)))
 (let ((?x9232 (- mean40 ?x6297)))
 (let ((?x20036 (/ (- y40_1_endpoint0_2 y40_1_endpoint1_1) (- ?x19994 ?x9232))))
 (let ((?x20069 (ite (< y40_1 ?x19994) (+ (* ?x20036 y40_1) (- y40_1_endpoint1_1 (* ?x20036 ?x9232))) ?x20065)))
 (let ((?x19980 (- mean40 ?x6279)))
 (let ((?x20031 (/ (- y40_1_endpoint1_1 y40_1_endpoint2_1) (- ?x9232 ?x19980))))
 (let ((?x20073 (ite (< y40_1 ?x9232) (+ (* ?x20031 y40_1) (- y40_1_endpoint2_1 (* ?x20031 ?x19980))) ?x20069)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x19967 (- mean40 ?x6257)))
 (let ((?x20026 (/ (- y40_1_endpoint2_1 y40_1_endpoint3_1) (- ?x19980 ?x19967))))
 (let ((?x20077 (ite (< y40_1 ?x19980) (+ (* ?x20026 y40_1) (- y40_1_endpoint3_1 (* ?x20026 ?x19967))) ?x20073)))
 (let ((?x20081 (ite (> y40_1 (+ mean40 ?x6257)) 0.0 (ite (< y40_1 ?x19967) 0.0 ?x20077))))
 (= likelihoody40_1 ?x20081))))))))))))))))))))))))))
(assert
 (let ((?x20170 (ite (< y40_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y40_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y40_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y40_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x20178 (ite (< y40_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y40_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y40_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y40_2) (/ 3989467804994813.0 100000000000000000.0)) ?x20170))))
 (let ((?x20186 (ite (< y40_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y40_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y40_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y40_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x20178))))
 (= likelihoody40_2 (ite (> y40_2 30.0) 0.0 (ite (< y40_2 (- 30.0)) 0.0 ?x20186)))))))
(assert
 (= likelihoodoutlier41 (ite (= outlier41 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20227 (= y41_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y41_1_endpoint3_1| $x20227)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20224 (= y41_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y41_1_endpoint2_1| $x20224)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20233 (= y41_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y41_1_endpoint1_1| $x20233)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x20250 (= y41_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y41_1_endpoint0_2| $x20250)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20258 (= y41_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y41_1_endpoint1_2| $x20258)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20265 (= y41_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y41_1_endpoint2_2| $x20265)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20271 (= y41_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y41_1_endpoint3_2| $x20271)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x20263 (+ mean41 ?x6279)))
 (let ((?x20304 (/ (- y41_1_endpoint3_2 y41_1_endpoint2_2) (- (+ mean41 (* ?x6258 3.0)) ?x20263))))
 (let ((?x20310 (ite (< y41_1 (+ mean41 (* ?x6258 3.0))) (+ (* ?x20304 y41_1) (- y41_1_endpoint2_2 (* ?x20304 ?x20263))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x20256 (+ mean41 ?x6297)))
 (let ((?x20299 (/ (- y41_1_endpoint2_2 y41_1_endpoint1_2) (- ?x20263 ?x20256))))
 (let ((?x20314 (ite (< y41_1 ?x20263) (+ (* ?x20299 y41_1) (- y41_1_endpoint1_2 (* ?x20299 ?x20256))) ?x20310)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x20248 (+ mean41 ?x6313)))
 (let ((?x20294 (/ (- y41_1_endpoint1_2 y41_1_endpoint0_2) (- ?x20256 ?x20248))))
 (let ((?x20318 (ite (< y41_1 ?x20256) (+ (* ?x20294 y41_1) (- y41_1_endpoint0_2 (* ?x20294 ?x20248))) ?x20314)))
 (let ((?x20239 (- mean41 ?x6297)))
 (let ((?x20289 (/ (- y41_1_endpoint0_2 y41_1_endpoint1_1) (- ?x20248 ?x20239))))
 (let ((?x20322 (ite (< y41_1 ?x20248) (+ (* ?x20289 y41_1) (- y41_1_endpoint1_1 (* ?x20289 ?x20239))) ?x20318)))
 (let ((?x9615 (- mean41 ?x6279)))
 (let ((?x20284 (/ (- y41_1_endpoint1_1 y41_1_endpoint2_1) (- ?x20239 ?x9615))))
 (let ((?x20326 (ite (< y41_1 ?x20239) (+ (* ?x20284 y41_1) (- y41_1_endpoint2_1 (* ?x20284 ?x9615))) ?x20322)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x20220 (- mean41 ?x6257)))
 (let ((?x20279 (/ (- y41_1_endpoint2_1 y41_1_endpoint3_1) (- ?x9615 ?x20220))))
 (let ((?x20330 (ite (< y41_1 ?x9615) (+ (* ?x20279 y41_1) (- y41_1_endpoint3_1 (* ?x20279 ?x20220))) ?x20326)))
 (let ((?x20334 (ite (> y41_1 (+ mean41 ?x6257)) 0.0 (ite (< y41_1 ?x20220) 0.0 ?x20330))))
 (= likelihoody41_1 ?x20334))))))))))))))))))))))))))
(assert
 (let ((?x20422 (ite (< y41_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y41_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y41_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y41_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x20430 (ite (< y41_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y41_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y41_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y41_2) (/ 3989467804994813.0 100000000000000000.0)) ?x20422))))
 (let ((?x20438 (ite (< y41_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y41_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y41_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y41_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x20430))))
 (= likelihoody41_2 (ite (> y41_2 30.0) 0.0 (ite (< y41_2 (- 30.0)) 0.0 ?x20438)))))))
(assert
 (= likelihoodoutlier42 (ite (= outlier42 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20478 (= y42_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y42_1_endpoint3_1| $x20478)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20475 (= y42_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y42_1_endpoint2_1| $x20475)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20486 (= y42_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y42_1_endpoint1_1| $x20486)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x20503 (= y42_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y42_1_endpoint0_2| $x20503)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20510 (= y42_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y42_1_endpoint1_2| $x20510)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20516 (= y42_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y42_1_endpoint2_2| $x20516)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20524 (= y42_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y42_1_endpoint3_2| $x20524)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x10012 (+ mean42 ?x6279)))
 (let ((?x20554 (/ (- y42_1_endpoint3_2 y42_1_endpoint2_2) (- (+ mean42 (* ?x6258 3.0)) ?x10012))))
 (let ((?x20560 (ite (< y42_1 (+ mean42 (* ?x6258 3.0))) (+ (* ?x20554 y42_1) (- y42_1_endpoint2_2 (* ?x20554 ?x10012))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x20508 (+ mean42 ?x6297)))
 (let ((?x20549 (/ (- y42_1_endpoint2_2 y42_1_endpoint1_2) (- ?x10012 ?x20508))))
 (let ((?x20564 (ite (< y42_1 ?x10012) (+ (* ?x20549 y42_1) (- y42_1_endpoint1_2 (* ?x20549 ?x20508))) ?x20560)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x20501 (+ mean42 ?x6313)))
 (let ((?x20544 (/ (- y42_1_endpoint1_2 y42_1_endpoint0_2) (- ?x20508 ?x20501))))
 (let ((?x20568 (ite (< y42_1 ?x20508) (+ (* ?x20544 y42_1) (- y42_1_endpoint0_2 (* ?x20544 ?x20501))) ?x20564)))
 (let ((?x20493 (- mean42 ?x6297)))
 (let ((?x20539 (/ (- y42_1_endpoint0_2 y42_1_endpoint1_1) (- ?x20501 ?x20493))))
 (let ((?x20572 (ite (< y42_1 ?x20501) (+ (* ?x20539 y42_1) (- y42_1_endpoint1_1 (* ?x20539 ?x20493))) ?x20568)))
 (let ((?x20484 (- mean42 ?x6279)))
 (let ((?x20534 (/ (- y42_1_endpoint1_1 y42_1_endpoint2_1) (- ?x20493 ?x20484))))
 (let ((?x20576 (ite (< y42_1 ?x20493) (+ (* ?x20534 y42_1) (- y42_1_endpoint2_1 (* ?x20534 ?x20484))) ?x20572)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x9998 (- mean42 ?x6257)))
 (let ((?x20529 (/ (- y42_1_endpoint2_1 y42_1_endpoint3_1) (- ?x20484 ?x9998))))
 (let ((?x20580 (ite (< y42_1 ?x20484) (+ (* ?x20529 y42_1) (- y42_1_endpoint3_1 (* ?x20529 ?x9998))) ?x20576)))
 (let ((?x20584 (ite (> y42_1 (+ mean42 ?x6257)) 0.0 (ite (< y42_1 ?x9998) 0.0 ?x20580))))
 (= likelihoody42_1 ?x20584))))))))))))))))))))))))))
(assert
 (let ((?x20673 (ite (< y42_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y42_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y42_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y42_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x20681 (ite (< y42_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y42_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y42_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y42_2) (/ 3989467804994813.0 100000000000000000.0)) ?x20673))))
 (let ((?x20689 (ite (< y42_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y42_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y42_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y42_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x20681))))
 (= likelihoody42_2 (ite (> y42_2 30.0) 0.0 (ite (< y42_2 (- 30.0)) 0.0 ?x20689)))))))
(assert
 (= likelihoodoutlier43 (ite (= outlier43 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20731 (= y43_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y43_1_endpoint3_1| $x20731)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20728 (= y43_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y43_1_endpoint2_1| $x20728)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20740 (= y43_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y43_1_endpoint1_1| $x20740)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x20755 (= y43_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y43_1_endpoint0_2| $x20755)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20761 (= y43_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y43_1_endpoint1_2| $x20761)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20769 (= y43_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y43_1_endpoint2_2| $x20769)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20774 (= y43_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y43_1_endpoint3_2| $x20774)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x20767 (+ mean43 ?x6279)))
 (let ((?x20805 (/ (- y43_1_endpoint3_2 y43_1_endpoint2_2) (- (+ mean43 (* ?x6258 3.0)) ?x20767))))
 (let ((?x20811 (ite (< y43_1 (+ mean43 (* ?x6258 3.0))) (+ (* ?x20805 y43_1) (- y43_1_endpoint2_2 (* ?x20805 ?x20767))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x10395 (+ mean43 ?x6297)))
 (let ((?x20800 (/ (- y43_1_endpoint2_2 y43_1_endpoint1_2) (- ?x20767 ?x10395))))
 (let ((?x20815 (ite (< y43_1 ?x20767) (+ (* ?x20800 y43_1) (- y43_1_endpoint1_2 (* ?x20800 ?x10395))) ?x20811)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x20753 (+ mean43 ?x6313)))
 (let ((?x20795 (/ (- y43_1_endpoint1_2 y43_1_endpoint0_2) (- ?x10395 ?x20753))))
 (let ((?x20819 (ite (< y43_1 ?x10395) (+ (* ?x20795 y43_1) (- y43_1_endpoint0_2 (* ?x20795 ?x20753))) ?x20815)))
 (let ((?x20746 (- mean43 ?x6297)))
 (let ((?x20790 (/ (- y43_1_endpoint0_2 y43_1_endpoint1_1) (- ?x20753 ?x20746))))
 (let ((?x20823 (ite (< y43_1 ?x20753) (+ (* ?x20790 y43_1) (- y43_1_endpoint1_1 (* ?x20790 ?x20746))) ?x20819)))
 (let ((?x20738 (- mean43 ?x6279)))
 (let ((?x20785 (/ (- y43_1_endpoint1_1 y43_1_endpoint2_1) (- ?x20746 ?x20738))))
 (let ((?x20827 (ite (< y43_1 ?x20746) (+ (* ?x20785 y43_1) (- y43_1_endpoint2_1 (* ?x20785 ?x20738))) ?x20823)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x20724 (- mean43 ?x6257)))
 (let ((?x20780 (/ (- y43_1_endpoint2_1 y43_1_endpoint3_1) (- ?x20738 ?x20724))))
 (let ((?x20831 (ite (< y43_1 ?x20738) (+ (* ?x20780 y43_1) (- y43_1_endpoint3_1 (* ?x20780 ?x20724))) ?x20827)))
 (let ((?x20835 (ite (> y43_1 (+ mean43 ?x6257)) 0.0 (ite (< y43_1 ?x20724) 0.0 ?x20831))))
 (= likelihoody43_1 ?x20835))))))))))))))))))))))))))
(assert
 (let ((?x20925 (ite (< y43_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y43_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y43_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y43_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x20933 (ite (< y43_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y43_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y43_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y43_2) (/ 3989467804994813.0 100000000000000000.0)) ?x20925))))
 (let ((?x20941 (ite (< y43_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y43_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y43_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y43_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x20933))))
 (= likelihoody43_2 (ite (> y43_2 30.0) 0.0 (ite (< y43_2 (- 30.0)) 0.0 ?x20941)))))))
(assert
 (= likelihoodoutlier44 (ite (= outlier44 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x20983 (= y44_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y44_1_endpoint3_1| $x20983)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x20980 (= y44_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y44_1_endpoint2_1| $x20980)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20991 (= y44_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y44_1_endpoint1_1| $x20991)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x21004 (= y44_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y44_1_endpoint0_2| $x21004)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21012 (= y44_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y44_1_endpoint1_2| $x21012)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21017 (= y44_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y44_1_endpoint2_2| $x21017)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21023 (= y44_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y44_1_endpoint3_2| $x21023)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x10782 (+ mean44 ?x6279)))
 (let ((?x21056 (/ (- y44_1_endpoint3_2 y44_1_endpoint2_2) (- (+ mean44 (* ?x6258 3.0)) ?x10782))))
 (let ((?x21062 (ite (< y44_1 (+ mean44 (* ?x6258 3.0))) (+ (* ?x21056 y44_1) (- y44_1_endpoint2_2 (* ?x21056 ?x10782))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x21010 (+ mean44 ?x6297)))
 (let ((?x21051 (/ (- y44_1_endpoint2_2 y44_1_endpoint1_2) (- ?x10782 ?x21010))))
 (let ((?x21066 (ite (< y44_1 ?x10782) (+ (* ?x21051 y44_1) (- y44_1_endpoint1_2 (* ?x21051 ?x21010))) ?x21062)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x10778 (+ mean44 ?x6313)))
 (let ((?x21046 (/ (- y44_1_endpoint1_2 y44_1_endpoint0_2) (- ?x21010 ?x10778))))
 (let ((?x21070 (ite (< y44_1 ?x21010) (+ (* ?x21046 y44_1) (- y44_1_endpoint0_2 (* ?x21046 ?x10778))) ?x21066)))
 (let ((?x20996 (- mean44 ?x6297)))
 (let ((?x21041 (/ (- y44_1_endpoint0_2 y44_1_endpoint1_1) (- ?x10778 ?x20996))))
 (let ((?x21074 (ite (< y44_1 ?x10778) (+ (* ?x21041 y44_1) (- y44_1_endpoint1_1 (* ?x21041 ?x20996))) ?x21070)))
 (let ((?x20989 (- mean44 ?x6279)))
 (let ((?x21036 (/ (- y44_1_endpoint1_1 y44_1_endpoint2_1) (- ?x20996 ?x20989))))
 (let ((?x21078 (ite (< y44_1 ?x20996) (+ (* ?x21036 y44_1) (- y44_1_endpoint2_1 (* ?x21036 ?x20989))) ?x21074)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x20976 (- mean44 ?x6257)))
 (let ((?x21031 (/ (- y44_1_endpoint2_1 y44_1_endpoint3_1) (- ?x20989 ?x20976))))
 (let ((?x21082 (ite (< y44_1 ?x20989) (+ (* ?x21031 y44_1) (- y44_1_endpoint3_1 (* ?x21031 ?x20976))) ?x21078)))
 (let ((?x21086 (ite (> y44_1 (+ mean44 ?x6257)) 0.0 (ite (< y44_1 ?x20976) 0.0 ?x21082))))
 (= likelihoody44_1 ?x21086))))))))))))))))))))))))))
(assert
 (let ((?x21178 (ite (< y44_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y44_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y44_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y44_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x21186 (ite (< y44_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y44_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y44_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y44_2) (/ 3989467804994813.0 100000000000000000.0)) ?x21178))))
 (let ((?x21194 (ite (< y44_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y44_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y44_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y44_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x21186))))
 (= likelihoody44_2 (ite (> y44_2 30.0) 0.0 (ite (< y44_2 (- 30.0)) 0.0 ?x21194)))))))
(assert
 (= likelihoodoutlier45 (ite (= outlier45 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21235 (= y45_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y45_1_endpoint3_1| $x21235)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21232 (= y45_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y45_1_endpoint2_1| $x21232)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21242 (= y45_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y45_1_endpoint1_1| $x21242)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x21256 (= y45_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y45_1_endpoint0_2| $x21256)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21261 (= y45_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y45_1_endpoint1_2| $x21261)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21267 (= y45_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y45_1_endpoint2_2| $x21267)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21275 (= y45_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y45_1_endpoint3_2| $x21275)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x11173 (+ mean45 ?x6279)))
 (let ((?x21309 (/ (- y45_1_endpoint3_2 y45_1_endpoint2_2) (- (+ mean45 (* ?x6258 3.0)) ?x11173))))
 (let ((?x21315 (ite (< y45_1 (+ mean45 (* ?x6258 3.0))) (+ (* ?x21309 y45_1) (- y45_1_endpoint2_2 (* ?x21309 ?x11173))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x11165 (+ mean45 ?x6297)))
 (let ((?x21304 (/ (- y45_1_endpoint2_2 y45_1_endpoint1_2) (- ?x11173 ?x11165))))
 (let ((?x21319 (ite (< y45_1 ?x11173) (+ (* ?x21304 y45_1) (- y45_1_endpoint1_2 (* ?x21304 ?x11165))) ?x21315)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x21254 (+ mean45 ?x6313)))
 (let ((?x21299 (/ (- y45_1_endpoint1_2 y45_1_endpoint0_2) (- ?x11165 ?x21254))))
 (let ((?x21323 (ite (< y45_1 ?x11165) (+ (* ?x21299 y45_1) (- y45_1_endpoint0_2 (* ?x21299 ?x21254))) ?x21319)))
 (let ((?x11161 (- mean45 ?x6297)))
 (let ((?x21294 (/ (- y45_1_endpoint0_2 y45_1_endpoint1_1) (- ?x21254 ?x11161))))
 (let ((?x21327 (ite (< y45_1 ?x21254) (+ (* ?x21294 y45_1) (- y45_1_endpoint1_1 (* ?x21294 ?x11161))) ?x21323)))
 (let ((?x21240 (- mean45 ?x6279)))
 (let ((?x21289 (/ (- y45_1_endpoint1_1 y45_1_endpoint2_1) (- ?x11161 ?x21240))))
 (let ((?x21331 (ite (< y45_1 ?x11161) (+ (* ?x21289 y45_1) (- y45_1_endpoint2_1 (* ?x21289 ?x21240))) ?x21327)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x21228 (- mean45 ?x6257)))
 (let ((?x21284 (/ (- y45_1_endpoint2_1 y45_1_endpoint3_1) (- ?x21240 ?x21228))))
 (let ((?x21335 (ite (< y45_1 ?x21240) (+ (* ?x21284 y45_1) (- y45_1_endpoint3_1 (* ?x21284 ?x21228))) ?x21331)))
 (let ((?x21339 (ite (> y45_1 (+ mean45 ?x6257)) 0.0 (ite (< y45_1 ?x21228) 0.0 ?x21335))))
 (= likelihoody45_1 ?x21339))))))))))))))))))))))))))
(assert
 (let ((?x21428 (ite (< y45_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y45_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y45_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y45_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x21436 (ite (< y45_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y45_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y45_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y45_2) (/ 3989467804994813.0 100000000000000000.0)) ?x21428))))
 (let ((?x21444 (ite (< y45_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y45_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y45_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y45_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x21436))))
 (= likelihoody45_2 (ite (> y45_2 30.0) 0.0 (ite (< y45_2 (- 30.0)) 0.0 ?x21444)))))))
(assert
 (= likelihoodoutlier46 (ite (= outlier46 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21486 (= y46_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y46_1_endpoint3_1| $x21486)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21483 (= y46_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y46_1_endpoint2_1| $x21483)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21492 (= y46_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y46_1_endpoint1_1| $x21492)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x21505 (= y46_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y46_1_endpoint0_2| $x21505)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21511 (= y46_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y46_1_endpoint1_2| $x21511)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21519 (= y46_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y46_1_endpoint2_2| $x21519)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21528 (= y46_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y46_1_endpoint3_2| $x21528)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x21517 (+ mean46 ?x6279)))
 (let ((?x21560 (/ (- y46_1_endpoint3_2 y46_1_endpoint2_2) (- (+ mean46 (* ?x6258 3.0)) ?x21517))))
 (let ((?x21566 (ite (< y46_1 (+ mean46 (* ?x6258 3.0))) (+ (* ?x21560 y46_1) (- y46_1_endpoint2_2 (* ?x21560 ?x21517))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x11556 (+ mean46 ?x6297)))
 (let ((?x21555 (/ (- y46_1_endpoint2_2 y46_1_endpoint1_2) (- ?x21517 ?x11556))))
 (let ((?x21570 (ite (< y46_1 ?x21517) (+ (* ?x21555 y46_1) (- y46_1_endpoint1_2 (* ?x21555 ?x11556))) ?x21566)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x11548 (+ mean46 ?x6313)))
 (let ((?x21550 (/ (- y46_1_endpoint1_2 y46_1_endpoint0_2) (- ?x11556 ?x11548))))
 (let ((?x21574 (ite (< y46_1 ?x11556) (+ (* ?x21550 y46_1) (- y46_1_endpoint0_2 (* ?x21550 ?x11548))) ?x21570)))
 (let ((?x21498 (- mean46 ?x6297)))
 (let ((?x21545 (/ (- y46_1_endpoint0_2 y46_1_endpoint1_1) (- ?x11548 ?x21498))))
 (let ((?x21578 (ite (< y46_1 ?x11548) (+ (* ?x21545 y46_1) (- y46_1_endpoint1_1 (* ?x21545 ?x21498))) ?x21574)))
 (let ((?x11544 (- mean46 ?x6279)))
 (let ((?x21540 (/ (- y46_1_endpoint1_1 y46_1_endpoint2_1) (- ?x21498 ?x11544))))
 (let ((?x21582 (ite (< y46_1 ?x21498) (+ (* ?x21540 y46_1) (- y46_1_endpoint2_1 (* ?x21540 ?x11544))) ?x21578)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x21479 (- mean46 ?x6257)))
 (let ((?x21535 (/ (- y46_1_endpoint2_1 y46_1_endpoint3_1) (- ?x11544 ?x21479))))
 (let ((?x21586 (ite (< y46_1 ?x11544) (+ (* ?x21535 y46_1) (- y46_1_endpoint3_1 (* ?x21535 ?x21479))) ?x21582)))
 (let ((?x21590 (ite (> y46_1 (+ mean46 ?x6257)) 0.0 (ite (< y46_1 ?x21479) 0.0 ?x21586))))
 (= likelihoody46_1 ?x21590))))))))))))))))))))))))))
(assert
 (let ((?x21675 (ite (< y46_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y46_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y46_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y46_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x21683 (ite (< y46_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y46_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y46_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y46_2) (/ 3989467804994813.0 100000000000000000.0)) ?x21675))))
 (let ((?x21691 (ite (< y46_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y46_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y46_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y46_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x21683))))
 (= likelihoody46_2 (ite (> y46_2 30.0) 0.0 (ite (< y46_2 (- 30.0)) 0.0 ?x21691)))))))
(assert
 (= likelihoodoutlier47 (ite (= outlier47 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21735 (= y47_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y47_1_endpoint3_1| $x21735)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21732 (= y47_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y47_1_endpoint2_1| $x21732)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21743 (= y47_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y47_1_endpoint1_1| $x21743)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x21754 (= y47_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y47_1_endpoint0_2| $x21754)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21762 (= y47_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y47_1_endpoint1_2| $x21762)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21771 (= y47_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y47_1_endpoint2_2| $x21771)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21778 (= y47_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y47_1_endpoint3_2| $x21778)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x21769 (+ mean47 ?x6279)))
 (let ((?x21810 (/ (- y47_1_endpoint3_2 y47_1_endpoint2_2) (- (+ mean47 (* ?x6258 3.0)) ?x21769))))
 (let ((?x21816 (ite (< y47_1 (+ mean47 (* ?x6258 3.0))) (+ (* ?x21810 y47_1) (- y47_1_endpoint2_2 (* ?x21810 ?x21769))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x21760 (+ mean47 ?x6297)))
 (let ((?x21805 (/ (- y47_1_endpoint2_2 y47_1_endpoint1_2) (- ?x21769 ?x21760))))
 (let ((?x21820 (ite (< y47_1 ?x21769) (+ (* ?x21805 y47_1) (- y47_1_endpoint1_2 (* ?x21805 ?x21760))) ?x21816)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x11939 (+ mean47 ?x6313)))
 (let ((?x21800 (/ (- y47_1_endpoint1_2 y47_1_endpoint0_2) (- ?x21760 ?x11939))))
 (let ((?x21824 (ite (< y47_1 ?x21760) (+ (* ?x21800 y47_1) (- y47_1_endpoint0_2 (* ?x21800 ?x11939))) ?x21820)))
 (let ((?x11931 (- mean47 ?x6297)))
 (let ((?x21795 (/ (- y47_1_endpoint0_2 y47_1_endpoint1_1) (- ?x11939 ?x11931))))
 (let ((?x21828 (ite (< y47_1 ?x11939) (+ (* ?x21795 y47_1) (- y47_1_endpoint1_1 (* ?x21795 ?x11931))) ?x21824)))
 (let ((?x21741 (- mean47 ?x6279)))
 (let ((?x21790 (/ (- y47_1_endpoint1_1 y47_1_endpoint2_1) (- ?x11931 ?x21741))))
 (let ((?x21832 (ite (< y47_1 ?x11931) (+ (* ?x21790 y47_1) (- y47_1_endpoint2_1 (* ?x21790 ?x21741))) ?x21828)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x11927 (- mean47 ?x6257)))
 (let ((?x21785 (/ (- y47_1_endpoint2_1 y47_1_endpoint3_1) (- ?x21741 ?x11927))))
 (let ((?x21836 (ite (< y47_1 ?x21741) (+ (* ?x21785 y47_1) (- y47_1_endpoint3_1 (* ?x21785 ?x11927))) ?x21832)))
 (let ((?x21840 (ite (> y47_1 (+ mean47 ?x6257)) 0.0 (ite (< y47_1 ?x11927) 0.0 ?x21836))))
 (= likelihoody47_1 ?x21840))))))))))))))))))))))))))
(assert
 (let ((?x21926 (ite (< y47_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y47_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y47_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y47_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x21934 (ite (< y47_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y47_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y47_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y47_2) (/ 3989467804994813.0 100000000000000000.0)) ?x21926))))
 (let ((?x21942 (ite (< y47_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y47_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y47_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y47_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x21934))))
 (= likelihoody47_2 (ite (> y47_2 30.0) 0.0 (ite (< y47_2 (- 30.0)) 0.0 ?x21942)))))))
(assert
 (= likelihoodoutlier48 (ite (= outlier48 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x21988 (= y48_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y48_1_endpoint3_1| $x21988)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x21985 (= y48_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y48_1_endpoint2_1| $x21985)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x21993 (= y48_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y48_1_endpoint1_1| $x21993)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x22007 (= y48_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y48_1_endpoint0_2| $x22007)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22016 (= y48_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y48_1_endpoint1_2| $x22016)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22023 (= y48_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y48_1_endpoint2_2| $x22023)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22030 (= y48_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y48_1_endpoint3_2| $x22030)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x22021 (+ mean48 ?x6279)))
 (let ((?x22062 (/ (- y48_1_endpoint3_2 y48_1_endpoint2_2) (- (+ mean48 (* ?x6258 3.0)) ?x22021))))
 (let ((?x22068 (ite (< y48_1 (+ mean48 (* ?x6258 3.0))) (+ (* ?x22062 y48_1) (- y48_1_endpoint2_2 (* ?x22062 ?x22021))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x22014 (+ mean48 ?x6297)))
 (let ((?x22057 (/ (- y48_1_endpoint2_2 y48_1_endpoint1_2) (- ?x22021 ?x22014))))
 (let ((?x22072 (ite (< y48_1 ?x22021) (+ (* ?x22057 y48_1) (- y48_1_endpoint1_2 (* ?x22057 ?x22014))) ?x22068)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x22005 (+ mean48 ?x6313)))
 (let ((?x22052 (/ (- y48_1_endpoint1_2 y48_1_endpoint0_2) (- ?x22014 ?x22005))))
 (let ((?x22076 (ite (< y48_1 ?x22014) (+ (* ?x22052 y48_1) (- y48_1_endpoint0_2 (* ?x22052 ?x22005))) ?x22072)))
 (let ((?x12322 (- mean48 ?x6297)))
 (let ((?x22047 (/ (- y48_1_endpoint0_2 y48_1_endpoint1_1) (- ?x22005 ?x12322))))
 (let ((?x22080 (ite (< y48_1 ?x22005) (+ (* ?x22047 y48_1) (- y48_1_endpoint1_1 (* ?x22047 ?x12322))) ?x22076)))
 (let ((?x12314 (- mean48 ?x6279)))
 (let ((?x22042 (/ (- y48_1_endpoint1_1 y48_1_endpoint2_1) (- ?x12322 ?x12314))))
 (let ((?x22084 (ite (< y48_1 ?x12322) (+ (* ?x22042 y48_1) (- y48_1_endpoint2_1 (* ?x22042 ?x12314))) ?x22080)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x21981 (- mean48 ?x6257)))
 (let ((?x22037 (/ (- y48_1_endpoint2_1 y48_1_endpoint3_1) (- ?x12314 ?x21981))))
 (let ((?x22088 (ite (< y48_1 ?x12314) (+ (* ?x22037 y48_1) (- y48_1_endpoint3_1 (* ?x22037 ?x21981))) ?x22084)))
 (let ((?x22092 (ite (> y48_1 (+ mean48 ?x6257)) 0.0 (ite (< y48_1 ?x21981) 0.0 ?x22088))))
 (= likelihoody48_1 ?x22092))))))))))))))))))))))))))
(assert
 (let ((?x22178 (ite (< y48_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y48_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y48_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y48_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x22186 (ite (< y48_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y48_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y48_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y48_2) (/ 3989467804994813.0 100000000000000000.0)) ?x22178))))
 (let ((?x22194 (ite (< y48_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y48_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y48_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y48_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x22186))))
 (= likelihoody48_2 (ite (> y48_2 30.0) 0.0 (ite (< y48_2 (- 30.0)) 0.0 ?x22194)))))))
(assert
 (= likelihoodoutlier49 (ite (= outlier49 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22237 (= y49_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y49_1_endpoint3_1| $x22237)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22234 (= y49_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y49_1_endpoint2_1| $x22234)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22243 (= y49_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y49_1_endpoint1_1| $x22243)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x22260 (= y49_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y49_1_endpoint0_2| $x22260)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22267 (= y49_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y49_1_endpoint1_2| $x22267)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22274 (= y49_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y49_1_endpoint2_2| $x22274)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22281 (= y49_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y49_1_endpoint3_2| $x22281)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x22272 (+ mean49 ?x6279)))
 (let ((?x22312 (/ (- y49_1_endpoint3_2 y49_1_endpoint2_2) (- (+ mean49 (* ?x6258 3.0)) ?x22272))))
 (let ((?x22318 (ite (< y49_1 (+ mean49 (* ?x6258 3.0))) (+ (* ?x22312 y49_1) (- y49_1_endpoint2_2 (* ?x22312 ?x22272))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x22265 (+ mean49 ?x6297)))
 (let ((?x22307 (/ (- y49_1_endpoint2_2 y49_1_endpoint1_2) (- ?x22272 ?x22265))))
 (let ((?x22322 (ite (< y49_1 ?x22272) (+ (* ?x22307 y49_1) (- y49_1_endpoint1_2 (* ?x22307 ?x22265))) ?x22318)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x22258 (+ mean49 ?x6313)))
 (let ((?x22302 (/ (- y49_1_endpoint1_2 y49_1_endpoint0_2) (- ?x22265 ?x22258))))
 (let ((?x22326 (ite (< y49_1 ?x22265) (+ (* ?x22302 y49_1) (- y49_1_endpoint0_2 (* ?x22302 ?x22258))) ?x22322)))
 (let ((?x22249 (- mean49 ?x6297)))
 (let ((?x22297 (/ (- y49_1_endpoint0_2 y49_1_endpoint1_1) (- ?x22258 ?x22249))))
 (let ((?x22330 (ite (< y49_1 ?x22258) (+ (* ?x22297 y49_1) (- y49_1_endpoint1_1 (* ?x22297 ?x22249))) ?x22326)))
 (let ((?x12705 (- mean49 ?x6279)))
 (let ((?x22292 (/ (- y49_1_endpoint1_1 y49_1_endpoint2_1) (- ?x22249 ?x12705))))
 (let ((?x22334 (ite (< y49_1 ?x22249) (+ (* ?x22292 y49_1) (- y49_1_endpoint2_1 (* ?x22292 ?x12705))) ?x22330)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x12697 (- mean49 ?x6257)))
 (let ((?x22287 (/ (- y49_1_endpoint2_1 y49_1_endpoint3_1) (- ?x12705 ?x12697))))
 (let ((?x22338 (ite (< y49_1 ?x12705) (+ (* ?x22287 y49_1) (- y49_1_endpoint3_1 (* ?x22287 ?x12697))) ?x22334)))
 (let ((?x22342 (ite (> y49_1 (+ mean49 ?x6257)) 0.0 (ite (< y49_1 ?x12697) 0.0 ?x22338))))
 (= likelihoody49_1 ?x22342))))))))))))))))))))))))))
(assert
 (let ((?x22432 (ite (< y49_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y49_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y49_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y49_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x22440 (ite (< y49_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y49_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y49_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y49_2) (/ 3989467804994813.0 100000000000000000.0)) ?x22432))))
 (let ((?x22448 (ite (< y49_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y49_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y49_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y49_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x22440))))
 (= likelihoody49_2 (ite (> y49_2 30.0) 0.0 (ite (< y49_2 (- 30.0)) 0.0 ?x22448)))))))
(assert
 (= likelihoodoutlier50 (ite (= outlier50 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22488 (= y50_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y50_1_endpoint3_1| $x22488)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22485 (= y50_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y50_1_endpoint2_1| $x22485)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22496 (= y50_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y50_1_endpoint1_1| $x22496)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x22512 (= y50_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y50_1_endpoint0_2| $x22512)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22519 (= y50_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y50_1_endpoint1_2| $x22519)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22526 (= y50_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y50_1_endpoint2_2| $x22526)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22532 (= y50_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y50_1_endpoint3_2| $x22532)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x22524 (+ mean50 ?x6279)))
 (let ((?x22566 (/ (- y50_1_endpoint3_2 y50_1_endpoint2_2) (- (+ mean50 (* ?x6258 3.0)) ?x22524))))
 (let ((?x22572 (ite (< y50_1 (+ mean50 (* ?x6258 3.0))) (+ (* ?x22566 y50_1) (- y50_1_endpoint2_2 (* ?x22566 ?x22524))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x22517 (+ mean50 ?x6297)))
 (let ((?x22561 (/ (- y50_1_endpoint2_2 y50_1_endpoint1_2) (- ?x22524 ?x22517))))
 (let ((?x22576 (ite (< y50_1 ?x22524) (+ (* ?x22561 y50_1) (- y50_1_endpoint1_2 (* ?x22561 ?x22517))) ?x22572)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x22510 (+ mean50 ?x6313)))
 (let ((?x22556 (/ (- y50_1_endpoint1_2 y50_1_endpoint0_2) (- ?x22517 ?x22510))))
 (let ((?x22580 (ite (< y50_1 ?x22517) (+ (* ?x22556 y50_1) (- y50_1_endpoint0_2 (* ?x22556 ?x22510))) ?x22576)))
 (let ((?x22503 (- mean50 ?x6297)))
 (let ((?x22551 (/ (- y50_1_endpoint0_2 y50_1_endpoint1_1) (- ?x22510 ?x22503))))
 (let ((?x22584 (ite (< y50_1 ?x22510) (+ (* ?x22551 y50_1) (- y50_1_endpoint1_1 (* ?x22551 ?x22503))) ?x22580)))
 (let ((?x22494 (- mean50 ?x6279)))
 (let ((?x22546 (/ (- y50_1_endpoint1_1 y50_1_endpoint2_1) (- ?x22503 ?x22494))))
 (let ((?x22588 (ite (< y50_1 ?x22503) (+ (* ?x22546 y50_1) (- y50_1_endpoint2_1 (* ?x22546 ?x22494))) ?x22584)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x13088 (- mean50 ?x6257)))
 (let ((?x22541 (/ (- y50_1_endpoint2_1 y50_1_endpoint3_1) (- ?x22494 ?x13088))))
 (let ((?x22592 (ite (< y50_1 ?x22494) (+ (* ?x22541 y50_1) (- y50_1_endpoint3_1 (* ?x22541 ?x13088))) ?x22588)))
 (let ((?x22596 (ite (> y50_1 (+ mean50 ?x6257)) 0.0 (ite (< y50_1 ?x13088) 0.0 ?x22592))))
 (= likelihoody50_1 ?x22596))))))))))))))))))))))))))
(assert
 (let ((?x22685 (ite (< y50_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y50_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y50_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y50_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x22693 (ite (< y50_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y50_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y50_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y50_2) (/ 3989467804994813.0 100000000000000000.0)) ?x22685))))
 (let ((?x22701 (ite (< y50_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y50_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y50_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y50_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x22693))))
 (= likelihoody50_2 (ite (> y50_2 30.0) 0.0 (ite (< y50_2 (- 30.0)) 0.0 ?x22701)))))))
(assert
 (= likelihoodoutlier51 (ite (= outlier51 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22741 (= y51_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y51_1_endpoint3_1| $x22741)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22738 (= y51_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y51_1_endpoint2_1| $x22738)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22750 (= y51_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y51_1_endpoint1_1| $x22750)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x22764 (= y51_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y51_1_endpoint0_2| $x22764)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22771 (= y51_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y51_1_endpoint1_2| $x22771)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22777 (= y51_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y51_1_endpoint2_2| $x22777)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22786 (= y51_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y51_1_endpoint3_2| $x22786)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x13485 (+ mean51 ?x6279)))
 (let ((?x22820 (/ (- y51_1_endpoint3_2 y51_1_endpoint2_2) (- (+ mean51 (* ?x6258 3.0)) ?x13485))))
 (let ((?x22826 (ite (< y51_1 (+ mean51 (* ?x6258 3.0))) (+ (* ?x22820 y51_1) (- y51_1_endpoint2_2 (* ?x22820 ?x13485))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x22769 (+ mean51 ?x6297)))
 (let ((?x22815 (/ (- y51_1_endpoint2_2 y51_1_endpoint1_2) (- ?x13485 ?x22769))))
 (let ((?x22830 (ite (< y51_1 ?x13485) (+ (* ?x22815 y51_1) (- y51_1_endpoint1_2 (* ?x22815 ?x22769))) ?x22826)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x22762 (+ mean51 ?x6313)))
 (let ((?x22810 (/ (- y51_1_endpoint1_2 y51_1_endpoint0_2) (- ?x22769 ?x22762))))
 (let ((?x22834 (ite (< y51_1 ?x22769) (+ (* ?x22810 y51_1) (- y51_1_endpoint0_2 (* ?x22810 ?x22762))) ?x22830)))
 (let ((?x22755 (- mean51 ?x6297)))
 (let ((?x22805 (/ (- y51_1_endpoint0_2 y51_1_endpoint1_1) (- ?x22762 ?x22755))))
 (let ((?x22838 (ite (< y51_1 ?x22762) (+ (* ?x22805 y51_1) (- y51_1_endpoint1_1 (* ?x22805 ?x22755))) ?x22834)))
 (let ((?x22748 (- mean51 ?x6279)))
 (let ((?x22800 (/ (- y51_1_endpoint1_1 y51_1_endpoint2_1) (- ?x22755 ?x22748))))
 (let ((?x22842 (ite (< y51_1 ?x22755) (+ (* ?x22800 y51_1) (- y51_1_endpoint2_1 (* ?x22800 ?x22748))) ?x22838)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x22734 (- mean51 ?x6257)))
 (let ((?x22795 (/ (- y51_1_endpoint2_1 y51_1_endpoint3_1) (- ?x22748 ?x22734))))
 (let ((?x22846 (ite (< y51_1 ?x22748) (+ (* ?x22795 y51_1) (- y51_1_endpoint3_1 (* ?x22795 ?x22734))) ?x22842)))
 (let ((?x22850 (ite (> y51_1 (+ mean51 ?x6257)) 0.0 (ite (< y51_1 ?x22734) 0.0 ?x22846))))
 (= likelihoody51_1 ?x22850))))))))))))))))))))))))))
(assert
 (let ((?x22938 (ite (< y51_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y51_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y51_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y51_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x22946 (ite (< y51_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y51_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y51_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y51_2) (/ 3989467804994813.0 100000000000000000.0)) ?x22938))))
 (let ((?x22954 (ite (< y51_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y51_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y51_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y51_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x22946))))
 (= likelihoody51_2 (ite (> y51_2 30.0) 0.0 (ite (< y51_2 (- 30.0)) 0.0 ?x22954)))))))
(assert
 (= likelihoodoutlier52 (ite (= outlier52 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x22995 (= y52_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y52_1_endpoint3_1| $x22995)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x22992 (= y52_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y52_1_endpoint2_1| $x22992)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23002 (= y52_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y52_1_endpoint1_1| $x23002)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x23016 (= y52_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y52_1_endpoint0_2| $x23016)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23022 (= y52_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y52_1_endpoint1_2| $x23022)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x23031 (= y52_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y52_1_endpoint2_2| $x23031)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x23040 (= y52_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y52_1_endpoint3_2| $x23040)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x23029 (+ mean52 ?x6279)))
 (let ((?x23071 (/ (- y52_1_endpoint3_2 y52_1_endpoint2_2) (- (+ mean52 (* ?x6258 3.0)) ?x23029))))
 (let ((?x23077 (ite (< y52_1 (+ mean52 (* ?x6258 3.0))) (+ (* ?x23071 y52_1) (- y52_1_endpoint2_2 (* ?x23071 ?x23029))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x13868 (+ mean52 ?x6297)))
 (let ((?x23066 (/ (- y52_1_endpoint2_2 y52_1_endpoint1_2) (- ?x23029 ?x13868))))
 (let ((?x23081 (ite (< y52_1 ?x23029) (+ (* ?x23066 y52_1) (- y52_1_endpoint1_2 (* ?x23066 ?x13868))) ?x23077)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x23014 (+ mean52 ?x6313)))
 (let ((?x23061 (/ (- y52_1_endpoint1_2 y52_1_endpoint0_2) (- ?x13868 ?x23014))))
 (let ((?x23085 (ite (< y52_1 ?x13868) (+ (* ?x23061 y52_1) (- y52_1_endpoint0_2 (* ?x23061 ?x23014))) ?x23081)))
 (let ((?x23007 (- mean52 ?x6297)))
 (let ((?x23056 (/ (- y52_1_endpoint0_2 y52_1_endpoint1_1) (- ?x23014 ?x23007))))
 (let ((?x23089 (ite (< y52_1 ?x23014) (+ (* ?x23056 y52_1) (- y52_1_endpoint1_1 (* ?x23056 ?x23007))) ?x23085)))
 (let ((?x23000 (- mean52 ?x6279)))
 (let ((?x23051 (/ (- y52_1_endpoint1_1 y52_1_endpoint2_1) (- ?x23007 ?x23000))))
 (let ((?x23093 (ite (< y52_1 ?x23007) (+ (* ?x23051 y52_1) (- y52_1_endpoint2_1 (* ?x23051 ?x23000))) ?x23089)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x22988 (- mean52 ?x6257)))
 (let ((?x23046 (/ (- y52_1_endpoint2_1 y52_1_endpoint3_1) (- ?x23000 ?x22988))))
 (let ((?x23097 (ite (< y52_1 ?x23000) (+ (* ?x23046 y52_1) (- y52_1_endpoint3_1 (* ?x23046 ?x22988))) ?x23093)))
 (let ((?x23101 (ite (> y52_1 (+ mean52 ?x6257)) 0.0 (ite (< y52_1 ?x22988) 0.0 ?x23097))))
 (= likelihoody52_1 ?x23101))))))))))))))))))))))))))
(assert
 (let ((?x23189 (ite (< y52_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y52_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y52_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y52_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x23197 (ite (< y52_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y52_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y52_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y52_2) (/ 3989467804994813.0 100000000000000000.0)) ?x23189))))
 (let ((?x23205 (ite (< y52_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y52_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y52_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y52_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x23197))))
 (= likelihoody52_2 (ite (> y52_2 30.0) 0.0 (ite (< y52_2 (- 30.0)) 0.0 ?x23205)))))))
(assert
 (= likelihoodoutlier53 (ite (= outlier53 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x23247 (= y53_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y53_1_endpoint3_1| $x23247)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x23244 (= y53_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y53_1_endpoint2_1| $x23244)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23254 (= y53_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y53_1_endpoint1_1| $x23254)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x23267 (= y53_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y53_1_endpoint0_2| $x23267)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23276 (= y53_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y53_1_endpoint1_2| $x23276)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x23285 (= y53_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y53_1_endpoint2_2| $x23285)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x23291 (= y53_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y53_1_endpoint3_2| $x23291)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x23283 (+ mean53 ?x6279)))
 (let ((?x23320 (/ (- y53_1_endpoint3_2 y53_1_endpoint2_2) (- (+ mean53 (* ?x6258 3.0)) ?x23283))))
 (let ((?x23326 (ite (< y53_1 (+ mean53 (* ?x6258 3.0))) (+ (* ?x23320 y53_1) (- y53_1_endpoint2_2 (* ?x23320 ?x23283))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x23274 (+ mean53 ?x6297)))
 (let ((?x23315 (/ (- y53_1_endpoint2_2 y53_1_endpoint1_2) (- ?x23283 ?x23274))))
 (let ((?x23330 (ite (< y53_1 ?x23283) (+ (* ?x23315 y53_1) (- y53_1_endpoint1_2 (* ?x23315 ?x23274))) ?x23326)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x14251 (+ mean53 ?x6313)))
 (let ((?x23310 (/ (- y53_1_endpoint1_2 y53_1_endpoint0_2) (- ?x23274 ?x14251))))
 (let ((?x23334 (ite (< y53_1 ?x23274) (+ (* ?x23310 y53_1) (- y53_1_endpoint0_2 (* ?x23310 ?x14251))) ?x23330)))
 (let ((?x23259 (- mean53 ?x6297)))
 (let ((?x23305 (/ (- y53_1_endpoint0_2 y53_1_endpoint1_1) (- ?x14251 ?x23259))))
 (let ((?x23338 (ite (< y53_1 ?x14251) (+ (* ?x23305 y53_1) (- y53_1_endpoint1_1 (* ?x23305 ?x23259))) ?x23334)))
 (let ((?x23252 (- mean53 ?x6279)))
 (let ((?x23300 (/ (- y53_1_endpoint1_1 y53_1_endpoint2_1) (- ?x23259 ?x23252))))
 (let ((?x23342 (ite (< y53_1 ?x23259) (+ (* ?x23300 y53_1) (- y53_1_endpoint2_1 (* ?x23300 ?x23252))) ?x23338)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x23240 (- mean53 ?x6257)))
 (let ((?x14259 (/ (- y53_1_endpoint2_1 y53_1_endpoint3_1) (- ?x23252 ?x23240))))
 (let ((?x23346 (ite (< y53_1 ?x23252) (+ (* ?x14259 y53_1) (- y53_1_endpoint3_1 (* ?x14259 ?x23240))) ?x23342)))
 (let ((?x23350 (ite (> y53_1 (+ mean53 ?x6257)) 0.0 (ite (< y53_1 ?x23240) 0.0 ?x23346))))
 (= likelihoody53_1 ?x23350))))))))))))))))))))))))))
(assert
 (let ((?x23442 (ite (< y53_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y53_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y53_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y53_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x23450 (ite (< y53_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y53_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y53_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y53_2) (/ 3989467804994813.0 100000000000000000.0)) ?x23442))))
 (let ((?x23458 (ite (< y53_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y53_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y53_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y53_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x23450))))
 (= likelihoody53_2 (ite (> y53_2 30.0) 0.0 (ite (< y53_2 (- 30.0)) 0.0 ?x23458)))))))
(assert
 (= likelihoodoutlier54 (ite (= outlier54 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x23499 (= y54_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y54_1_endpoint3_1| $x23499)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x23496 (= y54_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y54_1_endpoint2_1| $x23496)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23506 (= y54_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y54_1_endpoint1_1| $x23506)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x23521 (= y54_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y54_1_endpoint0_2| $x23521)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23530 (= y54_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y54_1_endpoint1_2| $x23530)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x23536 (= y54_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y54_1_endpoint2_2| $x23536)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x14642 (= y54_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y54_1_endpoint3_2| $x14642)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x14645 (+ mean54 ?x6279)))
 (let ((?x23574 (/ (- y54_1_endpoint3_2 y54_1_endpoint2_2) (- (+ mean54 (* ?x6258 3.0)) ?x14645))))
 (let ((?x23580 (ite (< y54_1 (+ mean54 (* ?x6258 3.0))) (+ (* ?x23574 y54_1) (- y54_1_endpoint2_2 (* ?x23574 ?x14645))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x23528 (+ mean54 ?x6297)))
 (let ((?x23569 (/ (- y54_1_endpoint2_2 y54_1_endpoint1_2) (- ?x14645 ?x23528))))
 (let ((?x23584 (ite (< y54_1 ?x14645) (+ (* ?x23569 y54_1) (- y54_1_endpoint1_2 (* ?x23569 ?x23528))) ?x23580)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x23519 (+ mean54 ?x6313)))
 (let ((?x23564 (/ (- y54_1_endpoint1_2 y54_1_endpoint0_2) (- ?x23528 ?x23519))))
 (let ((?x23588 (ite (< y54_1 ?x23528) (+ (* ?x23564 y54_1) (- y54_1_endpoint0_2 (* ?x23564 ?x23519))) ?x23584)))
 (let ((?x14634 (- mean54 ?x6297)))
 (let ((?x23559 (/ (- y54_1_endpoint0_2 y54_1_endpoint1_1) (- ?x23519 ?x14634))))
 (let ((?x23592 (ite (< y54_1 ?x23519) (+ (* ?x23559 y54_1) (- y54_1_endpoint1_1 (* ?x23559 ?x14634))) ?x23588)))
 (let ((?x23504 (- mean54 ?x6279)))
 (let ((?x23554 (/ (- y54_1_endpoint1_1 y54_1_endpoint2_1) (- ?x14634 ?x23504))))
 (let ((?x23596 (ite (< y54_1 ?x14634) (+ (* ?x23554 y54_1) (- y54_1_endpoint2_1 (* ?x23554 ?x23504))) ?x23592)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x23492 (- mean54 ?x6257)))
 (let ((?x23549 (/ (- y54_1_endpoint2_1 y54_1_endpoint3_1) (- ?x23504 ?x23492))))
 (let ((?x23600 (ite (< y54_1 ?x23504) (+ (* ?x23549 y54_1) (- y54_1_endpoint3_1 (* ?x23549 ?x23492))) ?x23596)))
 (let ((?x23604 (ite (> y54_1 (+ mean54 ?x6257)) 0.0 (ite (< y54_1 ?x23492) 0.0 ?x23600))))
 (= likelihoody54_1 ?x23604))))))))))))))))))))))))))
(assert
 (let ((?x23695 (ite (< y54_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y54_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y54_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y54_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x23703 (ite (< y54_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y54_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y54_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y54_2) (/ 3989467804994813.0 100000000000000000.0)) ?x23695))))
 (let ((?x23711 (ite (< y54_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y54_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y54_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y54_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x23703))))
 (= likelihoody54_2 (ite (> y54_2 30.0) 0.0 (ite (< y54_2 (- 30.0)) 0.0 ?x23711)))))))
(assert
 (= likelihoodoutlier55 (ite (= outlier55 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x23753 (= y55_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y55_1_endpoint3_1| $x23753)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x23750 (= y55_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y55_1_endpoint2_1| $x23750)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23759 (= y55_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y55_1_endpoint1_1| $x23759)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x23777 (= y55_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y55_1_endpoint0_2| $x23777)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23783 (= y55_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y55_1_endpoint1_2| $x23783)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x15012 (= y55_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y55_1_endpoint2_2| $x15012)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x23796 (= y55_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y55_1_endpoint3_2| $x23796)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x15010 (+ mean55 ?x6279)))
 (let ((?x23830 (/ (- y55_1_endpoint3_2 y55_1_endpoint2_2) (- (+ mean55 (* ?x6258 3.0)) ?x15010))))
 (let ((?x23836 (ite (< y55_1 (+ mean55 (* ?x6258 3.0))) (+ (* ?x23830 y55_1) (- y55_1_endpoint2_2 (* ?x23830 ?x15010))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x15015 (+ mean55 ?x6297)))
 (let ((?x23825 (/ (- y55_1_endpoint2_2 y55_1_endpoint1_2) (- ?x15010 ?x15015))))
 (let ((?x23840 (ite (< y55_1 ?x15010) (+ (* ?x23825 y55_1) (- y55_1_endpoint1_2 (* ?x23825 ?x15015))) ?x23836)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x23775 (+ mean55 ?x6313)))
 (let ((?x23820 (/ (- y55_1_endpoint1_2 y55_1_endpoint0_2) (- ?x15015 ?x23775))))
 (let ((?x23844 (ite (< y55_1 ?x15015) (+ (* ?x23820 y55_1) (- y55_1_endpoint0_2 (* ?x23820 ?x23775))) ?x23840)))
 (let ((?x23766 (- mean55 ?x6297)))
 (let ((?x23815 (/ (- y55_1_endpoint0_2 y55_1_endpoint1_1) (- ?x23775 ?x23766))))
 (let ((?x23848 (ite (< y55_1 ?x23775) (+ (* ?x23815 y55_1) (- y55_1_endpoint1_1 (* ?x23815 ?x23766))) ?x23844)))
 (let ((?x15006 (- mean55 ?x6279)))
 (let ((?x23810 (/ (- y55_1_endpoint1_1 y55_1_endpoint2_1) (- ?x23766 ?x15006))))
 (let ((?x23852 (ite (< y55_1 ?x23766) (+ (* ?x23810 y55_1) (- y55_1_endpoint2_1 (* ?x23810 ?x15006))) ?x23848)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x23746 (- mean55 ?x6257)))
 (let ((?x23805 (/ (- y55_1_endpoint2_1 y55_1_endpoint3_1) (- ?x15006 ?x23746))))
 (let ((?x23856 (ite (< y55_1 ?x15006) (+ (* ?x23805 y55_1) (- y55_1_endpoint3_1 (* ?x23805 ?x23746))) ?x23852)))
 (let ((?x23860 (ite (> y55_1 (+ mean55 ?x6257)) 0.0 (ite (< y55_1 ?x23746) 0.0 ?x23856))))
 (= likelihoody55_1 ?x23860))))))))))))))))))))))))))
(assert
 (let ((?x23948 (ite (< y55_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y55_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y55_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y55_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x23956 (ite (< y55_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y55_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y55_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y55_2) (/ 3989467804994813.0 100000000000000000.0)) ?x23948))))
 (let ((?x23964 (ite (< y55_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y55_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y55_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y55_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x23956))))
 (= likelihoody55_2 (ite (> y55_2 30.0) 0.0 (ite (< y55_2 (- 30.0)) 0.0 ?x23964)))))))
(assert
 (= likelihoodoutlier56 (ite (= outlier56 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24004 (= y56_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y56_1_endpoint3_1| $x24004)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24001 (= y56_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y56_1_endpoint2_1| $x24001)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24013 (= y56_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y56_1_endpoint1_1| $x24013)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x24028 (= y56_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y56_1_endpoint0_2| $x24028)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x15351 (= y56_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y56_1_endpoint1_2| $x15351)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24041 (= y56_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y56_1_endpoint2_2| $x24041)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24050 (= y56_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y56_1_endpoint3_2| $x24050)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x24039 (+ mean56 ?x6279)))
 (let ((?x24083 (/ (- y56_1_endpoint3_2 y56_1_endpoint2_2) (- (+ mean56 (* ?x6258 3.0)) ?x24039))))
 (let ((?x24089 (ite (< y56_1 (+ mean56 (* ?x6258 3.0))) (+ (* ?x24083 y56_1) (- y56_1_endpoint2_2 (* ?x24083 ?x24039))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x15350 (+ mean56 ?x6297)))
 (let ((?x24078 (/ (- y56_1_endpoint2_2 y56_1_endpoint1_2) (- ?x24039 ?x15350))))
 (let ((?x24093 (ite (< y56_1 ?x24039) (+ (* ?x24078 y56_1) (- y56_1_endpoint1_2 (* ?x24078 ?x15350))) ?x24089)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x15354 (+ mean56 ?x6313)))
 (let ((?x24073 (/ (- y56_1_endpoint1_2 y56_1_endpoint0_2) (- ?x15350 ?x15354))))
 (let ((?x24097 (ite (< y56_1 ?x15350) (+ (* ?x24073 y56_1) (- y56_1_endpoint0_2 (* ?x24073 ?x15354))) ?x24093)))
 (let ((?x24020 (- mean56 ?x6297)))
 (let ((?x24068 (/ (- y56_1_endpoint0_2 y56_1_endpoint1_1) (- ?x15354 ?x24020))))
 (let ((?x24101 (ite (< y56_1 ?x15354) (+ (* ?x24068 y56_1) (- y56_1_endpoint1_1 (* ?x24068 ?x24020))) ?x24097)))
 (let ((?x24011 (- mean56 ?x6279)))
 (let ((?x24063 (/ (- y56_1_endpoint1_1 y56_1_endpoint2_1) (- ?x24020 ?x24011))))
 (let ((?x24105 (ite (< y56_1 ?x24020) (+ (* ?x24063 y56_1) (- y56_1_endpoint2_1 (* ?x24063 ?x24011))) ?x24101)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x15346 (- mean56 ?x6257)))
 (let ((?x24058 (/ (- y56_1_endpoint2_1 y56_1_endpoint3_1) (- ?x24011 ?x15346))))
 (let ((?x24109 (ite (< y56_1 ?x24011) (+ (* ?x24058 y56_1) (- y56_1_endpoint3_1 (* ?x24058 ?x15346))) ?x24105)))
 (let ((?x24113 (ite (> y56_1 (+ mean56 ?x6257)) 0.0 (ite (< y56_1 ?x15346) 0.0 ?x24109))))
 (= likelihoody56_1 ?x24113))))))))))))))))))))))))))
(assert
 (let ((?x24204 (ite (< y56_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y56_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y56_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y56_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x24212 (ite (< y56_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y56_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y56_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y56_2) (/ 3989467804994813.0 100000000000000000.0)) ?x24204))))
 (let ((?x24220 (ite (< y56_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y56_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y56_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y56_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x24212))))
 (= likelihoody56_2 (ite (> y56_2 30.0) 0.0 (ite (< y56_2 (- 30.0)) 0.0 ?x24220)))))))
(assert
 (= likelihoodoutlier57 (ite (= outlier57 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24262 (= y57_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y57_1_endpoint3_1| $x24262)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24259 (= y57_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y57_1_endpoint2_1| $x24259)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24271 (= y57_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y57_1_endpoint1_1| $x24271)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x15689 (= y57_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y57_1_endpoint0_2| $x15689)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24290 (= y57_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y57_1_endpoint1_2| $x24290)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24299 (= y57_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y57_1_endpoint2_2| $x24299)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24307 (= y57_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y57_1_endpoint3_2| $x24307)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x24297 (+ mean57 ?x6279)))
 (let ((?x24338 (/ (- y57_1_endpoint3_2 y57_1_endpoint2_2) (- (+ mean57 (* ?x6258 3.0)) ?x24297))))
 (let ((?x24344 (ite (< y57_1 (+ mean57 (* ?x6258 3.0))) (+ (* ?x24338 y57_1) (- y57_1_endpoint2_2 (* ?x24338 ?x24297))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x24288 (+ mean57 ?x6297)))
 (let ((?x24333 (/ (- y57_1_endpoint2_2 y57_1_endpoint1_2) (- ?x24297 ?x24288))))
 (let ((?x24348 (ite (< y57_1 ?x24297) (+ (* ?x24333 y57_1) (- y57_1_endpoint1_2 (* ?x24333 ?x24288))) ?x24344)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x15687 (+ mean57 ?x6313)))
 (let ((?x24328 (/ (- y57_1_endpoint1_2 y57_1_endpoint0_2) (- ?x24288 ?x15687))))
 (let ((?x24352 (ite (< y57_1 ?x24288) (+ (* ?x24328 y57_1) (- y57_1_endpoint0_2 (* ?x24328 ?x15687))) ?x24348)))
 (let ((?x15692 (- mean57 ?x6297)))
 (let ((?x24323 (/ (- y57_1_endpoint0_2 y57_1_endpoint1_1) (- ?x15687 ?x15692))))
 (let ((?x24356 (ite (< y57_1 ?x15687) (+ (* ?x24323 y57_1) (- y57_1_endpoint1_1 (* ?x24323 ?x15692))) ?x24352)))
 (let ((?x24269 (- mean57 ?x6279)))
 (let ((?x24318 (/ (- y57_1_endpoint1_1 y57_1_endpoint2_1) (- ?x15692 ?x24269))))
 (let ((?x24360 (ite (< y57_1 ?x15692) (+ (* ?x24318 y57_1) (- y57_1_endpoint2_1 (* ?x24318 ?x24269))) ?x24356)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x24255 (- mean57 ?x6257)))
 (let ((?x24313 (/ (- y57_1_endpoint2_1 y57_1_endpoint3_1) (- ?x24269 ?x24255))))
 (let ((?x24364 (ite (< y57_1 ?x24269) (+ (* ?x24313 y57_1) (- y57_1_endpoint3_1 (* ?x24313 ?x24255))) ?x24360)))
 (let ((?x24368 (ite (> y57_1 (+ mean57 ?x6257)) 0.0 (ite (< y57_1 ?x24255) 0.0 ?x24364))))
 (= likelihoody57_1 ?x24368))))))))))))))))))))))))))
(assert
 (let ((?x24456 (ite (< y57_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y57_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y57_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y57_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x24464 (ite (< y57_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y57_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y57_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y57_2) (/ 3989467804994813.0 100000000000000000.0)) ?x24456))))
 (let ((?x24472 (ite (< y57_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y57_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y57_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y57_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x24464))))
 (= likelihoody57_2 (ite (> y57_2 30.0) 0.0 (ite (< y57_2 (- 30.0)) 0.0 ?x24472)))))))
(assert
 (= likelihoodoutlier58 (ite (= outlier58 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24514 (= y58_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y58_1_endpoint3_1| $x24514)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24511 (= y58_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y58_1_endpoint2_1| $x24511)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24520 (= y58_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y58_1_endpoint1_1| $x24520)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x24533 (= y58_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y58_1_endpoint0_2| $x24533)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24542 (= y58_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y58_1_endpoint1_2| $x24542)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24550 (= y58_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y58_1_endpoint2_2| $x24550)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24556 (= y58_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y58_1_endpoint3_2| $x24556)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x24548 (+ mean58 ?x6279)))
 (let ((?x24587 (/ (- y58_1_endpoint3_2 y58_1_endpoint2_2) (- (+ mean58 (* ?x6258 3.0)) ?x24548))))
 (let ((?x24593 (ite (< y58_1 (+ mean58 (* ?x6258 3.0))) (+ (* ?x24587 y58_1) (- y58_1_endpoint2_2 (* ?x24587 ?x24548))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x24540 (+ mean58 ?x6297)))
 (let ((?x24582 (/ (- y58_1_endpoint2_2 y58_1_endpoint1_2) (- ?x24548 ?x24540))))
 (let ((?x24597 (ite (< y58_1 ?x24548) (+ (* ?x24582 y58_1) (- y58_1_endpoint1_2 (* ?x24582 ?x24540))) ?x24593)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x24531 (+ mean58 ?x6313)))
 (let ((?x24577 (/ (- y58_1_endpoint1_2 y58_1_endpoint0_2) (- ?x24540 ?x24531))))
 (let ((?x24601 (ite (< y58_1 ?x24540) (+ (* ?x24577 y58_1) (- y58_1_endpoint0_2 (* ?x24577 ?x24531))) ?x24597)))
 (let ((?x16057 (- mean58 ?x6297)))
 (let ((?x24572 (/ (- y58_1_endpoint0_2 y58_1_endpoint1_1) (- ?x24531 ?x16057))))
 (let ((?x24605 (ite (< y58_1 ?x24531) (+ (* ?x24572 y58_1) (- y58_1_endpoint1_1 (* ?x24572 ?x16057))) ?x24601)))
 (let ((?x16062 (- mean58 ?x6279)))
 (let ((?x24567 (/ (- y58_1_endpoint1_1 y58_1_endpoint2_1) (- ?x16057 ?x16062))))
 (let ((?x24609 (ite (< y58_1 ?x16057) (+ (* ?x24567 y58_1) (- y58_1_endpoint2_1 (* ?x24567 ?x16062))) ?x24605)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x24507 (- mean58 ?x6257)))
 (let ((?x24562 (/ (- y58_1_endpoint2_1 y58_1_endpoint3_1) (- ?x16062 ?x24507))))
 (let ((?x24613 (ite (< y58_1 ?x16062) (+ (* ?x24562 y58_1) (- y58_1_endpoint3_1 (* ?x24562 ?x24507))) ?x24609)))
 (let ((?x24617 (ite (> y58_1 (+ mean58 ?x6257)) 0.0 (ite (< y58_1 ?x24507) 0.0 ?x24613))))
 (= likelihoody58_1 ?x24617))))))))))))))))))))))))))
(assert
 (let ((?x24709 (ite (< y58_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y58_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y58_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y58_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x24717 (ite (< y58_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y58_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y58_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y58_2) (/ 3989467804994813.0 100000000000000000.0)) ?x24709))))
 (let ((?x24725 (ite (< y58_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y58_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y58_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y58_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x24717))))
 (= likelihoody58_2 (ite (> y58_2 30.0) 0.0 (ite (< y58_2 (- 30.0)) 0.0 ?x24725)))))))
(assert
 (= likelihoodoutlier59 (ite (= outlier59 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24765 (= y59_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y59_1_endpoint3_1| $x24765)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24762 (= y59_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y59_1_endpoint2_1| $x24762)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16434 (= y59_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y59_1_endpoint1_1| $x16434)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x24787 (= y59_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y59_1_endpoint0_2| $x24787)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24795 (= y59_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y59_1_endpoint1_2| $x24795)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x24801 (= y59_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y59_1_endpoint2_2| $x24801)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x24807 (= y59_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y59_1_endpoint3_2| $x24807)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x16480 (+ mean59 ?x6279)))
 (let ((?x24838 (/ (- y59_1_endpoint3_2 y59_1_endpoint2_2) (- (+ mean59 (* ?x6258 3.0)) ?x16480))))
 (let ((?x24844 (ite (< y59_1 (+ mean59 (* ?x6258 3.0))) (+ (* ?x24838 y59_1) (- y59_1_endpoint2_2 (* ?x24838 ?x16480))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x24793 (+ mean59 ?x6297)))
 (let ((?x24833 (/ (- y59_1_endpoint2_2 y59_1_endpoint1_2) (- ?x16480 ?x24793))))
 (let ((?x24848 (ite (< y59_1 ?x16480) (+ (* ?x24833 y59_1) (- y59_1_endpoint1_2 (* ?x24833 ?x24793))) ?x24844)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x24785 (+ mean59 ?x6313)))
 (let ((?x24828 (/ (- y59_1_endpoint1_2 y59_1_endpoint0_2) (- ?x24793 ?x24785))))
 (let ((?x24852 (ite (< y59_1 ?x24793) (+ (* ?x24828 y59_1) (- y59_1_endpoint0_2 (* ?x24828 ?x24785))) ?x24848)))
 (let ((?x24776 (- mean59 ?x6297)))
 (let ((?x24823 (/ (- y59_1_endpoint0_2 y59_1_endpoint1_1) (- ?x24785 ?x24776))))
 (let ((?x24856 (ite (< y59_1 ?x24785) (+ (* ?x24823 y59_1) (- y59_1_endpoint1_1 (* ?x24823 ?x24776))) ?x24852)))
 (let ((?x16432 (- mean59 ?x6279)))
 (let ((?x24818 (/ (- y59_1_endpoint1_1 y59_1_endpoint2_1) (- ?x24776 ?x16432))))
 (let ((?x24860 (ite (< y59_1 ?x24776) (+ (* ?x24818 y59_1) (- y59_1_endpoint2_1 (* ?x24818 ?x16432))) ?x24856)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x16437 (- mean59 ?x6257)))
 (let ((?x24813 (/ (- y59_1_endpoint2_1 y59_1_endpoint3_1) (- ?x16432 ?x16437))))
 (let ((?x24864 (ite (< y59_1 ?x16432) (+ (* ?x24813 y59_1) (- y59_1_endpoint3_1 (* ?x24813 ?x16437))) ?x24860)))
 (let ((?x24868 (ite (> y59_1 (+ mean59 ?x6257)) 0.0 (ite (< y59_1 ?x16437) 0.0 ?x24864))))
 (= likelihoody59_1 ?x24868))))))))))))))))))))))))))
(assert
 (let ((?x24961 (ite (< y59_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y59_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y59_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y59_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x24969 (ite (< y59_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y59_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y59_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y59_2) (/ 3989467804994813.0 100000000000000000.0)) ?x24961))))
 (let ((?x24977 (ite (< y59_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y59_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y59_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y59_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x24969))))
 (= likelihoody59_2 (ite (> y59_2 30.0) 0.0 (ite (< y59_2 (- 30.0)) 0.0 ?x24977)))))))
(assert
 (= likelihoodoutlier60 (ite (= outlier60 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25017 (= y60_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y60_1_endpoint3_1| $x25017)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25014 (= y60_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y60_1_endpoint2_1| $x25014)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16787 (= y60_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y60_1_endpoint1_1| $x16787)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x25039 (= y60_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y60_1_endpoint0_2| $x25039)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25047 (= y60_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y60_1_endpoint1_2| $x25047)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25053 (= y60_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y60_1_endpoint2_2| $x25053)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25059 (= y60_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y60_1_endpoint3_2| $x25059)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x16833 (+ mean60 ?x6279)))
 (let ((?x25090 (/ (- y60_1_endpoint3_2 y60_1_endpoint2_2) (- (+ mean60 (* ?x6258 3.0)) ?x16833))))
 (let ((?x25096 (ite (< y60_1 (+ mean60 (* ?x6258 3.0))) (+ (* ?x25090 y60_1) (- y60_1_endpoint2_2 (* ?x25090 ?x16833))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x25045 (+ mean60 ?x6297)))
 (let ((?x25085 (/ (- y60_1_endpoint2_2 y60_1_endpoint1_2) (- ?x16833 ?x25045))))
 (let ((?x25100 (ite (< y60_1 ?x16833) (+ (* ?x25085 y60_1) (- y60_1_endpoint1_2 (* ?x25085 ?x25045))) ?x25096)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x25037 (+ mean60 ?x6313)))
 (let ((?x25080 (/ (- y60_1_endpoint1_2 y60_1_endpoint0_2) (- ?x25045 ?x25037))))
 (let ((?x25104 (ite (< y60_1 ?x25045) (+ (* ?x25080 y60_1) (- y60_1_endpoint0_2 (* ?x25080 ?x25037))) ?x25100)))
 (let ((?x25028 (- mean60 ?x6297)))
 (let ((?x25075 (/ (- y60_1_endpoint0_2 y60_1_endpoint1_1) (- ?x25037 ?x25028))))
 (let ((?x25108 (ite (< y60_1 ?x25037) (+ (* ?x25075 y60_1) (- y60_1_endpoint1_1 (* ?x25075 ?x25028))) ?x25104)))
 (let ((?x16785 (- mean60 ?x6279)))
 (let ((?x25070 (/ (- y60_1_endpoint1_1 y60_1_endpoint2_1) (- ?x25028 ?x16785))))
 (let ((?x25112 (ite (< y60_1 ?x25028) (+ (* ?x25070 y60_1) (- y60_1_endpoint2_1 (* ?x25070 ?x16785))) ?x25108)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x16790 (- mean60 ?x6257)))
 (let ((?x25065 (/ (- y60_1_endpoint2_1 y60_1_endpoint3_1) (- ?x16785 ?x16790))))
 (let ((?x25116 (ite (< y60_1 ?x16785) (+ (* ?x25065 y60_1) (- y60_1_endpoint3_1 (* ?x25065 ?x16790))) ?x25112)))
 (let ((?x25120 (ite (> y60_1 (+ mean60 ?x6257)) 0.0 (ite (< y60_1 ?x16790) 0.0 ?x25116))))
 (= likelihoody60_1 ?x25120))))))))))))))))))))))))))
(assert
 (let ((?x25213 (ite (< y60_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y60_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y60_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y60_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x25221 (ite (< y60_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y60_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y60_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y60_2) (/ 3989467804994813.0 100000000000000000.0)) ?x25213))))
 (let ((?x25229 (ite (< y60_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y60_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y60_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y60_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x25221))))
 (= likelihoody60_2 (ite (> y60_2 30.0) 0.0 (ite (< y60_2 (- 30.0)) 0.0 ?x25229)))))))
(assert
 (= likelihoodoutlier61 (ite (= outlier61 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25269 (= y61_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y61_1_endpoint3_1| $x25269)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25266 (= y61_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y61_1_endpoint2_1| $x25266)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x4927 (= y61_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y61_1_endpoint1_1| $x4927)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x25291 (= y61_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y61_1_endpoint0_2| $x25291)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25299 (= y61_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y61_1_endpoint1_2| $x25299)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25305 (= y61_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y61_1_endpoint2_2| $x25305)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25311 (= y61_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y61_1_endpoint3_2| $x25311)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x17186 (+ mean61 ?x6279)))
 (let ((?x25342 (/ (- y61_1_endpoint3_2 y61_1_endpoint2_2) (- (+ mean61 (* ?x6258 3.0)) ?x17186))))
 (let ((?x25348 (ite (< y61_1 (+ mean61 (* ?x6258 3.0))) (+ (* ?x25342 y61_1) (- y61_1_endpoint2_2 (* ?x25342 ?x17186))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x25297 (+ mean61 ?x6297)))
 (let ((?x25337 (/ (- y61_1_endpoint2_2 y61_1_endpoint1_2) (- ?x17186 ?x25297))))
 (let ((?x25352 (ite (< y61_1 ?x17186) (+ (* ?x25337 y61_1) (- y61_1_endpoint1_2 (* ?x25337 ?x25297))) ?x25348)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x25289 (+ mean61 ?x6313)))
 (let ((?x25332 (/ (- y61_1_endpoint1_2 y61_1_endpoint0_2) (- ?x25297 ?x25289))))
 (let ((?x25356 (ite (< y61_1 ?x25297) (+ (* ?x25332 y61_1) (- y61_1_endpoint0_2 (* ?x25332 ?x25289))) ?x25352)))
 (let ((?x25280 (- mean61 ?x6297)))
 (let ((?x25327 (/ (- y61_1_endpoint0_2 y61_1_endpoint1_1) (- ?x25289 ?x25280))))
 (let ((?x25360 (ite (< y61_1 ?x25289) (+ (* ?x25327 y61_1) (- y61_1_endpoint1_1 (* ?x25327 ?x25280))) ?x25356)))
 (let ((?x17140 (- mean61 ?x6279)))
 (let ((?x25322 (/ (- y61_1_endpoint1_1 y61_1_endpoint2_1) (- ?x25280 ?x17140))))
 (let ((?x25364 (ite (< y61_1 ?x25280) (+ (* ?x25322 y61_1) (- y61_1_endpoint2_1 (* ?x25322 ?x17140))) ?x25360)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x17143 (- mean61 ?x6257)))
 (let ((?x25317 (/ (- y61_1_endpoint2_1 y61_1_endpoint3_1) (- ?x17140 ?x17143))))
 (let ((?x25368 (ite (< y61_1 ?x17140) (+ (* ?x25317 y61_1) (- y61_1_endpoint3_1 (* ?x25317 ?x17143))) ?x25364)))
 (let ((?x25372 (ite (> y61_1 (+ mean61 ?x6257)) 0.0 (ite (< y61_1 ?x17143) 0.0 ?x25368))))
 (= likelihoody61_1 ?x25372))))))))))))))))))))))))))
(assert
 (let ((?x25464 (ite (< y61_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y61_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y61_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y61_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x25472 (ite (< y61_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y61_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y61_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y61_2) (/ 3989467804994813.0 100000000000000000.0)) ?x25464))))
 (let ((?x25480 (ite (< y61_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y61_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y61_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y61_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x25472))))
 (= likelihoody61_2 (ite (> y61_2 30.0) 0.0 (ite (< y61_2 (- 30.0)) 0.0 ?x25480)))))))
(assert
 (= likelihoodoutlier62 (ite (= outlier62 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25520 (= y62_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y62_1_endpoint3_1| $x25520)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25517 (= y62_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y62_1_endpoint2_1| $x25517)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17496 (= y62_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y62_1_endpoint1_1| $x17496)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x25542 (= y62_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y62_1_endpoint0_2| $x25542)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25550 (= y62_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y62_1_endpoint1_2| $x25550)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25556 (= y62_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y62_1_endpoint2_2| $x25556)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25562 (= y62_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y62_1_endpoint3_2| $x25562)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x5352 (+ mean62 ?x6279)))
 (let ((?x25593 (/ (- y62_1_endpoint3_2 y62_1_endpoint2_2) (- (+ mean62 (* ?x6258 3.0)) ?x5352))))
 (let ((?x25599 (ite (< y62_1 (+ mean62 (* ?x6258 3.0))) (+ (* ?x25593 y62_1) (- y62_1_endpoint2_2 (* ?x25593 ?x5352))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x25548 (+ mean62 ?x6297)))
 (let ((?x25588 (/ (- y62_1_endpoint2_2 y62_1_endpoint1_2) (- ?x5352 ?x25548))))
 (let ((?x25603 (ite (< y62_1 ?x5352) (+ (* ?x25588 y62_1) (- y62_1_endpoint1_2 (* ?x25588 ?x25548))) ?x25599)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x25540 (+ mean62 ?x6313)))
 (let ((?x25583 (/ (- y62_1_endpoint1_2 y62_1_endpoint0_2) (- ?x25548 ?x25540))))
 (let ((?x25607 (ite (< y62_1 ?x25548) (+ (* ?x25583 y62_1) (- y62_1_endpoint0_2 (* ?x25583 ?x25540))) ?x25603)))
 (let ((?x25531 (- mean62 ?x6297)))
 (let ((?x25578 (/ (- y62_1_endpoint0_2 y62_1_endpoint1_1) (- ?x25540 ?x25531))))
 (let ((?x25611 (ite (< y62_1 ?x25540) (+ (* ?x25578 y62_1) (- y62_1_endpoint1_1 (* ?x25578 ?x25531))) ?x25607)))
 (let ((?x17494 (- mean62 ?x6279)))
 (let ((?x25573 (/ (- y62_1_endpoint1_1 y62_1_endpoint2_1) (- ?x25531 ?x17494))))
 (let ((?x25615 (ite (< y62_1 ?x25531) (+ (* ?x25573 y62_1) (- y62_1_endpoint2_1 (* ?x25573 ?x17494))) ?x25611)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x17499 (- mean62 ?x6257)))
 (let ((?x25568 (/ (- y62_1_endpoint2_1 y62_1_endpoint3_1) (- ?x17494 ?x17499))))
 (let ((?x25619 (ite (< y62_1 ?x17494) (+ (* ?x25568 y62_1) (- y62_1_endpoint3_1 (* ?x25568 ?x17499))) ?x25615)))
 (let ((?x25623 (ite (> y62_1 (+ mean62 ?x6257)) 0.0 (ite (< y62_1 ?x17499) 0.0 ?x25619))))
 (= likelihoody62_1 ?x25623))))))))))))))))))))))))))
(assert
 (let ((?x25716 (ite (< y62_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y62_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y62_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y62_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x25724 (ite (< y62_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y62_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y62_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y62_2) (/ 3989467804994813.0 100000000000000000.0)) ?x25716))))
 (let ((?x25732 (ite (< y62_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y62_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y62_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y62_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x25724))))
 (= likelihoody62_2 (ite (> y62_2 30.0) 0.0 (ite (< y62_2 (- 30.0)) 0.0 ?x25732)))))))
(assert
 (= likelihoodoutlier63 (ite (= outlier63 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25772 (= y63_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y63_1_endpoint3_1| $x25772)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25769 (= y63_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y63_1_endpoint2_1| $x25769)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x17849 (= y63_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y63_1_endpoint1_1| $x17849)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x25794 (= y63_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y63_1_endpoint0_2| $x25794)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25802 (= y63_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y63_1_endpoint1_2| $x25802)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x25808 (= y63_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y63_1_endpoint2_2| $x25808)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x25814 (= y63_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y63_1_endpoint3_2| $x25814)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x5752 (+ mean63 ?x6279)))
 (let ((?x25845 (/ (- y63_1_endpoint3_2 y63_1_endpoint2_2) (- (+ mean63 (* ?x6258 3.0)) ?x5752))))
 (let ((?x25851 (ite (< y63_1 (+ mean63 (* ?x6258 3.0))) (+ (* ?x25845 y63_1) (- y63_1_endpoint2_2 (* ?x25845 ?x5752))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x25800 (+ mean63 ?x6297)))
 (let ((?x25840 (/ (- y63_1_endpoint2_2 y63_1_endpoint1_2) (- ?x5752 ?x25800))))
 (let ((?x25855 (ite (< y63_1 ?x5752) (+ (* ?x25840 y63_1) (- y63_1_endpoint1_2 (* ?x25840 ?x25800))) ?x25851)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x25792 (+ mean63 ?x6313)))
 (let ((?x25835 (/ (- y63_1_endpoint1_2 y63_1_endpoint0_2) (- ?x25800 ?x25792))))
 (let ((?x25859 (ite (< y63_1 ?x25800) (+ (* ?x25835 y63_1) (- y63_1_endpoint0_2 (* ?x25835 ?x25792))) ?x25855)))
 (let ((?x25783 (- mean63 ?x6297)))
 (let ((?x25830 (/ (- y63_1_endpoint0_2 y63_1_endpoint1_1) (- ?x25792 ?x25783))))
 (let ((?x25863 (ite (< y63_1 ?x25792) (+ (* ?x25830 y63_1) (- y63_1_endpoint1_1 (* ?x25830 ?x25783))) ?x25859)))
 (let ((?x17847 (- mean63 ?x6279)))
 (let ((?x25825 (/ (- y63_1_endpoint1_1 y63_1_endpoint2_1) (- ?x25783 ?x17847))))
 (let ((?x25867 (ite (< y63_1 ?x25783) (+ (* ?x25825 y63_1) (- y63_1_endpoint2_1 (* ?x25825 ?x17847))) ?x25863)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x17852 (- mean63 ?x6257)))
 (let ((?x25820 (/ (- y63_1_endpoint2_1 y63_1_endpoint3_1) (- ?x17847 ?x17852))))
 (let ((?x25871 (ite (< y63_1 ?x17847) (+ (* ?x25820 y63_1) (- y63_1_endpoint3_1 (* ?x25820 ?x17852))) ?x25867)))
 (let ((?x25875 (ite (> y63_1 (+ mean63 ?x6257)) 0.0 (ite (< y63_1 ?x17852) 0.0 ?x25871))))
 (= likelihoody63_1 ?x25875))))))))))))))))))))))))))
(assert
 (let ((?x25967 (ite (< y63_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y63_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y63_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y63_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x25975 (ite (< y63_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y63_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y63_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y63_2) (/ 3989467804994813.0 100000000000000000.0)) ?x25967))))
 (let ((?x25983 (ite (< y63_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y63_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y63_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y63_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x25975))))
 (= likelihoody63_2 (ite (> y63_2 30.0) 0.0 (ite (< y63_2 (- 30.0)) 0.0 ?x25983)))))))
(assert
 (= likelihoodoutlier64 (ite (= outlier64 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26023 (= y64_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y64_1_endpoint3_1| $x26023)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26020 (= y64_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y64_1_endpoint2_1| $x26020)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x6454 (= y64_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y64_1_endpoint1_1| $x6454)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x26045 (= y64_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y64_1_endpoint0_2| $x26045)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26053 (= y64_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y64_1_endpoint1_2| $x26053)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26059 (= y64_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y64_1_endpoint2_2| $x26059)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26065 (= y64_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y64_1_endpoint3_2| $x26065)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x18182 (+ mean64 ?x6279)))
 (let ((?x26096 (/ (- y64_1_endpoint3_2 y64_1_endpoint2_2) (- (+ mean64 (* ?x6258 3.0)) ?x18182))))
 (let ((?x26102 (ite (< y64_1 (+ mean64 (* ?x6258 3.0))) (+ (* ?x26096 y64_1) (- y64_1_endpoint2_2 (* ?x26096 ?x18182))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x26051 (+ mean64 ?x6297)))
 (let ((?x26091 (/ (- y64_1_endpoint2_2 y64_1_endpoint1_2) (- ?x18182 ?x26051))))
 (let ((?x26106 (ite (< y64_1 ?x18182) (+ (* ?x26091 y64_1) (- y64_1_endpoint1_2 (* ?x26091 ?x26051))) ?x26102)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x26043 (+ mean64 ?x6313)))
 (let ((?x26086 (/ (- y64_1_endpoint1_2 y64_1_endpoint0_2) (- ?x26051 ?x26043))))
 (let ((?x26110 (ite (< y64_1 ?x26051) (+ (* ?x26086 y64_1) (- y64_1_endpoint0_2 (* ?x26086 ?x26043))) ?x26106)))
 (let ((?x26034 (- mean64 ?x6297)))
 (let ((?x26081 (/ (- y64_1_endpoint0_2 y64_1_endpoint1_1) (- ?x26043 ?x26034))))
 (let ((?x26114 (ite (< y64_1 ?x26043) (+ (* ?x26081 y64_1) (- y64_1_endpoint1_1 (* ?x26081 ?x26034))) ?x26110)))
 (let ((?x18145 (- mean64 ?x6279)))
 (let ((?x26076 (/ (- y64_1_endpoint1_1 y64_1_endpoint2_1) (- ?x26034 ?x18145))))
 (let ((?x26118 (ite (< y64_1 ?x26034) (+ (* ?x26076 y64_1) (- y64_1_endpoint2_1 (* ?x26076 ?x18145))) ?x26114)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x18147 (- mean64 ?x6257)))
 (let ((?x26071 (/ (- y64_1_endpoint2_1 y64_1_endpoint3_1) (- ?x18145 ?x18147))))
 (let ((?x26122 (ite (< y64_1 ?x18145) (+ (* ?x26071 y64_1) (- y64_1_endpoint3_1 (* ?x26071 ?x18147))) ?x26118)))
 (let ((?x26126 (ite (> y64_1 (+ mean64 ?x6257)) 0.0 (ite (< y64_1 ?x18147) 0.0 ?x26122))))
 (= likelihoody64_1 ?x26126))))))))))))))))))))))))))
(assert
 (let ((?x26220 (ite (< y64_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y64_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y64_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y64_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x26228 (ite (< y64_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y64_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y64_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y64_2) (/ 3989467804994813.0 100000000000000000.0)) ?x26220))))
 (let ((?x26236 (ite (< y64_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y64_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y64_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y64_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x26228))))
 (= likelihoody64_2 (ite (> y64_2 30.0) 0.0 (ite (< y64_2 (- 30.0)) 0.0 ?x26236)))))))
(assert
 (= likelihoodoutlier65 (ite (= outlier65 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26276 (= y65_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y65_1_endpoint3_1| $x26276)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26273 (= y65_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y65_1_endpoint2_1| $x26273)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x18395 (= y65_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y65_1_endpoint1_1| $x18395)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x26298 (= y65_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y65_1_endpoint0_2| $x26298)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26306 (= y65_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y65_1_endpoint1_2| $x26306)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26312 (= y65_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y65_1_endpoint2_2| $x26312)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26318 (= y65_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y65_1_endpoint3_2| $x26318)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x6879 (+ mean65 ?x6279)))
 (let ((?x26349 (/ (- y65_1_endpoint3_2 y65_1_endpoint2_2) (- (+ mean65 (* ?x6258 3.0)) ?x6879))))
 (let ((?x26355 (ite (< y65_1 (+ mean65 (* ?x6258 3.0))) (+ (* ?x26349 y65_1) (- y65_1_endpoint2_2 (* ?x26349 ?x6879))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x26304 (+ mean65 ?x6297)))
 (let ((?x26344 (/ (- y65_1_endpoint2_2 y65_1_endpoint1_2) (- ?x6879 ?x26304))))
 (let ((?x26359 (ite (< y65_1 ?x6879) (+ (* ?x26344 y65_1) (- y65_1_endpoint1_2 (* ?x26344 ?x26304))) ?x26355)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x26296 (+ mean65 ?x6313)))
 (let ((?x26339 (/ (- y65_1_endpoint1_2 y65_1_endpoint0_2) (- ?x26304 ?x26296))))
 (let ((?x26363 (ite (< y65_1 ?x26304) (+ (* ?x26339 y65_1) (- y65_1_endpoint0_2 (* ?x26339 ?x26296))) ?x26359)))
 (let ((?x26287 (- mean65 ?x6297)))
 (let ((?x26334 (/ (- y65_1_endpoint0_2 y65_1_endpoint1_1) (- ?x26296 ?x26287))))
 (let ((?x26367 (ite (< y65_1 ?x26296) (+ (* ?x26334 y65_1) (- y65_1_endpoint1_1 (* ?x26334 ?x26287))) ?x26363)))
 (let ((?x6847 (- mean65 ?x6279)))
 (let ((?x26329 (/ (- y65_1_endpoint1_1 y65_1_endpoint2_1) (- ?x26287 ?x6847))))
 (let ((?x26371 (ite (< y65_1 ?x26287) (+ (* ?x26329 y65_1) (- y65_1_endpoint2_1 (* ?x26329 ?x6847))) ?x26367)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x18398 (- mean65 ?x6257)))
 (let ((?x26324 (/ (- y65_1_endpoint2_1 y65_1_endpoint3_1) (- ?x6847 ?x18398))))
 (let ((?x26375 (ite (< y65_1 ?x6847) (+ (* ?x26324 y65_1) (- y65_1_endpoint3_1 (* ?x26324 ?x18398))) ?x26371)))
 (let ((?x26379 (ite (> y65_1 (+ mean65 ?x6257)) 0.0 (ite (< y65_1 ?x18398) 0.0 ?x26375))))
 (= likelihoody65_1 ?x26379))))))))))))))))))))))))))
(assert
 (let ((?x26471 (ite (< y65_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y65_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y65_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y65_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x26479 (ite (< y65_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y65_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y65_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y65_2) (/ 3989467804994813.0 100000000000000000.0)) ?x26471))))
 (let ((?x26487 (ite (< y65_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y65_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y65_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y65_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x26479))))
 (= likelihoody65_2 (ite (> y65_2 30.0) 0.0 (ite (< y65_2 (- 30.0)) 0.0 ?x26487)))))))
(assert
 (= likelihoodoutlier66 (ite (= outlier66 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26527 (= y66_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y66_1_endpoint3_1| $x26527)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26524 (= y66_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y66_1_endpoint2_1| $x26524)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7246 (= y66_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y66_1_endpoint1_1| $x7246)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x26549 (= y66_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y66_1_endpoint0_2| $x26549)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26557 (= y66_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y66_1_endpoint1_2| $x26557)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26563 (= y66_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y66_1_endpoint2_2| $x26563)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26569 (= y66_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y66_1_endpoint3_2| $x26569)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x7257 (+ mean66 ?x6279)))
 (let ((?x26600 (/ (- y66_1_endpoint3_2 y66_1_endpoint2_2) (- (+ mean66 (* ?x6258 3.0)) ?x7257))))
 (let ((?x26606 (ite (< y66_1 (+ mean66 (* ?x6258 3.0))) (+ (* ?x26600 y66_1) (- y66_1_endpoint2_2 (* ?x26600 ?x7257))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x26555 (+ mean66 ?x6297)))
 (let ((?x26595 (/ (- y66_1_endpoint2_2 y66_1_endpoint1_2) (- ?x7257 ?x26555))))
 (let ((?x26610 (ite (< y66_1 ?x7257) (+ (* ?x26595 y66_1) (- y66_1_endpoint1_2 (* ?x26595 ?x26555))) ?x26606)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x26547 (+ mean66 ?x6313)))
 (let ((?x26590 (/ (- y66_1_endpoint1_2 y66_1_endpoint0_2) (- ?x26555 ?x26547))))
 (let ((?x26614 (ite (< y66_1 ?x26555) (+ (* ?x26590 y66_1) (- y66_1_endpoint0_2 (* ?x26590 ?x26547))) ?x26610)))
 (let ((?x26538 (- mean66 ?x6297)))
 (let ((?x26585 (/ (- y66_1_endpoint0_2 y66_1_endpoint1_1) (- ?x26547 ?x26538))))
 (let ((?x26618 (ite (< y66_1 ?x26547) (+ (* ?x26585 y66_1) (- y66_1_endpoint1_1 (* ?x26585 ?x26538))) ?x26614)))
 (let ((?x18647 (- mean66 ?x6279)))
 (let ((?x26580 (/ (- y66_1_endpoint1_1 y66_1_endpoint2_1) (- ?x26538 ?x18647))))
 (let ((?x26622 (ite (< y66_1 ?x26538) (+ (* ?x26580 y66_1) (- y66_1_endpoint2_1 (* ?x26580 ?x18647))) ?x26618)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x18650 (- mean66 ?x6257)))
 (let ((?x26575 (/ (- y66_1_endpoint2_1 y66_1_endpoint3_1) (- ?x18647 ?x18650))))
 (let ((?x26626 (ite (< y66_1 ?x18647) (+ (* ?x26575 y66_1) (- y66_1_endpoint3_1 (* ?x26575 ?x18650))) ?x26622)))
 (let ((?x26630 (ite (> y66_1 (+ mean66 ?x6257)) 0.0 (ite (< y66_1 ?x18650) 0.0 ?x26626))))
 (= likelihoody66_1 ?x26630))))))))))))))))))))))))))
(assert
 (let ((?x26723 (ite (< y66_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y66_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y66_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y66_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x26731 (ite (< y66_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y66_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y66_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y66_2) (/ 3989467804994813.0 100000000000000000.0)) ?x26723))))
 (let ((?x26739 (ite (< y66_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y66_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y66_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y66_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x26731))))
 (= likelihoody66_2 (ite (> y66_2 30.0) 0.0 (ite (< y66_2 (- 30.0)) 0.0 ?x26739)))))))
(assert
 (= likelihoodoutlier67 (ite (= outlier67 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26779 (= y67_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y67_1_endpoint3_1| $x26779)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26776 (= y67_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y67_1_endpoint2_1| $x26776)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x7628 (= y67_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y67_1_endpoint1_1| $x7628)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x26801 (= y67_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y67_1_endpoint0_2| $x26801)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26809 (= y67_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y67_1_endpoint1_2| $x26809)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x26815 (= y67_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y67_1_endpoint2_2| $x26815)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x26821 (= y67_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y67_1_endpoint3_2| $x26821)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x7651 (+ mean67 ?x6279)))
 (let ((?x26852 (/ (- y67_1_endpoint3_2 y67_1_endpoint2_2) (- (+ mean67 (* ?x6258 3.0)) ?x7651))))
 (let ((?x26858 (ite (< y67_1 (+ mean67 (* ?x6258 3.0))) (+ (* ?x26852 y67_1) (- y67_1_endpoint2_2 (* ?x26852 ?x7651))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x26807 (+ mean67 ?x6297)))
 (let ((?x26847 (/ (- y67_1_endpoint2_2 y67_1_endpoint1_2) (- ?x7651 ?x26807))))
 (let ((?x26862 (ite (< y67_1 ?x7651) (+ (* ?x26847 y67_1) (- y67_1_endpoint1_2 (* ?x26847 ?x26807))) ?x26858)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x26799 (+ mean67 ?x6313)))
 (let ((?x26842 (/ (- y67_1_endpoint1_2 y67_1_endpoint0_2) (- ?x26807 ?x26799))))
 (let ((?x26866 (ite (< y67_1 ?x26807) (+ (* ?x26842 y67_1) (- y67_1_endpoint0_2 (* ?x26842 ?x26799))) ?x26862)))
 (let ((?x26790 (- mean67 ?x6297)))
 (let ((?x26837 (/ (- y67_1_endpoint0_2 y67_1_endpoint1_1) (- ?x26799 ?x26790))))
 (let ((?x26870 (ite (< y67_1 ?x26799) (+ (* ?x26837 y67_1) (- y67_1_endpoint1_1 (* ?x26837 ?x26790))) ?x26866)))
 (let ((?x18898 (- mean67 ?x6279)))
 (let ((?x26832 (/ (- y67_1_endpoint1_1 y67_1_endpoint2_1) (- ?x26790 ?x18898))))
 (let ((?x26874 (ite (< y67_1 ?x26790) (+ (* ?x26832 y67_1) (- y67_1_endpoint2_1 (* ?x26832 ?x18898))) ?x26870)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x18901 (- mean67 ?x6257)))
 (let ((?x26827 (/ (- y67_1_endpoint2_1 y67_1_endpoint3_1) (- ?x18898 ?x18901))))
 (let ((?x26878 (ite (< y67_1 ?x18898) (+ (* ?x26827 y67_1) (- y67_1_endpoint3_1 (* ?x26827 ?x18901))) ?x26874)))
 (let ((?x26882 (ite (> y67_1 (+ mean67 ?x6257)) 0.0 (ite (< y67_1 ?x18901) 0.0 ?x26878))))
 (= likelihoody67_1 ?x26882))))))))))))))))))))))))))
(assert
 (let ((?x26974 (ite (< y67_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y67_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y67_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y67_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x26982 (ite (< y67_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y67_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y67_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y67_2) (/ 3989467804994813.0 100000000000000000.0)) ?x26974))))
 (let ((?x26990 (ite (< y67_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y67_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y67_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y67_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x26982))))
 (= likelihoody67_2 (ite (> y67_2 30.0) 0.0 (ite (< y67_2 (- 30.0)) 0.0 ?x26990)))))))
(assert
 (= likelihoodoutlier68 (ite (= outlier68 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27030 (= y68_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y68_1_endpoint3_1| $x27030)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27027 (= y68_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y68_1_endpoint2_1| $x27027)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x8021 (= y68_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y68_1_endpoint1_1| $x8021)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x27052 (= y68_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y68_1_endpoint0_2| $x27052)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x27060 (= y68_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y68_1_endpoint1_2| $x27060)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27066 (= y68_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y68_1_endpoint2_2| $x27066)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27072 (= y68_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y68_1_endpoint3_2| $x27072)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x8038 (+ mean68 ?x6279)))
 (let ((?x27103 (/ (- y68_1_endpoint3_2 y68_1_endpoint2_2) (- (+ mean68 (* ?x6258 3.0)) ?x8038))))
 (let ((?x27109 (ite (< y68_1 (+ mean68 (* ?x6258 3.0))) (+ (* ?x27103 y68_1) (- y68_1_endpoint2_2 (* ?x27103 ?x8038))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x27058 (+ mean68 ?x6297)))
 (let ((?x27098 (/ (- y68_1_endpoint2_2 y68_1_endpoint1_2) (- ?x8038 ?x27058))))
 (let ((?x27113 (ite (< y68_1 ?x8038) (+ (* ?x27098 y68_1) (- y68_1_endpoint1_2 (* ?x27098 ?x27058))) ?x27109)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x27050 (+ mean68 ?x6313)))
 (let ((?x27093 (/ (- y68_1_endpoint1_2 y68_1_endpoint0_2) (- ?x27058 ?x27050))))
 (let ((?x27117 (ite (< y68_1 ?x27058) (+ (* ?x27093 y68_1) (- y68_1_endpoint0_2 (* ?x27093 ?x27050))) ?x27113)))
 (let ((?x27041 (- mean68 ?x6297)))
 (let ((?x27088 (/ (- y68_1_endpoint0_2 y68_1_endpoint1_1) (- ?x27050 ?x27041))))
 (let ((?x27121 (ite (< y68_1 ?x27050) (+ (* ?x27088 y68_1) (- y68_1_endpoint1_1 (* ?x27088 ?x27041))) ?x27117)))
 (let ((?x19150 (- mean68 ?x6279)))
 (let ((?x27083 (/ (- y68_1_endpoint1_1 y68_1_endpoint2_1) (- ?x27041 ?x19150))))
 (let ((?x27125 (ite (< y68_1 ?x27041) (+ (* ?x27083 y68_1) (- y68_1_endpoint2_1 (* ?x27083 ?x19150))) ?x27121)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x19153 (- mean68 ?x6257)))
 (let ((?x27078 (/ (- y68_1_endpoint2_1 y68_1_endpoint3_1) (- ?x19150 ?x19153))))
 (let ((?x27129 (ite (< y68_1 ?x19150) (+ (* ?x27078 y68_1) (- y68_1_endpoint3_1 (* ?x27078 ?x19153))) ?x27125)))
 (let ((?x27133 (ite (> y68_1 (+ mean68 ?x6257)) 0.0 (ite (< y68_1 ?x19153) 0.0 ?x27129))))
 (= likelihoody68_1 ?x27133))))))))))))))))))))))))))
(assert
 (let ((?x27226 (ite (< y68_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y68_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y68_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y68_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x27234 (ite (< y68_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y68_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y68_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y68_2) (/ 3989467804994813.0 100000000000000000.0)) ?x27226))))
 (let ((?x27242 (ite (< y68_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y68_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y68_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y68_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x27234))))
 (= likelihoody68_2 (ite (> y68_2 30.0) 0.0 (ite (< y68_2 (- 30.0)) 0.0 ?x27242)))))))
(assert
 (= likelihoodoutlier69 (ite (= outlier69 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27282 (= y69_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y69_1_endpoint3_1| $x27282)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27279 (= y69_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y69_1_endpoint2_1| $x27279)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x8400 (= y69_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y69_1_endpoint1_1| $x8400)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x27304 (= y69_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y69_1_endpoint0_2| $x27304)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x27312 (= y69_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y69_1_endpoint1_2| $x27312)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27318 (= y69_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y69_1_endpoint2_2| $x27318)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27324 (= y69_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y69_1_endpoint3_2| $x27324)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x8427 (+ mean69 ?x6279)))
 (let ((?x27355 (/ (- y69_1_endpoint3_2 y69_1_endpoint2_2) (- (+ mean69 (* ?x6258 3.0)) ?x8427))))
 (let ((?x27361 (ite (< y69_1 (+ mean69 (* ?x6258 3.0))) (+ (* ?x27355 y69_1) (- y69_1_endpoint2_2 (* ?x27355 ?x8427))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x27310 (+ mean69 ?x6297)))
 (let ((?x27350 (/ (- y69_1_endpoint2_2 y69_1_endpoint1_2) (- ?x8427 ?x27310))))
 (let ((?x27365 (ite (< y69_1 ?x8427) (+ (* ?x27350 y69_1) (- y69_1_endpoint1_2 (* ?x27350 ?x27310))) ?x27361)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x27302 (+ mean69 ?x6313)))
 (let ((?x27345 (/ (- y69_1_endpoint1_2 y69_1_endpoint0_2) (- ?x27310 ?x27302))))
 (let ((?x27369 (ite (< y69_1 ?x27310) (+ (* ?x27345 y69_1) (- y69_1_endpoint0_2 (* ?x27345 ?x27302))) ?x27365)))
 (let ((?x27293 (- mean69 ?x6297)))
 (let ((?x27340 (/ (- y69_1_endpoint0_2 y69_1_endpoint1_1) (- ?x27302 ?x27293))))
 (let ((?x27373 (ite (< y69_1 ?x27302) (+ (* ?x27340 y69_1) (- y69_1_endpoint1_1 (* ?x27340 ?x27293))) ?x27369)))
 (let ((?x19401 (- mean69 ?x6279)))
 (let ((?x27335 (/ (- y69_1_endpoint1_1 y69_1_endpoint2_1) (- ?x27293 ?x19401))))
 (let ((?x27377 (ite (< y69_1 ?x27293) (+ (* ?x27335 y69_1) (- y69_1_endpoint2_1 (* ?x27335 ?x19401))) ?x27373)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x19403 (- mean69 ?x6257)))
 (let ((?x27330 (/ (- y69_1_endpoint2_1 y69_1_endpoint3_1) (- ?x19401 ?x19403))))
 (let ((?x27381 (ite (< y69_1 ?x19401) (+ (* ?x27330 y69_1) (- y69_1_endpoint3_1 (* ?x27330 ?x19403))) ?x27377)))
 (let ((?x27385 (ite (> y69_1 (+ mean69 ?x6257)) 0.0 (ite (< y69_1 ?x19403) 0.0 ?x27381))))
 (= likelihoody69_1 ?x27385))))))))))))))))))))))))))
(assert
 (let ((?x27477 (ite (< y69_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y69_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y69_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y69_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x27485 (ite (< y69_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y69_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y69_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y69_2) (/ 3989467804994813.0 100000000000000000.0)) ?x27477))))
 (let ((?x27493 (ite (< y69_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y69_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y69_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y69_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x27485))))
 (= likelihoody69_2 (ite (> y69_2 30.0) 0.0 (ite (< y69_2 (- 30.0)) 0.0 ?x27493)))))))
(assert
 (= likelihoodoutlier70 (ite (= outlier70 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27533 (= y70_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y70_1_endpoint3_1| $x27533)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27530 (= y70_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y70_1_endpoint2_1| $x27530)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19654 (= y70_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y70_1_endpoint1_1| $x19654)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x27555 (= y70_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y70_1_endpoint0_2| $x27555)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x27563 (= y70_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y70_1_endpoint1_2| $x27563)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27569 (= y70_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y70_1_endpoint2_2| $x27569)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27575 (= y70_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y70_1_endpoint3_2| $x27575)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x8809 (+ mean70 ?x6279)))
 (let ((?x27606 (/ (- y70_1_endpoint3_2 y70_1_endpoint2_2) (- (+ mean70 (* ?x6258 3.0)) ?x8809))))
 (let ((?x27612 (ite (< y70_1 (+ mean70 (* ?x6258 3.0))) (+ (* ?x27606 y70_1) (- y70_1_endpoint2_2 (* ?x27606 ?x8809))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x27561 (+ mean70 ?x6297)))
 (let ((?x27601 (/ (- y70_1_endpoint2_2 y70_1_endpoint1_2) (- ?x8809 ?x27561))))
 (let ((?x27616 (ite (< y70_1 ?x8809) (+ (* ?x27601 y70_1) (- y70_1_endpoint1_2 (* ?x27601 ?x27561))) ?x27612)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x27553 (+ mean70 ?x6313)))
 (let ((?x27596 (/ (- y70_1_endpoint1_2 y70_1_endpoint0_2) (- ?x27561 ?x27553))))
 (let ((?x27620 (ite (< y70_1 ?x27561) (+ (* ?x27596 y70_1) (- y70_1_endpoint0_2 (* ?x27596 ?x27553))) ?x27616)))
 (let ((?x27544 (- mean70 ?x6297)))
 (let ((?x27591 (/ (- y70_1_endpoint0_2 y70_1_endpoint1_1) (- ?x27553 ?x27544))))
 (let ((?x27624 (ite (< y70_1 ?x27553) (+ (* ?x27591 y70_1) (- y70_1_endpoint1_1 (* ?x27591 ?x27544))) ?x27620)))
 (let ((?x19652 (- mean70 ?x6279)))
 (let ((?x27586 (/ (- y70_1_endpoint1_1 y70_1_endpoint2_1) (- ?x27544 ?x19652))))
 (let ((?x27628 (ite (< y70_1 ?x27544) (+ (* ?x27586 y70_1) (- y70_1_endpoint2_1 (* ?x27586 ?x19652))) ?x27624)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x19657 (- mean70 ?x6257)))
 (let ((?x27581 (/ (- y70_1_endpoint2_1 y70_1_endpoint3_1) (- ?x19652 ?x19657))))
 (let ((?x27632 (ite (< y70_1 ?x19652) (+ (* ?x27581 y70_1) (- y70_1_endpoint3_1 (* ?x27581 ?x19657))) ?x27628)))
 (let ((?x27636 (ite (> y70_1 (+ mean70 ?x6257)) 0.0 (ite (< y70_1 ?x19657) 0.0 ?x27632))))
 (= likelihoody70_1 ?x27636))))))))))))))))))))))))))
(assert
 (let ((?x27728 (ite (< y70_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y70_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y70_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y70_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x27736 (ite (< y70_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y70_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y70_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y70_2) (/ 3989467804994813.0 100000000000000000.0)) ?x27728))))
 (let ((?x27744 (ite (< y70_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y70_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y70_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y70_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x27736))))
 (= likelihoody70_2 (ite (> y70_2 30.0) 0.0 (ite (< y70_2 (- 30.0)) 0.0 ?x27744)))))))
(assert
 (= likelihoodoutlier71 (ite (= outlier71 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27784 (= y71_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y71_1_endpoint3_1| $x27784)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27781 (= y71_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y71_1_endpoint2_1| $x27781)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x19908 (= y71_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y71_1_endpoint1_1| $x19908)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x27806 (= y71_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y71_1_endpoint0_2| $x27806)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x27814 (= y71_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y71_1_endpoint1_2| $x27814)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x27820 (= y71_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y71_1_endpoint2_2| $x27820)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x27826 (= y71_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y71_1_endpoint3_2| $x27826)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x9202 (+ mean71 ?x6279)))
 (let ((?x27857 (/ (- y71_1_endpoint3_2 y71_1_endpoint2_2) (- (+ mean71 (* ?x6258 3.0)) ?x9202))))
 (let ((?x27863 (ite (< y71_1 (+ mean71 (* ?x6258 3.0))) (+ (* ?x27857 y71_1) (- y71_1_endpoint2_2 (* ?x27857 ?x9202))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x27812 (+ mean71 ?x6297)))
 (let ((?x27852 (/ (- y71_1_endpoint2_2 y71_1_endpoint1_2) (- ?x9202 ?x27812))))
 (let ((?x27867 (ite (< y71_1 ?x9202) (+ (* ?x27852 y71_1) (- y71_1_endpoint1_2 (* ?x27852 ?x27812))) ?x27863)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x27804 (+ mean71 ?x6313)))
 (let ((?x27847 (/ (- y71_1_endpoint1_2 y71_1_endpoint0_2) (- ?x27812 ?x27804))))
 (let ((?x27871 (ite (< y71_1 ?x27812) (+ (* ?x27847 y71_1) (- y71_1_endpoint0_2 (* ?x27847 ?x27804))) ?x27867)))
 (let ((?x27795 (- mean71 ?x6297)))
 (let ((?x27842 (/ (- y71_1_endpoint0_2 y71_1_endpoint1_1) (- ?x27804 ?x27795))))
 (let ((?x27875 (ite (< y71_1 ?x27804) (+ (* ?x27842 y71_1) (- y71_1_endpoint1_1 (* ?x27842 ?x27795))) ?x27871)))
 (let ((?x19906 (- mean71 ?x6279)))
 (let ((?x27837 (/ (- y71_1_endpoint1_1 y71_1_endpoint2_1) (- ?x27795 ?x19906))))
 (let ((?x27879 (ite (< y71_1 ?x27795) (+ (* ?x27837 y71_1) (- y71_1_endpoint2_1 (* ?x27837 ?x19906))) ?x27875)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x19911 (- mean71 ?x6257)))
 (let ((?x27832 (/ (- y71_1_endpoint2_1 y71_1_endpoint3_1) (- ?x19906 ?x19911))))
 (let ((?x27883 (ite (< y71_1 ?x19906) (+ (* ?x27832 y71_1) (- y71_1_endpoint3_1 (* ?x27832 ?x19911))) ?x27879)))
 (let ((?x27887 (ite (> y71_1 (+ mean71 ?x6257)) 0.0 (ite (< y71_1 ?x19911) 0.0 ?x27883))))
 (= likelihoody71_1 ?x27887))))))))))))))))))))))))))
(assert
 (let ((?x27979 (ite (< y71_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y71_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y71_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y71_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x27987 (ite (< y71_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y71_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y71_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y71_2) (/ 3989467804994813.0 100000000000000000.0)) ?x27979))))
 (let ((?x27995 (ite (< y71_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y71_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y71_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y71_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x27987))))
 (= likelihoody71_2 (ite (> y71_2 30.0) 0.0 (ite (< y71_2 (- 30.0)) 0.0 ?x27995)))))))
(assert
 (= likelihoodoutlier72 (ite (= outlier72 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28035 (= y72_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y72_1_endpoint3_1| $x28035)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28032 (= y72_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y72_1_endpoint2_1| $x28032)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9560 (= y72_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y72_1_endpoint1_1| $x9560)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x28057 (= y72_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y72_1_endpoint0_2| $x28057)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x28065 (= y72_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y72_1_endpoint1_2| $x28065)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28071 (= y72_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y72_1_endpoint2_2| $x28071)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28077 (= y72_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y72_1_endpoint3_2| $x28077)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x9581 (+ mean72 ?x6279)))
 (let ((?x28108 (/ (- y72_1_endpoint3_2 y72_1_endpoint2_2) (- (+ mean72 (* ?x6258 3.0)) ?x9581))))
 (let ((?x28114 (ite (< y72_1 (+ mean72 (* ?x6258 3.0))) (+ (* ?x28108 y72_1) (- y72_1_endpoint2_2 (* ?x28108 ?x9581))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x28063 (+ mean72 ?x6297)))
 (let ((?x28103 (/ (- y72_1_endpoint2_2 y72_1_endpoint1_2) (- ?x9581 ?x28063))))
 (let ((?x28118 (ite (< y72_1 ?x9581) (+ (* ?x28103 y72_1) (- y72_1_endpoint1_2 (* ?x28103 ?x28063))) ?x28114)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x28055 (+ mean72 ?x6313)))
 (let ((?x28098 (/ (- y72_1_endpoint1_2 y72_1_endpoint0_2) (- ?x28063 ?x28055))))
 (let ((?x28122 (ite (< y72_1 ?x28063) (+ (* ?x28098 y72_1) (- y72_1_endpoint0_2 (* ?x28098 ?x28055))) ?x28118)))
 (let ((?x28046 (- mean72 ?x6297)))
 (let ((?x28093 (/ (- y72_1_endpoint0_2 y72_1_endpoint1_1) (- ?x28055 ?x28046))))
 (let ((?x28126 (ite (< y72_1 ?x28055) (+ (* ?x28093 y72_1) (- y72_1_endpoint1_1 (* ?x28093 ?x28046))) ?x28122)))
 (let ((?x20160 (- mean72 ?x6279)))
 (let ((?x28088 (/ (- y72_1_endpoint1_1 y72_1_endpoint2_1) (- ?x28046 ?x20160))))
 (let ((?x28130 (ite (< y72_1 ?x28046) (+ (* ?x28088 y72_1) (- y72_1_endpoint2_1 (* ?x28088 ?x20160))) ?x28126)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x20162 (- mean72 ?x6257)))
 (let ((?x28083 (/ (- y72_1_endpoint2_1 y72_1_endpoint3_1) (- ?x20160 ?x20162))))
 (let ((?x28134 (ite (< y72_1 ?x20160) (+ (* ?x28083 y72_1) (- y72_1_endpoint3_1 (* ?x28083 ?x20162))) ?x28130)))
 (let ((?x28138 (ite (> y72_1 (+ mean72 ?x6257)) 0.0 (ite (< y72_1 ?x20162) 0.0 ?x28134))))
 (= likelihoody72_1 ?x28138))))))))))))))))))))))))))
(assert
 (let ((?x28230 (ite (< y72_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y72_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y72_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y72_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x28238 (ite (< y72_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y72_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y72_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y72_2) (/ 3989467804994813.0 100000000000000000.0)) ?x28230))))
 (let ((?x28246 (ite (< y72_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y72_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y72_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y72_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x28238))))
 (= likelihoody72_2 (ite (> y72_2 30.0) 0.0 (ite (< y72_2 (- 30.0)) 0.0 ?x28246)))))))
(assert
 (= likelihoodoutlier73 (ite (= outlier73 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28286 (= y73_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y73_1_endpoint3_1| $x28286)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28283 (= y73_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y73_1_endpoint2_1| $x28283)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x9938 (= y73_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y73_1_endpoint1_1| $x9938)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x28308 (= y73_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y73_1_endpoint0_2| $x28308)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x28316 (= y73_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y73_1_endpoint1_2| $x28316)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28322 (= y73_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y73_1_endpoint2_2| $x28322)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28328 (= y73_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y73_1_endpoint3_2| $x28328)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x9964 (+ mean73 ?x6279)))
 (let ((?x28359 (/ (- y73_1_endpoint3_2 y73_1_endpoint2_2) (- (+ mean73 (* ?x6258 3.0)) ?x9964))))
 (let ((?x28365 (ite (< y73_1 (+ mean73 (* ?x6258 3.0))) (+ (* ?x28359 y73_1) (- y73_1_endpoint2_2 (* ?x28359 ?x9964))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x28314 (+ mean73 ?x6297)))
 (let ((?x28354 (/ (- y73_1_endpoint2_2 y73_1_endpoint1_2) (- ?x9964 ?x28314))))
 (let ((?x28369 (ite (< y73_1 ?x9964) (+ (* ?x28354 y73_1) (- y73_1_endpoint1_2 (* ?x28354 ?x28314))) ?x28365)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x28306 (+ mean73 ?x6313)))
 (let ((?x28349 (/ (- y73_1_endpoint1_2 y73_1_endpoint0_2) (- ?x28314 ?x28306))))
 (let ((?x28373 (ite (< y73_1 ?x28314) (+ (* ?x28349 y73_1) (- y73_1_endpoint0_2 (* ?x28349 ?x28306))) ?x28369)))
 (let ((?x28297 (- mean73 ?x6297)))
 (let ((?x28344 (/ (- y73_1_endpoint0_2 y73_1_endpoint1_1) (- ?x28306 ?x28297))))
 (let ((?x28377 (ite (< y73_1 ?x28306) (+ (* ?x28344 y73_1) (- y73_1_endpoint1_1 (* ?x28344 ?x28297))) ?x28373)))
 (let ((?x20411 (- mean73 ?x6279)))
 (let ((?x28339 (/ (- y73_1_endpoint1_1 y73_1_endpoint2_1) (- ?x28297 ?x20411))))
 (let ((?x28381 (ite (< y73_1 ?x28297) (+ (* ?x28339 y73_1) (- y73_1_endpoint2_1 (* ?x28339 ?x20411))) ?x28377)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x9941 (- mean73 ?x6257)))
 (let ((?x28334 (/ (- y73_1_endpoint2_1 y73_1_endpoint3_1) (- ?x20411 ?x9941))))
 (let ((?x28385 (ite (< y73_1 ?x20411) (+ (* ?x28334 y73_1) (- y73_1_endpoint3_1 (* ?x28334 ?x9941))) ?x28381)))
 (let ((?x28389 (ite (> y73_1 (+ mean73 ?x6257)) 0.0 (ite (< y73_1 ?x9941) 0.0 ?x28385))))
 (= likelihoody73_1 ?x28389))))))))))))))))))))))))))
(assert
 (let ((?x28481 (ite (< y73_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y73_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y73_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y73_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x28489 (ite (< y73_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y73_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y73_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y73_2) (/ 3989467804994813.0 100000000000000000.0)) ?x28481))))
 (let ((?x28497 (ite (< y73_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y73_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y73_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y73_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x28489))))
 (= likelihoody73_2 (ite (> y73_2 30.0) 0.0 (ite (< y73_2 (- 30.0)) 0.0 ?x28497)))))))
(assert
 (= likelihoodoutlier74 (ite (= outlier74 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28537 (= y74_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y74_1_endpoint3_1| $x28537)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28534 (= y74_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y74_1_endpoint2_1| $x28534)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x10332 (= y74_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y74_1_endpoint1_1| $x10332)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x28559 (= y74_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y74_1_endpoint0_2| $x28559)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x28567 (= y74_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y74_1_endpoint1_2| $x28567)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28573 (= y74_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y74_1_endpoint2_2| $x28573)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28579 (= y74_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y74_1_endpoint3_2| $x28579)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x20697 (+ mean74 ?x6279)))
 (let ((?x28610 (/ (- y74_1_endpoint3_2 y74_1_endpoint2_2) (- (+ mean74 (* ?x6258 3.0)) ?x20697))))
 (let ((?x28616 (ite (< y74_1 (+ mean74 (* ?x6258 3.0))) (+ (* ?x28610 y74_1) (- y74_1_endpoint2_2 (* ?x28610 ?x20697))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x28565 (+ mean74 ?x6297)))
 (let ((?x28605 (/ (- y74_1_endpoint2_2 y74_1_endpoint1_2) (- ?x20697 ?x28565))))
 (let ((?x28620 (ite (< y74_1 ?x20697) (+ (* ?x28605 y74_1) (- y74_1_endpoint1_2 (* ?x28605 ?x28565))) ?x28616)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x28557 (+ mean74 ?x6313)))
 (let ((?x28600 (/ (- y74_1_endpoint1_2 y74_1_endpoint0_2) (- ?x28565 ?x28557))))
 (let ((?x28624 (ite (< y74_1 ?x28565) (+ (* ?x28600 y74_1) (- y74_1_endpoint0_2 (* ?x28600 ?x28557))) ?x28620)))
 (let ((?x28548 (- mean74 ?x6297)))
 (let ((?x28595 (/ (- y74_1_endpoint0_2 y74_1_endpoint1_1) (- ?x28557 ?x28548))))
 (let ((?x28628 (ite (< y74_1 ?x28557) (+ (* ?x28595 y74_1) (- y74_1_endpoint1_1 (* ?x28595 ?x28548))) ?x28624)))
 (let ((?x20660 (- mean74 ?x6279)))
 (let ((?x28590 (/ (- y74_1_endpoint1_1 y74_1_endpoint2_1) (- ?x28548 ?x20660))))
 (let ((?x28632 (ite (< y74_1 ?x28548) (+ (* ?x28590 y74_1) (- y74_1_endpoint2_1 (* ?x28590 ?x20660))) ?x28628)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x20662 (- mean74 ?x6257)))
 (let ((?x28585 (/ (- y74_1_endpoint2_1 y74_1_endpoint3_1) (- ?x20660 ?x20662))))
 (let ((?x28636 (ite (< y74_1 ?x20660) (+ (* ?x28585 y74_1) (- y74_1_endpoint3_1 (* ?x28585 ?x20662))) ?x28632)))
 (let ((?x28640 (ite (> y74_1 (+ mean74 ?x6257)) 0.0 (ite (< y74_1 ?x20662) 0.0 ?x28636))))
 (= likelihoody74_1 ?x28640))))))))))))))))))))))))))
(assert
 (let ((?x28733 (ite (< y74_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y74_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y74_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y74_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x28741 (ite (< y74_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y74_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y74_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y74_2) (/ 3989467804994813.0 100000000000000000.0)) ?x28733))))
 (let ((?x28749 (ite (< y74_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y74_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y74_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y74_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x28741))))
 (= likelihoody74_2 (ite (> y74_2 30.0) 0.0 (ite (< y74_2 (- 30.0)) 0.0 ?x28749)))))))
(assert
 (= likelihoodoutlier75 (ite (= outlier75 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28790 (= y75_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y75_1_endpoint3_1| $x28790)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28787 (= y75_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y75_1_endpoint2_1| $x28787)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x20910 (= y75_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y75_1_endpoint1_1| $x20910)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x28812 (= y75_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y75_1_endpoint0_2| $x28812)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x28820 (= y75_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y75_1_endpoint1_2| $x28820)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x28826 (= y75_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y75_1_endpoint2_2| $x28826)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x28832 (= y75_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y75_1_endpoint3_2| $x28832)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x10741 (+ mean75 ?x6279)))
 (let ((?x28863 (/ (- y75_1_endpoint3_2 y75_1_endpoint2_2) (- (+ mean75 (* ?x6258 3.0)) ?x10741))))
 (let ((?x28869 (ite (< y75_1 (+ mean75 (* ?x6258 3.0))) (+ (* ?x28863 y75_1) (- y75_1_endpoint2_2 (* ?x28863 ?x10741))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x28818 (+ mean75 ?x6297)))
 (let ((?x28858 (/ (- y75_1_endpoint2_2 y75_1_endpoint1_2) (- ?x10741 ?x28818))))
 (let ((?x28873 (ite (< y75_1 ?x10741) (+ (* ?x28858 y75_1) (- y75_1_endpoint1_2 (* ?x28858 ?x28818))) ?x28869)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x28810 (+ mean75 ?x6313)))
 (let ((?x28853 (/ (- y75_1_endpoint1_2 y75_1_endpoint0_2) (- ?x28818 ?x28810))))
 (let ((?x28877 (ite (< y75_1 ?x28818) (+ (* ?x28853 y75_1) (- y75_1_endpoint0_2 (* ?x28853 ?x28810))) ?x28873)))
 (let ((?x28801 (- mean75 ?x6297)))
 (let ((?x28848 (/ (- y75_1_endpoint0_2 y75_1_endpoint1_1) (- ?x28810 ?x28801))))
 (let ((?x28881 (ite (< y75_1 ?x28810) (+ (* ?x28848 y75_1) (- y75_1_endpoint1_1 (* ?x28848 ?x28801))) ?x28877)))
 (let ((?x10710 (- mean75 ?x6279)))
 (let ((?x28843 (/ (- y75_1_endpoint1_1 y75_1_endpoint2_1) (- ?x28801 ?x10710))))
 (let ((?x28885 (ite (< y75_1 ?x28801) (+ (* ?x28843 y75_1) (- y75_1_endpoint2_1 (* ?x28843 ?x10710))) ?x28881)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x20913 (- mean75 ?x6257)))
 (let ((?x28838 (/ (- y75_1_endpoint2_1 y75_1_endpoint3_1) (- ?x10710 ?x20913))))
 (let ((?x28889 (ite (< y75_1 ?x10710) (+ (* ?x28838 y75_1) (- y75_1_endpoint3_1 (* ?x28838 ?x20913))) ?x28885)))
 (let ((?x28893 (ite (> y75_1 (+ mean75 ?x6257)) 0.0 (ite (< y75_1 ?x20913) 0.0 ?x28889))))
 (= likelihoody75_1 ?x28893))))))))))))))))))))))))))
(assert
 (let ((?x28986 (ite (< y75_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y75_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y75_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y75_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x28994 (ite (< y75_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y75_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y75_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y75_2) (/ 3989467804994813.0 100000000000000000.0)) ?x28986))))
 (let ((?x29002 (ite (< y75_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y75_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y75_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y75_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x28994))))
 (= likelihoody75_2 (ite (> y75_2 30.0) 0.0 (ite (< y75_2 (- 30.0)) 0.0 ?x29002)))))))
(assert
 (= likelihoodoutlier76 (ite (= outlier76 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29042 (= y76_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y76_1_endpoint3_1| $x29042)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29039 (= y76_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y76_1_endpoint2_1| $x29039)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x11108 (= y76_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y76_1_endpoint1_1| $x11108)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x29064 (= y76_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y76_1_endpoint0_2| $x29064)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x29072 (= y76_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y76_1_endpoint1_2| $x29072)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29078 (= y76_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y76_1_endpoint2_2| $x29078)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29084 (= y76_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y76_1_endpoint3_2| $x29084)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x11119 (+ mean76 ?x6279)))
 (let ((?x29115 (/ (- y76_1_endpoint3_2 y76_1_endpoint2_2) (- (+ mean76 (* ?x6258 3.0)) ?x11119))))
 (let ((?x29121 (ite (< y76_1 (+ mean76 (* ?x6258 3.0))) (+ (* ?x29115 y76_1) (- y76_1_endpoint2_2 (* ?x29115 ?x11119))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x29070 (+ mean76 ?x6297)))
 (let ((?x29110 (/ (- y76_1_endpoint2_2 y76_1_endpoint1_2) (- ?x11119 ?x29070))))
 (let ((?x29125 (ite (< y76_1 ?x11119) (+ (* ?x29110 y76_1) (- y76_1_endpoint1_2 (* ?x29110 ?x29070))) ?x29121)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x29062 (+ mean76 ?x6313)))
 (let ((?x29105 (/ (- y76_1_endpoint1_2 y76_1_endpoint0_2) (- ?x29070 ?x29062))))
 (let ((?x29129 (ite (< y76_1 ?x29070) (+ (* ?x29105 y76_1) (- y76_1_endpoint0_2 (* ?x29105 ?x29062))) ?x29125)))
 (let ((?x29053 (- mean76 ?x6297)))
 (let ((?x29100 (/ (- y76_1_endpoint0_2 y76_1_endpoint1_1) (- ?x29062 ?x29053))))
 (let ((?x29133 (ite (< y76_1 ?x29062) (+ (* ?x29100 y76_1) (- y76_1_endpoint1_1 (* ?x29100 ?x29053))) ?x29129)))
 (let ((?x21161 (- mean76 ?x6279)))
 (let ((?x29095 (/ (- y76_1_endpoint1_1 y76_1_endpoint2_1) (- ?x29053 ?x21161))))
 (let ((?x29137 (ite (< y76_1 ?x29053) (+ (* ?x29095 y76_1) (- y76_1_endpoint2_1 (* ?x29095 ?x21161))) ?x29133)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x21164 (- mean76 ?x6257)))
 (let ((?x29090 (/ (- y76_1_endpoint2_1 y76_1_endpoint3_1) (- ?x21161 ?x21164))))
 (let ((?x29141 (ite (< y76_1 ?x21161) (+ (* ?x29090 y76_1) (- y76_1_endpoint3_1 (* ?x29090 ?x21164))) ?x29137)))
 (let ((?x29145 (ite (> y76_1 (+ mean76 ?x6257)) 0.0 (ite (< y76_1 ?x21164) 0.0 ?x29141))))
 (= likelihoody76_1 ?x29145))))))))))))))))))))))))))
(assert
 (let ((?x29238 (ite (< y76_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y76_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y76_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y76_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x29246 (ite (< y76_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y76_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y76_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y76_2) (/ 3989467804994813.0 100000000000000000.0)) ?x29238))))
 (let ((?x29254 (ite (< y76_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y76_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y76_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y76_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x29246))))
 (= likelihoody76_2 (ite (> y76_2 30.0) 0.0 (ite (< y76_2 (- 30.0)) 0.0 ?x29254)))))))
(assert
 (= likelihoodoutlier77 (ite (= outlier77 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29294 (= y77_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y77_1_endpoint3_1| $x29294)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29291 (= y77_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y77_1_endpoint2_1| $x29291)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x11490 (= y77_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y77_1_endpoint1_1| $x11490)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x29316 (= y77_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y77_1_endpoint0_2| $x29316)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x29324 (= y77_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y77_1_endpoint1_2| $x29324)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29330 (= y77_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y77_1_endpoint2_2| $x29330)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29336 (= y77_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y77_1_endpoint3_2| $x29336)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x11513 (+ mean77 ?x6279)))
 (let ((?x29367 (/ (- y77_1_endpoint3_2 y77_1_endpoint2_2) (- (+ mean77 (* ?x6258 3.0)) ?x11513))))
 (let ((?x29373 (ite (< y77_1 (+ mean77 (* ?x6258 3.0))) (+ (* ?x29367 y77_1) (- y77_1_endpoint2_2 (* ?x29367 ?x11513))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x29322 (+ mean77 ?x6297)))
 (let ((?x29362 (/ (- y77_1_endpoint2_2 y77_1_endpoint1_2) (- ?x11513 ?x29322))))
 (let ((?x29377 (ite (< y77_1 ?x11513) (+ (* ?x29362 y77_1) (- y77_1_endpoint1_2 (* ?x29362 ?x29322))) ?x29373)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x29314 (+ mean77 ?x6313)))
 (let ((?x29357 (/ (- y77_1_endpoint1_2 y77_1_endpoint0_2) (- ?x29322 ?x29314))))
 (let ((?x29381 (ite (< y77_1 ?x29322) (+ (* ?x29357 y77_1) (- y77_1_endpoint0_2 (* ?x29357 ?x29314))) ?x29377)))
 (let ((?x29305 (- mean77 ?x6297)))
 (let ((?x29352 (/ (- y77_1_endpoint0_2 y77_1_endpoint1_1) (- ?x29314 ?x29305))))
 (let ((?x29385 (ite (< y77_1 ?x29314) (+ (* ?x29352 y77_1) (- y77_1_endpoint1_1 (* ?x29352 ?x29305))) ?x29381)))
 (let ((?x21412 (- mean77 ?x6279)))
 (let ((?x29347 (/ (- y77_1_endpoint1_1 y77_1_endpoint2_1) (- ?x29305 ?x21412))))
 (let ((?x29389 (ite (< y77_1 ?x29305) (+ (* ?x29347 y77_1) (- y77_1_endpoint2_1 (* ?x29347 ?x21412))) ?x29385)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x21415 (- mean77 ?x6257)))
 (let ((?x29342 (/ (- y77_1_endpoint2_1 y77_1_endpoint3_1) (- ?x21412 ?x21415))))
 (let ((?x29393 (ite (< y77_1 ?x21412) (+ (* ?x29342 y77_1) (- y77_1_endpoint3_1 (* ?x29342 ?x21415))) ?x29389)))
 (let ((?x29397 (ite (> y77_1 (+ mean77 ?x6257)) 0.0 (ite (< y77_1 ?x21415) 0.0 ?x29393))))
 (= likelihoody77_1 ?x29397))))))))))))))))))))))))))
(assert
 (let ((?x29491 (ite (< y77_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y77_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y77_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y77_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x29499 (ite (< y77_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y77_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y77_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y77_2) (/ 3989467804994813.0 100000000000000000.0)) ?x29491))))
 (let ((?x29507 (ite (< y77_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y77_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y77_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y77_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x29499))))
 (= likelihoody77_2 (ite (> y77_2 30.0) 0.0 (ite (< y77_2 (- 30.0)) 0.0 ?x29507)))))))
(assert
 (= likelihoodoutlier78 (ite (= outlier78 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29547 (= y78_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y78_1_endpoint3_1| $x29547)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29544 (= y78_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y78_1_endpoint2_1| $x29544)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x11883 (= y78_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y78_1_endpoint1_1| $x11883)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x29569 (= y78_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y78_1_endpoint0_2| $x29569)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x29577 (= y78_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y78_1_endpoint1_2| $x29577)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29583 (= y78_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y78_1_endpoint2_2| $x29583)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29589 (= y78_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y78_1_endpoint3_2| $x29589)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x11900 (+ mean78 ?x6279)))
 (let ((?x29620 (/ (- y78_1_endpoint3_2 y78_1_endpoint2_2) (- (+ mean78 (* ?x6258 3.0)) ?x11900))))
 (let ((?x29626 (ite (< y78_1 (+ mean78 (* ?x6258 3.0))) (+ (* ?x29620 y78_1) (- y78_1_endpoint2_2 (* ?x29620 ?x11900))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x29575 (+ mean78 ?x6297)))
 (let ((?x29615 (/ (- y78_1_endpoint2_2 y78_1_endpoint1_2) (- ?x11900 ?x29575))))
 (let ((?x29630 (ite (< y78_1 ?x11900) (+ (* ?x29615 y78_1) (- y78_1_endpoint1_2 (* ?x29615 ?x29575))) ?x29626)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x29567 (+ mean78 ?x6313)))
 (let ((?x29610 (/ (- y78_1_endpoint1_2 y78_1_endpoint0_2) (- ?x29575 ?x29567))))
 (let ((?x29634 (ite (< y78_1 ?x29575) (+ (* ?x29610 y78_1) (- y78_1_endpoint0_2 (* ?x29610 ?x29567))) ?x29630)))
 (let ((?x29558 (- mean78 ?x6297)))
 (let ((?x29605 (/ (- y78_1_endpoint0_2 y78_1_endpoint1_1) (- ?x29567 ?x29558))))
 (let ((?x29638 (ite (< y78_1 ?x29567) (+ (* ?x29605 y78_1) (- y78_1_endpoint1_1 (* ?x29605 ?x29558))) ?x29634)))
 (let ((?x21662 (- mean78 ?x6279)))
 (let ((?x29600 (/ (- y78_1_endpoint1_1 y78_1_endpoint2_1) (- ?x29558 ?x21662))))
 (let ((?x29642 (ite (< y78_1 ?x29558) (+ (* ?x29600 y78_1) (- y78_1_endpoint2_1 (* ?x29600 ?x21662))) ?x29638)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x21665 (- mean78 ?x6257)))
 (let ((?x29595 (/ (- y78_1_endpoint2_1 y78_1_endpoint3_1) (- ?x21662 ?x21665))))
 (let ((?x29646 (ite (< y78_1 ?x21662) (+ (* ?x29595 y78_1) (- y78_1_endpoint3_1 (* ?x29595 ?x21665))) ?x29642)))
 (let ((?x29650 (ite (> y78_1 (+ mean78 ?x6257)) 0.0 (ite (< y78_1 ?x21665) 0.0 ?x29646))))
 (= likelihoody78_1 ?x29650))))))))))))))))))))))))))
(assert
 (let ((?x29742 (ite (< y78_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y78_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y78_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y78_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x29750 (ite (< y78_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y78_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y78_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y78_2) (/ 3989467804994813.0 100000000000000000.0)) ?x29742))))
 (let ((?x29758 (ite (< y78_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y78_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y78_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y78_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x29750))))
 (= likelihoody78_2 (ite (> y78_2 30.0) 0.0 (ite (< y78_2 (- 30.0)) 0.0 ?x29758)))))))
(assert
 (= likelihoodoutlier79 (ite (= outlier79 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29798 (= y79_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y79_1_endpoint3_1| $x29798)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29795 (= y79_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y79_1_endpoint2_1| $x29795)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x12262 (= y79_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y79_1_endpoint1_1| $x12262)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x29820 (= y79_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y79_1_endpoint0_2| $x29820)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x29828 (= y79_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y79_1_endpoint1_2| $x29828)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x29834 (= y79_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y79_1_endpoint2_2| $x29834)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x29840 (= y79_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y79_1_endpoint3_2| $x29840)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x21949 (+ mean79 ?x6279)))
 (let ((?x29871 (/ (- y79_1_endpoint3_2 y79_1_endpoint2_2) (- (+ mean79 (* ?x6258 3.0)) ?x21949))))
 (let ((?x29877 (ite (< y79_1 (+ mean79 (* ?x6258 3.0))) (+ (* ?x29871 y79_1) (- y79_1_endpoint2_2 (* ?x29871 ?x21949))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x29826 (+ mean79 ?x6297)))
 (let ((?x29866 (/ (- y79_1_endpoint2_2 y79_1_endpoint1_2) (- ?x21949 ?x29826))))
 (let ((?x29881 (ite (< y79_1 ?x21949) (+ (* ?x29866 y79_1) (- y79_1_endpoint1_2 (* ?x29866 ?x29826))) ?x29877)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x29818 (+ mean79 ?x6313)))
 (let ((?x29861 (/ (- y79_1_endpoint1_2 y79_1_endpoint0_2) (- ?x29826 ?x29818))))
 (let ((?x29885 (ite (< y79_1 ?x29826) (+ (* ?x29861 y79_1) (- y79_1_endpoint0_2 (* ?x29861 ?x29818))) ?x29881)))
 (let ((?x29809 (- mean79 ?x6297)))
 (let ((?x29856 (/ (- y79_1_endpoint0_2 y79_1_endpoint1_1) (- ?x29818 ?x29809))))
 (let ((?x29889 (ite (< y79_1 ?x29818) (+ (* ?x29856 y79_1) (- y79_1_endpoint1_1 (* ?x29856 ?x29809))) ?x29885)))
 (let ((?x21914 (- mean79 ?x6279)))
 (let ((?x29851 (/ (- y79_1_endpoint1_1 y79_1_endpoint2_1) (- ?x29809 ?x21914))))
 (let ((?x29893 (ite (< y79_1 ?x29809) (+ (* ?x29851 y79_1) (- y79_1_endpoint2_1 (* ?x29851 ?x21914))) ?x29889)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x21916 (- mean79 ?x6257)))
 (let ((?x29846 (/ (- y79_1_endpoint2_1 y79_1_endpoint3_1) (- ?x21914 ?x21916))))
 (let ((?x29897 (ite (< y79_1 ?x21914) (+ (* ?x29846 y79_1) (- y79_1_endpoint3_1 (* ?x29846 ?x21916))) ?x29893)))
 (let ((?x29901 (ite (> y79_1 (+ mean79 ?x6257)) 0.0 (ite (< y79_1 ?x21916) 0.0 ?x29897))))
 (= likelihoody79_1 ?x29901))))))))))))))))))))))))))
(assert
 (let ((?x29994 (ite (< y79_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y79_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y79_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y79_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x30002 (ite (< y79_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y79_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y79_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y79_2) (/ 3989467804994813.0 100000000000000000.0)) ?x29994))))
 (let ((?x30010 (ite (< y79_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y79_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y79_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y79_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x30002))))
 (= likelihoody79_2 (ite (> y79_2 30.0) 0.0 (ite (< y79_2 (- 30.0)) 0.0 ?x30010)))))))
(assert
 (= likelihoodoutlier80 (ite (= outlier80 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30050 (= y80_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y80_1_endpoint3_1| $x30050)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30047 (= y80_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y80_1_endpoint2_1| $x30047)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22166 (= y80_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y80_1_endpoint1_1| $x22166)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x30072 (= y80_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y80_1_endpoint0_2| $x30072)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x30080 (= y80_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y80_1_endpoint1_2| $x30080)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30086 (= y80_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y80_1_endpoint2_2| $x30086)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30092 (= y80_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y80_1_endpoint3_2| $x30092)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x22201 (+ mean80 ?x6279)))
 (let ((?x30123 (/ (- y80_1_endpoint3_2 y80_1_endpoint2_2) (- (+ mean80 (* ?x6258 3.0)) ?x22201))))
 (let ((?x30129 (ite (< y80_1 (+ mean80 (* ?x6258 3.0))) (+ (* ?x30123 y80_1) (- y80_1_endpoint2_2 (* ?x30123 ?x22201))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x30078 (+ mean80 ?x6297)))
 (let ((?x30118 (/ (- y80_1_endpoint2_2 y80_1_endpoint1_2) (- ?x22201 ?x30078))))
 (let ((?x30133 (ite (< y80_1 ?x22201) (+ (* ?x30118 y80_1) (- y80_1_endpoint1_2 (* ?x30118 ?x30078))) ?x30129)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x30070 (+ mean80 ?x6313)))
 (let ((?x30113 (/ (- y80_1_endpoint1_2 y80_1_endpoint0_2) (- ?x30078 ?x30070))))
 (let ((?x30137 (ite (< y80_1 ?x30078) (+ (* ?x30113 y80_1) (- y80_1_endpoint0_2 (* ?x30113 ?x30070))) ?x30133)))
 (let ((?x30061 (- mean80 ?x6297)))
 (let ((?x30108 (/ (- y80_1_endpoint0_2 y80_1_endpoint1_1) (- ?x30070 ?x30061))))
 (let ((?x30141 (ite (< y80_1 ?x30070) (+ (* ?x30108 y80_1) (- y80_1_endpoint1_1 (* ?x30108 ?x30061))) ?x30137)))
 (let ((?x22164 (- mean80 ?x6279)))
 (let ((?x30103 (/ (- y80_1_endpoint1_1 y80_1_endpoint2_1) (- ?x30061 ?x22164))))
 (let ((?x30145 (ite (< y80_1 ?x30061) (+ (* ?x30103 y80_1) (- y80_1_endpoint2_1 (* ?x30103 ?x22164))) ?x30141)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x22169 (- mean80 ?x6257)))
 (let ((?x30098 (/ (- y80_1_endpoint2_1 y80_1_endpoint3_1) (- ?x22164 ?x22169))))
 (let ((?x30149 (ite (< y80_1 ?x22164) (+ (* ?x30098 y80_1) (- y80_1_endpoint3_1 (* ?x30098 ?x22169))) ?x30145)))
 (let ((?x30153 (ite (> y80_1 (+ mean80 ?x6257)) 0.0 (ite (< y80_1 ?x22169) 0.0 ?x30149))))
 (= likelihoody80_1 ?x30153))))))))))))))))))))))))))
(assert
 (let ((?x30245 (ite (< y80_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y80_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y80_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y80_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x30253 (ite (< y80_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y80_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y80_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y80_2) (/ 3989467804994813.0 100000000000000000.0)) ?x30245))))
 (let ((?x30261 (ite (< y80_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y80_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y80_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y80_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x30253))))
 (= likelihoody80_2 (ite (> y80_2 30.0) 0.0 (ite (< y80_2 (- 30.0)) 0.0 ?x30261)))))))
(assert
 (= likelihoodoutlier81 (ite (= outlier81 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30301 (= y81_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y81_1_endpoint3_1| $x30301)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30298 (= y81_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y81_1_endpoint2_1| $x30298)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x22420 (= y81_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y81_1_endpoint1_1| $x22420)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x30323 (= y81_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y81_1_endpoint0_2| $x30323)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x30331 (= y81_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y81_1_endpoint1_2| $x30331)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30337 (= y81_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y81_1_endpoint2_2| $x30337)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30343 (= y81_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y81_1_endpoint3_2| $x30343)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x13053 (+ mean81 ?x6279)))
 (let ((?x30374 (/ (- y81_1_endpoint3_2 y81_1_endpoint2_2) (- (+ mean81 (* ?x6258 3.0)) ?x13053))))
 (let ((?x30380 (ite (< y81_1 (+ mean81 (* ?x6258 3.0))) (+ (* ?x30374 y81_1) (- y81_1_endpoint2_2 (* ?x30374 ?x13053))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x30329 (+ mean81 ?x6297)))
 (let ((?x30369 (/ (- y81_1_endpoint2_2 y81_1_endpoint1_2) (- ?x13053 ?x30329))))
 (let ((?x30384 (ite (< y81_1 ?x13053) (+ (* ?x30369 y81_1) (- y81_1_endpoint1_2 (* ?x30369 ?x30329))) ?x30380)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x30321 (+ mean81 ?x6313)))
 (let ((?x30364 (/ (- y81_1_endpoint1_2 y81_1_endpoint0_2) (- ?x30329 ?x30321))))
 (let ((?x30388 (ite (< y81_1 ?x30329) (+ (* ?x30364 y81_1) (- y81_1_endpoint0_2 (* ?x30364 ?x30321))) ?x30384)))
 (let ((?x30312 (- mean81 ?x6297)))
 (let ((?x30359 (/ (- y81_1_endpoint0_2 y81_1_endpoint1_1) (- ?x30321 ?x30312))))
 (let ((?x30392 (ite (< y81_1 ?x30321) (+ (* ?x30359 y81_1) (- y81_1_endpoint1_1 (* ?x30359 ?x30312))) ?x30388)))
 (let ((?x22418 (- mean81 ?x6279)))
 (let ((?x30354 (/ (- y81_1_endpoint1_1 y81_1_endpoint2_1) (- ?x30312 ?x22418))))
 (let ((?x30396 (ite (< y81_1 ?x30312) (+ (* ?x30354 y81_1) (- y81_1_endpoint2_1 (* ?x30354 ?x22418))) ?x30392)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x22423 (- mean81 ?x6257)))
 (let ((?x30349 (/ (- y81_1_endpoint2_1 y81_1_endpoint3_1) (- ?x22418 ?x22423))))
 (let ((?x30400 (ite (< y81_1 ?x22418) (+ (* ?x30349 y81_1) (- y81_1_endpoint3_1 (* ?x30349 ?x22423))) ?x30396)))
 (let ((?x30404 (ite (> y81_1 (+ mean81 ?x6257)) 0.0 (ite (< y81_1 ?x22423) 0.0 ?x30400))))
 (= likelihoody81_1 ?x30404))))))))))))))))))))))))))
(assert
 (let ((?x30496 (ite (< y81_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y81_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y81_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y81_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x30504 (ite (< y81_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y81_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y81_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y81_2) (/ 3989467804994813.0 100000000000000000.0)) ?x30496))))
 (let ((?x30512 (ite (< y81_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y81_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y81_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y81_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x30504))))
 (= likelihoody81_2 (ite (> y81_2 30.0) 0.0 (ite (< y81_2 (- 30.0)) 0.0 ?x30512)))))))
(assert
 (= likelihoodoutlier82 (ite (= outlier82 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30552 (= y82_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y82_1_endpoint3_1| $x30552)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30549 (= y82_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y82_1_endpoint2_1| $x30549)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x13422 (= y82_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y82_1_endpoint1_1| $x13422)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x30574 (= y82_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y82_1_endpoint0_2| $x30574)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x30582 (= y82_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y82_1_endpoint1_2| $x30582)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30588 (= y82_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y82_1_endpoint2_2| $x30588)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30594 (= y82_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y82_1_endpoint3_2| $x30594)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x13444 (+ mean82 ?x6279)))
 (let ((?x30625 (/ (- y82_1_endpoint3_2 y82_1_endpoint2_2) (- (+ mean82 (* ?x6258 3.0)) ?x13444))))
 (let ((?x30631 (ite (< y82_1 (+ mean82 (* ?x6258 3.0))) (+ (* ?x30625 y82_1) (- y82_1_endpoint2_2 (* ?x30625 ?x13444))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x30580 (+ mean82 ?x6297)))
 (let ((?x30620 (/ (- y82_1_endpoint2_2 y82_1_endpoint1_2) (- ?x13444 ?x30580))))
 (let ((?x30635 (ite (< y82_1 ?x13444) (+ (* ?x30620 y82_1) (- y82_1_endpoint1_2 (* ?x30620 ?x30580))) ?x30631)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x30572 (+ mean82 ?x6313)))
 (let ((?x30615 (/ (- y82_1_endpoint1_2 y82_1_endpoint0_2) (- ?x30580 ?x30572))))
 (let ((?x30639 (ite (< y82_1 ?x30580) (+ (* ?x30615 y82_1) (- y82_1_endpoint0_2 (* ?x30615 ?x30572))) ?x30635)))
 (let ((?x30563 (- mean82 ?x6297)))
 (let ((?x30610 (/ (- y82_1_endpoint0_2 y82_1_endpoint1_1) (- ?x30572 ?x30563))))
 (let ((?x30643 (ite (< y82_1 ?x30572) (+ (* ?x30610 y82_1) (- y82_1_endpoint1_1 (* ?x30610 ?x30563))) ?x30639)))
 (let ((?x22672 (- mean82 ?x6279)))
 (let ((?x30605 (/ (- y82_1_endpoint1_1 y82_1_endpoint2_1) (- ?x30563 ?x22672))))
 (let ((?x30647 (ite (< y82_1 ?x30563) (+ (* ?x30605 y82_1) (- y82_1_endpoint2_1 (* ?x30605 ?x22672))) ?x30643)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x22674 (- mean82 ?x6257)))
 (let ((?x30600 (/ (- y82_1_endpoint2_1 y82_1_endpoint3_1) (- ?x22672 ?x22674))))
 (let ((?x30651 (ite (< y82_1 ?x22672) (+ (* ?x30600 y82_1) (- y82_1_endpoint3_1 (* ?x30600 ?x22674))) ?x30647)))
 (let ((?x30655 (ite (> y82_1 (+ mean82 ?x6257)) 0.0 (ite (< y82_1 ?x22674) 0.0 ?x30651))))
 (= likelihoody82_1 ?x30655))))))))))))))))))))))))))
(assert
 (let ((?x30747 (ite (< y82_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y82_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y82_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y82_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x30755 (ite (< y82_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y82_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y82_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y82_2) (/ 3989467804994813.0 100000000000000000.0)) ?x30747))))
 (let ((?x30763 (ite (< y82_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y82_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y82_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y82_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x30755))))
 (= likelihoody82_2 (ite (> y82_2 30.0) 0.0 (ite (< y82_2 (- 30.0)) 0.0 ?x30763)))))))
(assert
 (= likelihoodoutlier83 (ite (= outlier83 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30803 (= y83_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y83_1_endpoint3_1| $x30803)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30800 (= y83_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y83_1_endpoint2_1| $x30800)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x13800 (= y83_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y83_1_endpoint1_1| $x13800)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x30825 (= y83_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y83_1_endpoint0_2| $x30825)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x30833 (= y83_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y83_1_endpoint1_2| $x30833)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x30839 (= y83_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y83_1_endpoint2_2| $x30839)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x30845 (= y83_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y83_1_endpoint3_2| $x30845)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x13831 (+ mean83 ?x6279)))
 (let ((?x30876 (/ (- y83_1_endpoint3_2 y83_1_endpoint2_2) (- (+ mean83 (* ?x6258 3.0)) ?x13831))))
 (let ((?x30882 (ite (< y83_1 (+ mean83 (* ?x6258 3.0))) (+ (* ?x30876 y83_1) (- y83_1_endpoint2_2 (* ?x30876 ?x13831))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x30831 (+ mean83 ?x6297)))
 (let ((?x30871 (/ (- y83_1_endpoint2_2 y83_1_endpoint1_2) (- ?x13831 ?x30831))))
 (let ((?x30886 (ite (< y83_1 ?x13831) (+ (* ?x30871 y83_1) (- y83_1_endpoint1_2 (* ?x30871 ?x30831))) ?x30882)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x30823 (+ mean83 ?x6313)))
 (let ((?x30866 (/ (- y83_1_endpoint1_2 y83_1_endpoint0_2) (- ?x30831 ?x30823))))
 (let ((?x30890 (ite (< y83_1 ?x30831) (+ (* ?x30866 y83_1) (- y83_1_endpoint0_2 (* ?x30866 ?x30823))) ?x30886)))
 (let ((?x30814 (- mean83 ?x6297)))
 (let ((?x30861 (/ (- y83_1_endpoint0_2 y83_1_endpoint1_1) (- ?x30823 ?x30814))))
 (let ((?x30894 (ite (< y83_1 ?x30823) (+ (* ?x30861 y83_1) (- y83_1_endpoint1_1 (* ?x30861 ?x30814))) ?x30890)))
 (let ((?x22923 (- mean83 ?x6279)))
 (let ((?x30856 (/ (- y83_1_endpoint1_1 y83_1_endpoint2_1) (- ?x30814 ?x22923))))
 (let ((?x30898 (ite (< y83_1 ?x30814) (+ (* ?x30856 y83_1) (- y83_1_endpoint2_1 (* ?x30856 ?x22923))) ?x30894)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x13803 (- mean83 ?x6257)))
 (let ((?x30851 (/ (- y83_1_endpoint2_1 y83_1_endpoint3_1) (- ?x22923 ?x13803))))
 (let ((?x30902 (ite (< y83_1 ?x22923) (+ (* ?x30851 y83_1) (- y83_1_endpoint3_1 (* ?x30851 ?x13803))) ?x30898)))
 (let ((?x30906 (ite (> y83_1 (+ mean83 ?x6257)) 0.0 (ite (< y83_1 ?x13803) 0.0 ?x30902))))
 (= likelihoody83_1 ?x30906))))))))))))))))))))))))))
(assert
 (let ((?x30998 (ite (< y83_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y83_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y83_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y83_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x31006 (ite (< y83_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y83_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y83_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y83_2) (/ 3989467804994813.0 100000000000000000.0)) ?x30998))))
 (let ((?x31014 (ite (< y83_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y83_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y83_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y83_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x31006))))
 (= likelihoody83_2 (ite (> y83_2 30.0) 0.0 (ite (< y83_2 (- 30.0)) 0.0 ?x31014)))))))
(assert
 (= likelihoodoutlier84 (ite (= outlier84 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31054 (= y84_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y84_1_endpoint3_1| $x31054)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31051 (= y84_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y84_1_endpoint2_1| $x31051)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x14194 (= y84_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y84_1_endpoint1_1| $x14194)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x31076 (= y84_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y84_1_endpoint0_2| $x31076)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x31084 (= y84_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y84_1_endpoint1_2| $x31084)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31090 (= y84_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y84_1_endpoint2_2| $x31090)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31096 (= y84_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y84_1_endpoint3_2| $x31096)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x23212 (+ mean84 ?x6279)))
 (let ((?x31127 (/ (- y84_1_endpoint3_2 y84_1_endpoint2_2) (- (+ mean84 (* ?x6258 3.0)) ?x23212))))
 (let ((?x31133 (ite (< y84_1 (+ mean84 (* ?x6258 3.0))) (+ (* ?x31127 y84_1) (- y84_1_endpoint2_2 (* ?x31127 ?x23212))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x31082 (+ mean84 ?x6297)))
 (let ((?x31122 (/ (- y84_1_endpoint2_2 y84_1_endpoint1_2) (- ?x23212 ?x31082))))
 (let ((?x31137 (ite (< y84_1 ?x23212) (+ (* ?x31122 y84_1) (- y84_1_endpoint1_2 (* ?x31122 ?x31082))) ?x31133)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x31074 (+ mean84 ?x6313)))
 (let ((?x31117 (/ (- y84_1_endpoint1_2 y84_1_endpoint0_2) (- ?x31082 ?x31074))))
 (let ((?x31141 (ite (< y84_1 ?x31082) (+ (* ?x31117 y84_1) (- y84_1_endpoint0_2 (* ?x31117 ?x31074))) ?x31137)))
 (let ((?x31065 (- mean84 ?x6297)))
 (let ((?x31112 (/ (- y84_1_endpoint0_2 y84_1_endpoint1_1) (- ?x31074 ?x31065))))
 (let ((?x31145 (ite (< y84_1 ?x31074) (+ (* ?x31112 y84_1) (- y84_1_endpoint1_1 (* ?x31112 ?x31065))) ?x31141)))
 (let ((?x23172 (- mean84 ?x6279)))
 (let ((?x31107 (/ (- y84_1_endpoint1_1 y84_1_endpoint2_1) (- ?x31065 ?x23172))))
 (let ((?x31149 (ite (< y84_1 ?x31065) (+ (* ?x31107 y84_1) (- y84_1_endpoint2_1 (* ?x31107 ?x23172))) ?x31145)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x23174 (- mean84 ?x6257)))
 (let ((?x31102 (/ (- y84_1_endpoint2_1 y84_1_endpoint3_1) (- ?x23172 ?x23174))))
 (let ((?x31153 (ite (< y84_1 ?x23172) (+ (* ?x31102 y84_1) (- y84_1_endpoint3_1 (* ?x31102 ?x23174))) ?x31149)))
 (let ((?x31157 (ite (> y84_1 (+ mean84 ?x6257)) 0.0 (ite (< y84_1 ?x23174) 0.0 ?x31153))))
 (= likelihoody84_1 ?x31157))))))))))))))))))))))))))
(assert
 (let ((?x31249 (ite (< y84_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y84_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y84_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y84_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x31257 (ite (< y84_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y84_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y84_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y84_2) (/ 3989467804994813.0 100000000000000000.0)) ?x31249))))
 (let ((?x31265 (ite (< y84_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y84_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y84_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y84_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x31257))))
 (= likelihoody84_2 (ite (> y84_2 30.0) 0.0 (ite (< y84_2 (- 30.0)) 0.0 ?x31265)))))))
(assert
 (= likelihoodoutlier85 (ite (= outlier85 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31305 (= y85_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y85_1_endpoint3_1| $x31305)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31302 (= y85_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y85_1_endpoint2_1| $x31302)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23424 (= y85_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y85_1_endpoint1_1| $x23424)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x31327 (= y85_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y85_1_endpoint0_2| $x31327)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x31335 (= y85_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y85_1_endpoint1_2| $x31335)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31341 (= y85_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y85_1_endpoint2_2| $x31341)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31347 (= y85_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y85_1_endpoint3_2| $x31347)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x23465 (+ mean85 ?x6279)))
 (let ((?x31378 (/ (- y85_1_endpoint3_2 y85_1_endpoint2_2) (- (+ mean85 (* ?x6258 3.0)) ?x23465))))
 (let ((?x31384 (ite (< y85_1 (+ mean85 (* ?x6258 3.0))) (+ (* ?x31378 y85_1) (- y85_1_endpoint2_2 (* ?x31378 ?x23465))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x31333 (+ mean85 ?x6297)))
 (let ((?x31373 (/ (- y85_1_endpoint2_2 y85_1_endpoint1_2) (- ?x23465 ?x31333))))
 (let ((?x31388 (ite (< y85_1 ?x23465) (+ (* ?x31373 y85_1) (- y85_1_endpoint1_2 (* ?x31373 ?x31333))) ?x31384)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x31325 (+ mean85 ?x6313)))
 (let ((?x31368 (/ (- y85_1_endpoint1_2 y85_1_endpoint0_2) (- ?x31333 ?x31325))))
 (let ((?x31392 (ite (< y85_1 ?x31333) (+ (* ?x31368 y85_1) (- y85_1_endpoint0_2 (* ?x31368 ?x31325))) ?x31388)))
 (let ((?x31316 (- mean85 ?x6297)))
 (let ((?x31363 (/ (- y85_1_endpoint0_2 y85_1_endpoint1_1) (- ?x31325 ?x31316))))
 (let ((?x31396 (ite (< y85_1 ?x31325) (+ (* ?x31363 y85_1) (- y85_1_endpoint1_1 (* ?x31363 ?x31316))) ?x31392)))
 (let ((?x14572 (- mean85 ?x6279)))
 (let ((?x31358 (/ (- y85_1_endpoint1_1 y85_1_endpoint2_1) (- ?x31316 ?x14572))))
 (let ((?x31400 (ite (< y85_1 ?x31316) (+ (* ?x31358 y85_1) (- y85_1_endpoint2_1 (* ?x31358 ?x14572))) ?x31396)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x23427 (- mean85 ?x6257)))
 (let ((?x31353 (/ (- y85_1_endpoint2_1 y85_1_endpoint3_1) (- ?x14572 ?x23427))))
 (let ((?x31404 (ite (< y85_1 ?x14572) (+ (* ?x31353 y85_1) (- y85_1_endpoint3_1 (* ?x31353 ?x23427))) ?x31400)))
 (let ((?x31408 (ite (> y85_1 (+ mean85 ?x6257)) 0.0 (ite (< y85_1 ?x23427) 0.0 ?x31404))))
 (= likelihoody85_1 ?x31408))))))))))))))))))))))))))
(assert
 (let ((?x31500 (ite (< y85_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y85_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y85_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y85_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x31508 (ite (< y85_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y85_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y85_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y85_2) (/ 3989467804994813.0 100000000000000000.0)) ?x31500))))
 (let ((?x31516 (ite (< y85_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y85_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y85_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y85_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x31508))))
 (= likelihoody85_2 (ite (> y85_2 30.0) 0.0 (ite (< y85_2 (- 30.0)) 0.0 ?x31516)))))))
(assert
 (= likelihoodoutlier86 (ite (= outlier86 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31557 (= y86_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y86_1_endpoint3_1| $x31557)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31554 (= y86_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y86_1_endpoint2_1| $x31554)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23677 (= y86_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y86_1_endpoint1_1| $x23677)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x31579 (= y86_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y86_1_endpoint0_2| $x31579)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x31587 (= y86_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y86_1_endpoint1_2| $x31587)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31593 (= y86_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y86_1_endpoint2_2| $x31593)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31599 (= y86_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y86_1_endpoint3_2| $x31599)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x14980 (+ mean86 ?x6279)))
 (let ((?x31630 (/ (- y86_1_endpoint3_2 y86_1_endpoint2_2) (- (+ mean86 (* ?x6258 3.0)) ?x14980))))
 (let ((?x31636 (ite (< y86_1 (+ mean86 (* ?x6258 3.0))) (+ (* ?x31630 y86_1) (- y86_1_endpoint2_2 (* ?x31630 ?x14980))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x31585 (+ mean86 ?x6297)))
 (let ((?x31625 (/ (- y86_1_endpoint2_2 y86_1_endpoint1_2) (- ?x14980 ?x31585))))
 (let ((?x31640 (ite (< y86_1 ?x14980) (+ (* ?x31625 y86_1) (- y86_1_endpoint1_2 (* ?x31625 ?x31585))) ?x31636)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x31577 (+ mean86 ?x6313)))
 (let ((?x31620 (/ (- y86_1_endpoint1_2 y86_1_endpoint0_2) (- ?x31585 ?x31577))))
 (let ((?x31644 (ite (< y86_1 ?x31585) (+ (* ?x31620 y86_1) (- y86_1_endpoint0_2 (* ?x31620 ?x31577))) ?x31640)))
 (let ((?x31568 (- mean86 ?x6297)))
 (let ((?x31615 (/ (- y86_1_endpoint0_2 y86_1_endpoint1_1) (- ?x31577 ?x31568))))
 (let ((?x31648 (ite (< y86_1 ?x31577) (+ (* ?x31615 y86_1) (- y86_1_endpoint1_1 (* ?x31615 ?x31568))) ?x31644)))
 (let ((?x23675 (- mean86 ?x6279)))
 (let ((?x31610 (/ (- y86_1_endpoint1_1 y86_1_endpoint2_1) (- ?x31568 ?x23675))))
 (let ((?x31652 (ite (< y86_1 ?x31568) (+ (* ?x31610 y86_1) (- y86_1_endpoint2_1 (* ?x31610 ?x23675))) ?x31648)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x23680 (- mean86 ?x6257)))
 (let ((?x31605 (/ (- y86_1_endpoint2_1 y86_1_endpoint3_1) (- ?x23675 ?x23680))))
 (let ((?x31656 (ite (< y86_1 ?x23675) (+ (* ?x31605 y86_1) (- y86_1_endpoint3_1 (* ?x31605 ?x23680))) ?x31652)))
 (let ((?x31660 (ite (> y86_1 (+ mean86 ?x6257)) 0.0 (ite (< y86_1 ?x23680) 0.0 ?x31656))))
 (= likelihoody86_1 ?x31660))))))))))))))))))))))))))
(assert
 (let ((?x31757 (ite (< y86_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y86_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y86_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y86_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x31765 (ite (< y86_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y86_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y86_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y86_2) (/ 3989467804994813.0 100000000000000000.0)) ?x31757))))
 (let ((?x31773 (ite (< y86_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y86_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y86_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y86_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x31765))))
 (= likelihoody86_2 (ite (> y86_2 30.0) 0.0 (ite (< y86_2 (- 30.0)) 0.0 ?x31773)))))))
(assert
 (= likelihoodoutlier87 (ite (= outlier87 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31813 (= y87_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y87_1_endpoint3_1| $x31813)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31810 (= y87_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y87_1_endpoint2_1| $x31810)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x23930 (= y87_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y87_1_endpoint1_1| $x23930)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x31835 (= y87_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y87_1_endpoint0_2| $x31835)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x31843 (= y87_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y87_1_endpoint1_2| $x31843)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x31849 (= y87_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y87_1_endpoint2_2| $x31849)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x31855 (= y87_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y87_1_endpoint3_2| $x31855)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x15324 (+ mean87 ?x6279)))
 (let ((?x31886 (/ (- y87_1_endpoint3_2 y87_1_endpoint2_2) (- (+ mean87 (* ?x6258 3.0)) ?x15324))))
 (let ((?x31892 (ite (< y87_1 (+ mean87 (* ?x6258 3.0))) (+ (* ?x31886 y87_1) (- y87_1_endpoint2_2 (* ?x31886 ?x15324))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x31841 (+ mean87 ?x6297)))
 (let ((?x31881 (/ (- y87_1_endpoint2_2 y87_1_endpoint1_2) (- ?x15324 ?x31841))))
 (let ((?x31896 (ite (< y87_1 ?x15324) (+ (* ?x31881 y87_1) (- y87_1_endpoint1_2 (* ?x31881 ?x31841))) ?x31892)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x31833 (+ mean87 ?x6313)))
 (let ((?x31876 (/ (- y87_1_endpoint1_2 y87_1_endpoint0_2) (- ?x31841 ?x31833))))
 (let ((?x31900 (ite (< y87_1 ?x31841) (+ (* ?x31876 y87_1) (- y87_1_endpoint0_2 (* ?x31876 ?x31833))) ?x31896)))
 (let ((?x31824 (- mean87 ?x6297)))
 (let ((?x31871 (/ (- y87_1_endpoint0_2 y87_1_endpoint1_1) (- ?x31833 ?x31824))))
 (let ((?x31904 (ite (< y87_1 ?x31833) (+ (* ?x31871 y87_1) (- y87_1_endpoint1_1 (* ?x31871 ?x31824))) ?x31900)))
 (let ((?x23929 (- mean87 ?x6279)))
 (let ((?x31866 (/ (- y87_1_endpoint1_1 y87_1_endpoint2_1) (- ?x31824 ?x23929))))
 (let ((?x31908 (ite (< y87_1 ?x31824) (+ (* ?x31866 y87_1) (- y87_1_endpoint2_1 (* ?x31866 ?x23929))) ?x31904)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x23933 (- mean87 ?x6257)))
 (let ((?x31861 (/ (- y87_1_endpoint2_1 y87_1_endpoint3_1) (- ?x23929 ?x23933))))
 (let ((?x31912 (ite (< y87_1 ?x23929) (+ (* ?x31861 y87_1) (- y87_1_endpoint3_1 (* ?x31861 ?x23933))) ?x31908)))
 (let ((?x31916 (ite (> y87_1 (+ mean87 ?x6257)) 0.0 (ite (< y87_1 ?x23933) 0.0 ?x31912))))
 (= likelihoody87_1 ?x31916))))))))))))))))))))))))))
(assert
 (let ((?x32009 (ite (< y87_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y87_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y87_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y87_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x32017 (ite (< y87_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y87_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y87_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y87_2) (/ 3989467804994813.0 100000000000000000.0)) ?x32009))))
 (let ((?x32025 (ite (< y87_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y87_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y87_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y87_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x32017))))
 (= likelihoody87_2 (ite (> y87_2 30.0) 0.0 (ite (< y87_2 (- 30.0)) 0.0 ?x32025)))))))
(assert
 (= likelihoodoutlier88 (ite (= outlier88 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32065 (= y88_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y88_1_endpoint3_1| $x32065)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32062 (= y88_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y88_1_endpoint2_1| $x32062)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24187 (= y88_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y88_1_endpoint1_1| $x24187)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x32087 (= y88_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y88_1_endpoint0_2| $x32087)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x32095 (= y88_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y88_1_endpoint1_2| $x32095)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32101 (= y88_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y88_1_endpoint2_2| $x32101)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32107 (= y88_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y88_1_endpoint3_2| $x32107)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x15660 (+ mean88 ?x6279)))
 (let ((?x32138 (/ (- y88_1_endpoint3_2 y88_1_endpoint2_2) (- (+ mean88 (* ?x6258 3.0)) ?x15660))))
 (let ((?x32144 (ite (< y88_1 (+ mean88 (* ?x6258 3.0))) (+ (* ?x32138 y88_1) (- y88_1_endpoint2_2 (* ?x32138 ?x15660))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x32093 (+ mean88 ?x6297)))
 (let ((?x32133 (/ (- y88_1_endpoint2_2 y88_1_endpoint1_2) (- ?x15660 ?x32093))))
 (let ((?x32148 (ite (< y88_1 ?x15660) (+ (* ?x32133 y88_1) (- y88_1_endpoint1_2 (* ?x32133 ?x32093))) ?x32144)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x32085 (+ mean88 ?x6313)))
 (let ((?x32128 (/ (- y88_1_endpoint1_2 y88_1_endpoint0_2) (- ?x32093 ?x32085))))
 (let ((?x32152 (ite (< y88_1 ?x32093) (+ (* ?x32128 y88_1) (- y88_1_endpoint0_2 (* ?x32128 ?x32085))) ?x32148)))
 (let ((?x32076 (- mean88 ?x6297)))
 (let ((?x32123 (/ (- y88_1_endpoint0_2 y88_1_endpoint1_1) (- ?x32085 ?x32076))))
 (let ((?x32156 (ite (< y88_1 ?x32085) (+ (* ?x32123 y88_1) (- y88_1_endpoint1_1 (* ?x32123 ?x32076))) ?x32152)))
 (let ((?x24186 (- mean88 ?x6279)))
 (let ((?x32118 (/ (- y88_1_endpoint1_1 y88_1_endpoint2_1) (- ?x32076 ?x24186))))
 (let ((?x32160 (ite (< y88_1 ?x32076) (+ (* ?x32118 y88_1) (- y88_1_endpoint2_1 (* ?x32118 ?x24186))) ?x32156)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x24190 (- mean88 ?x6257)))
 (let ((?x32113 (/ (- y88_1_endpoint2_1 y88_1_endpoint3_1) (- ?x24186 ?x24190))))
 (let ((?x32164 (ite (< y88_1 ?x24186) (+ (* ?x32113 y88_1) (- y88_1_endpoint3_1 (* ?x32113 ?x24190))) ?x32160)))
 (let ((?x32168 (ite (> y88_1 (+ mean88 ?x6257)) 0.0 (ite (< y88_1 ?x24190) 0.0 ?x32164))))
 (= likelihoody88_1 ?x32168))))))))))))))))))))))))))
(assert
 (let ((?x32262 (ite (< y88_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y88_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y88_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y88_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x32270 (ite (< y88_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y88_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y88_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y88_2) (/ 3989467804994813.0 100000000000000000.0)) ?x32262))))
 (let ((?x32278 (ite (< y88_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y88_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y88_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y88_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x32270))))
 (= likelihoody88_2 (ite (> y88_2 30.0) 0.0 (ite (< y88_2 (- 30.0)) 0.0 ?x32278)))))))
(assert
 (= likelihoodoutlier89 (ite (= outlier89 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32318 (= y89_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y89_1_endpoint3_1| $x32318)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32315 (= y89_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y89_1_endpoint2_1| $x32315)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x16010 (= y89_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y89_1_endpoint1_1| $x16010)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x32340 (= y89_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y89_1_endpoint0_2| $x32340)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x32348 (= y89_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y89_1_endpoint1_2| $x32348)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32354 (= y89_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y89_1_endpoint2_2| $x32354)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32360 (= y89_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y89_1_endpoint3_2| $x32360)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x16028 (+ mean89 ?x6279)))
 (let ((?x32391 (/ (- y89_1_endpoint3_2 y89_1_endpoint2_2) (- (+ mean89 (* ?x6258 3.0)) ?x16028))))
 (let ((?x32397 (ite (< y89_1 (+ mean89 (* ?x6258 3.0))) (+ (* ?x32391 y89_1) (- y89_1_endpoint2_2 (* ?x32391 ?x16028))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x32346 (+ mean89 ?x6297)))
 (let ((?x32386 (/ (- y89_1_endpoint2_2 y89_1_endpoint1_2) (- ?x16028 ?x32346))))
 (let ((?x32401 (ite (< y89_1 ?x16028) (+ (* ?x32386 y89_1) (- y89_1_endpoint1_2 (* ?x32386 ?x32346))) ?x32397)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x32338 (+ mean89 ?x6313)))
 (let ((?x32381 (/ (- y89_1_endpoint1_2 y89_1_endpoint0_2) (- ?x32346 ?x32338))))
 (let ((?x32405 (ite (< y89_1 ?x32346) (+ (* ?x32381 y89_1) (- y89_1_endpoint0_2 (* ?x32381 ?x32338))) ?x32401)))
 (let ((?x32329 (- mean89 ?x6297)))
 (let ((?x32376 (/ (- y89_1_endpoint0_2 y89_1_endpoint1_1) (- ?x32338 ?x32329))))
 (let ((?x32409 (ite (< y89_1 ?x32338) (+ (* ?x32376 y89_1) (- y89_1_endpoint1_1 (* ?x32376 ?x32329))) ?x32405)))
 (let ((?x24440 (- mean89 ?x6279)))
 (let ((?x32371 (/ (- y89_1_endpoint1_1 y89_1_endpoint2_1) (- ?x32329 ?x24440))))
 (let ((?x32413 (ite (< y89_1 ?x32329) (+ (* ?x32371 y89_1) (- y89_1_endpoint2_1 (* ?x32371 ?x24440))) ?x32409)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x24442 (- mean89 ?x6257)))
 (let ((?x32366 (/ (- y89_1_endpoint2_1 y89_1_endpoint3_1) (- ?x24440 ?x24442))))
 (let ((?x32417 (ite (< y89_1 ?x24440) (+ (* ?x32366 y89_1) (- y89_1_endpoint3_1 (* ?x32366 ?x24442))) ?x32413)))
 (let ((?x32421 (ite (> y89_1 (+ mean89 ?x6257)) 0.0 (ite (< y89_1 ?x24442) 0.0 ?x32417))))
 (= likelihoody89_1 ?x32421))))))))))))))))))))))))))
(assert
 (let ((?x32513 (ite (< y89_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y89_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y89_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y89_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x32521 (ite (< y89_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y89_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y89_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y89_2) (/ 3989467804994813.0 100000000000000000.0)) ?x32513))))
 (let ((?x32529 (ite (< y89_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y89_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y89_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y89_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x32521))))
 (= likelihoody89_2 (ite (> y89_2 30.0) 0.0 (ite (< y89_2 (- 30.0)) 0.0 ?x32529)))))))
(assert
 (= likelihoodoutlier90 (ite (= outlier90 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32569 (= y90_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y90_1_endpoint3_1| $x32569)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32566 (= y90_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y90_1_endpoint2_1| $x32566)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24692 (= y90_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y90_1_endpoint1_1| $x24692)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x32591 (= y90_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y90_1_endpoint0_2| $x32591)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x32599 (= y90_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y90_1_endpoint1_2| $x32599)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32605 (= y90_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y90_1_endpoint2_2| $x32605)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32611 (= y90_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y90_1_endpoint3_2| $x32611)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x16413 (+ mean90 ?x6279)))
 (let ((?x32642 (/ (- y90_1_endpoint3_2 y90_1_endpoint2_2) (- (+ mean90 (* ?x6258 3.0)) ?x16413))))
 (let ((?x32648 (ite (< y90_1 (+ mean90 (* ?x6258 3.0))) (+ (* ?x32642 y90_1) (- y90_1_endpoint2_2 (* ?x32642 ?x16413))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x32597 (+ mean90 ?x6297)))
 (let ((?x32637 (/ (- y90_1_endpoint2_2 y90_1_endpoint1_2) (- ?x16413 ?x32597))))
 (let ((?x32652 (ite (< y90_1 ?x16413) (+ (* ?x32637 y90_1) (- y90_1_endpoint1_2 (* ?x32637 ?x32597))) ?x32648)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x32589 (+ mean90 ?x6313)))
 (let ((?x32632 (/ (- y90_1_endpoint1_2 y90_1_endpoint0_2) (- ?x32597 ?x32589))))
 (let ((?x32656 (ite (< y90_1 ?x32597) (+ (* ?x32632 y90_1) (- y90_1_endpoint0_2 (* ?x32632 ?x32589))) ?x32652)))
 (let ((?x32580 (- mean90 ?x6297)))
 (let ((?x32627 (/ (- y90_1_endpoint0_2 y90_1_endpoint1_1) (- ?x32589 ?x32580))))
 (let ((?x32660 (ite (< y90_1 ?x32589) (+ (* ?x32627 y90_1) (- y90_1_endpoint1_1 (* ?x32627 ?x32580))) ?x32656)))
 (let ((?x24691 (- mean90 ?x6279)))
 (let ((?x32622 (/ (- y90_1_endpoint1_1 y90_1_endpoint2_1) (- ?x32580 ?x24691))))
 (let ((?x32664 (ite (< y90_1 ?x32580) (+ (* ?x32622 y90_1) (- y90_1_endpoint2_1 (* ?x32622 ?x24691))) ?x32660)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x24695 (- mean90 ?x6257)))
 (let ((?x32617 (/ (- y90_1_endpoint2_1 y90_1_endpoint3_1) (- ?x24691 ?x24695))))
 (let ((?x32668 (ite (< y90_1 ?x24691) (+ (* ?x32617 y90_1) (- y90_1_endpoint3_1 (* ?x32617 ?x24695))) ?x32664)))
 (let ((?x32672 (ite (> y90_1 (+ mean90 ?x6257)) 0.0 (ite (< y90_1 ?x24695) 0.0 ?x32668))))
 (= likelihoody90_1 ?x32672))))))))))))))))))))))))))
(assert
 (let ((?x32765 (ite (< y90_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y90_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y90_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y90_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x32773 (ite (< y90_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y90_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y90_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y90_2) (/ 3989467804994813.0 100000000000000000.0)) ?x32765))))
 (let ((?x32781 (ite (< y90_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y90_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y90_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y90_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x32773))))
 (= likelihoody90_2 (ite (> y90_2 30.0) 0.0 (ite (< y90_2 (- 30.0)) 0.0 ?x32781)))))))
(assert
 (= likelihoodoutlier91 (ite (= outlier91 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32821 (= y91_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y91_1_endpoint3_1| $x32821)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32818 (= y91_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y91_1_endpoint2_1| $x32818)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x24944 (= y91_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y91_1_endpoint1_1| $x24944)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x32843 (= y91_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y91_1_endpoint0_2| $x32843)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x32851 (= y91_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y91_1_endpoint1_2| $x32851)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x32857 (= y91_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y91_1_endpoint2_2| $x32857)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x32863 (= y91_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y91_1_endpoint3_2| $x32863)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x4502 (+ mean91 ?x6279)))
 (let ((?x32894 (/ (- y91_1_endpoint3_2 y91_1_endpoint2_2) (- (+ mean91 (* ?x6258 3.0)) ?x4502))))
 (let ((?x32900 (ite (< y91_1 (+ mean91 (* ?x6258 3.0))) (+ (* ?x32894 y91_1) (- y91_1_endpoint2_2 (* ?x32894 ?x4502))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x32849 (+ mean91 ?x6297)))
 (let ((?x32889 (/ (- y91_1_endpoint2_2 y91_1_endpoint1_2) (- ?x4502 ?x32849))))
 (let ((?x32904 (ite (< y91_1 ?x4502) (+ (* ?x32889 y91_1) (- y91_1_endpoint1_2 (* ?x32889 ?x32849))) ?x32900)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x32841 (+ mean91 ?x6313)))
 (let ((?x32884 (/ (- y91_1_endpoint1_2 y91_1_endpoint0_2) (- ?x32849 ?x32841))))
 (let ((?x32908 (ite (< y91_1 ?x32849) (+ (* ?x32884 y91_1) (- y91_1_endpoint0_2 (* ?x32884 ?x32841))) ?x32904)))
 (let ((?x32832 (- mean91 ?x6297)))
 (let ((?x32879 (/ (- y91_1_endpoint0_2 y91_1_endpoint1_1) (- ?x32841 ?x32832))))
 (let ((?x32912 (ite (< y91_1 ?x32841) (+ (* ?x32879 y91_1) (- y91_1_endpoint1_1 (* ?x32879 ?x32832))) ?x32908)))
 (let ((?x24943 (- mean91 ?x6279)))
 (let ((?x32874 (/ (- y91_1_endpoint1_1 y91_1_endpoint2_1) (- ?x32832 ?x24943))))
 (let ((?x32916 (ite (< y91_1 ?x32832) (+ (* ?x32874 y91_1) (- y91_1_endpoint2_1 (* ?x32874 ?x24943))) ?x32912)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x24947 (- mean91 ?x6257)))
 (let ((?x32869 (/ (- y91_1_endpoint2_1 y91_1_endpoint3_1) (- ?x24943 ?x24947))))
 (let ((?x32920 (ite (< y91_1 ?x24943) (+ (* ?x32869 y91_1) (- y91_1_endpoint3_1 (* ?x32869 ?x24947))) ?x32916)))
 (let ((?x32924 (ite (> y91_1 (+ mean91 ?x6257)) 0.0 (ite (< y91_1 ?x24947) 0.0 ?x32920))))
 (= likelihoody91_1 ?x32924))))))))))))))))))))))))))
(assert
 (let ((?x33017 (ite (< y91_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y91_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y91_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y91_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x33025 (ite (< y91_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y91_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y91_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y91_2) (/ 3989467804994813.0 100000000000000000.0)) ?x33017))))
 (let ((?x33033 (ite (< y91_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y91_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y91_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y91_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x33025))))
 (= likelihoody91_2 (ite (> y91_2 30.0) 0.0 (ite (< y91_2 (- 30.0)) 0.0 ?x33033)))))))
(assert
 (= likelihoodoutlier92 (ite (= outlier92 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33073 (= y92_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y92_1_endpoint3_1| $x33073)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33070 (= y92_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y92_1_endpoint2_1| $x33070)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25196 (= y92_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y92_1_endpoint1_1| $x25196)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x33095 (= y92_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y92_1_endpoint0_2| $x33095)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x33103 (= y92_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y92_1_endpoint1_2| $x33103)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33109 (= y92_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y92_1_endpoint2_2| $x33109)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33115 (= y92_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y92_1_endpoint3_2| $x33115)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x17121 (+ mean92 ?x6279)))
 (let ((?x33146 (/ (- y92_1_endpoint3_2 y92_1_endpoint2_2) (- (+ mean92 (* ?x6258 3.0)) ?x17121))))
 (let ((?x33152 (ite (< y92_1 (+ mean92 (* ?x6258 3.0))) (+ (* ?x33146 y92_1) (- y92_1_endpoint2_2 (* ?x33146 ?x17121))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x33101 (+ mean92 ?x6297)))
 (let ((?x33141 (/ (- y92_1_endpoint2_2 y92_1_endpoint1_2) (- ?x17121 ?x33101))))
 (let ((?x33156 (ite (< y92_1 ?x17121) (+ (* ?x33141 y92_1) (- y92_1_endpoint1_2 (* ?x33141 ?x33101))) ?x33152)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x33093 (+ mean92 ?x6313)))
 (let ((?x33136 (/ (- y92_1_endpoint1_2 y92_1_endpoint0_2) (- ?x33101 ?x33093))))
 (let ((?x33160 (ite (< y92_1 ?x33101) (+ (* ?x33136 y92_1) (- y92_1_endpoint0_2 (* ?x33136 ?x33093))) ?x33156)))
 (let ((?x33084 (- mean92 ?x6297)))
 (let ((?x33131 (/ (- y92_1_endpoint0_2 y92_1_endpoint1_1) (- ?x33093 ?x33084))))
 (let ((?x33164 (ite (< y92_1 ?x33093) (+ (* ?x33131 y92_1) (- y92_1_endpoint1_1 (* ?x33131 ?x33084))) ?x33160)))
 (let ((?x25195 (- mean92 ?x6279)))
 (let ((?x33126 (/ (- y92_1_endpoint1_1 y92_1_endpoint2_1) (- ?x33084 ?x25195))))
 (let ((?x33168 (ite (< y92_1 ?x33084) (+ (* ?x33126 y92_1) (- y92_1_endpoint2_1 (* ?x33126 ?x25195))) ?x33164)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x25199 (- mean92 ?x6257)))
 (let ((?x33121 (/ (- y92_1_endpoint2_1 y92_1_endpoint3_1) (- ?x25195 ?x25199))))
 (let ((?x33172 (ite (< y92_1 ?x25195) (+ (* ?x33121 y92_1) (- y92_1_endpoint3_1 (* ?x33121 ?x25199))) ?x33168)))
 (let ((?x33176 (ite (> y92_1 (+ mean92 ?x6257)) 0.0 (ite (< y92_1 ?x25199) 0.0 ?x33172))))
 (= likelihoody92_1 ?x33176))))))))))))))))))))))))))
(assert
 (let ((?x33269 (ite (< y92_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y92_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y92_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y92_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x33277 (ite (< y92_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y92_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y92_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y92_2) (/ 3989467804994813.0 100000000000000000.0)) ?x33269))))
 (let ((?x33285 (ite (< y92_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y92_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y92_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y92_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x33277))))
 (= likelihoody92_2 (ite (> y92_2 30.0) 0.0 (ite (< y92_2 (- 30.0)) 0.0 ?x33285)))))))
(assert
 (= likelihoodoutlier93 (ite (= outlier93 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33325 (= y93_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y93_1_endpoint3_1| $x33325)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33322 (= y93_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y93_1_endpoint2_1| $x33322)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25447 (= y93_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y93_1_endpoint1_1| $x25447)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x33347 (= y93_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y93_1_endpoint0_2| $x33347)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x33355 (= y93_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y93_1_endpoint1_2| $x33355)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33361 (= y93_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y93_1_endpoint2_2| $x33361)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33367 (= y93_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y93_1_endpoint3_2| $x33367)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x17475 (+ mean93 ?x6279)))
 (let ((?x33398 (/ (- y93_1_endpoint3_2 y93_1_endpoint2_2) (- (+ mean93 (* ?x6258 3.0)) ?x17475))))
 (let ((?x33404 (ite (< y93_1 (+ mean93 (* ?x6258 3.0))) (+ (* ?x33398 y93_1) (- y93_1_endpoint2_2 (* ?x33398 ?x17475))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x33353 (+ mean93 ?x6297)))
 (let ((?x33393 (/ (- y93_1_endpoint2_2 y93_1_endpoint1_2) (- ?x17475 ?x33353))))
 (let ((?x33408 (ite (< y93_1 ?x17475) (+ (* ?x33393 y93_1) (- y93_1_endpoint1_2 (* ?x33393 ?x33353))) ?x33404)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x33345 (+ mean93 ?x6313)))
 (let ((?x33388 (/ (- y93_1_endpoint1_2 y93_1_endpoint0_2) (- ?x33353 ?x33345))))
 (let ((?x33412 (ite (< y93_1 ?x33353) (+ (* ?x33388 y93_1) (- y93_1_endpoint0_2 (* ?x33388 ?x33345))) ?x33408)))
 (let ((?x33336 (- mean93 ?x6297)))
 (let ((?x33383 (/ (- y93_1_endpoint0_2 y93_1_endpoint1_1) (- ?x33345 ?x33336))))
 (let ((?x33416 (ite (< y93_1 ?x33345) (+ (* ?x33383 y93_1) (- y93_1_endpoint1_1 (* ?x33383 ?x33336))) ?x33412)))
 (let ((?x25446 (- mean93 ?x6279)))
 (let ((?x33378 (/ (- y93_1_endpoint1_1 y93_1_endpoint2_1) (- ?x33336 ?x25446))))
 (let ((?x33420 (ite (< y93_1 ?x33336) (+ (* ?x33378 y93_1) (- y93_1_endpoint2_1 (* ?x33378 ?x25446))) ?x33416)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x25450 (- mean93 ?x6257)))
 (let ((?x33373 (/ (- y93_1_endpoint2_1 y93_1_endpoint3_1) (- ?x25446 ?x25450))))
 (let ((?x33424 (ite (< y93_1 ?x25446) (+ (* ?x33373 y93_1) (- y93_1_endpoint3_1 (* ?x33373 ?x25450))) ?x33420)))
 (let ((?x33428 (ite (> y93_1 (+ mean93 ?x6257)) 0.0 (ite (< y93_1 ?x25450) 0.0 ?x33424))))
 (= likelihoody93_1 ?x33428))))))))))))))))))))))))))
(assert
 (let ((?x33521 (ite (< y93_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y93_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y93_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y93_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x33529 (ite (< y93_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y93_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y93_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y93_2) (/ 3989467804994813.0 100000000000000000.0)) ?x33521))))
 (let ((?x33537 (ite (< y93_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y93_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y93_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y93_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x33529))))
 (= likelihoody93_2 (ite (> y93_2 30.0) 0.0 (ite (< y93_2 (- 30.0)) 0.0 ?x33537)))))))
(assert
 (= likelihoodoutlier94 (ite (= outlier94 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33577 (= y94_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y94_1_endpoint3_1| $x33577)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33574 (= y94_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y94_1_endpoint2_1| $x33574)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25699 (= y94_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y94_1_endpoint1_1| $x25699)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x33599 (= y94_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y94_1_endpoint0_2| $x33599)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x33607 (= y94_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y94_1_endpoint1_2| $x33607)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33613 (= y94_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y94_1_endpoint2_2| $x33613)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33619 (= y94_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y94_1_endpoint3_2| $x33619)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x17828 (+ mean94 ?x6279)))
 (let ((?x33650 (/ (- y94_1_endpoint3_2 y94_1_endpoint2_2) (- (+ mean94 (* ?x6258 3.0)) ?x17828))))
 (let ((?x33656 (ite (< y94_1 (+ mean94 (* ?x6258 3.0))) (+ (* ?x33650 y94_1) (- y94_1_endpoint2_2 (* ?x33650 ?x17828))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x33605 (+ mean94 ?x6297)))
 (let ((?x33645 (/ (- y94_1_endpoint2_2 y94_1_endpoint1_2) (- ?x17828 ?x33605))))
 (let ((?x33660 (ite (< y94_1 ?x17828) (+ (* ?x33645 y94_1) (- y94_1_endpoint1_2 (* ?x33645 ?x33605))) ?x33656)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x33597 (+ mean94 ?x6313)))
 (let ((?x33640 (/ (- y94_1_endpoint1_2 y94_1_endpoint0_2) (- ?x33605 ?x33597))))
 (let ((?x33664 (ite (< y94_1 ?x33605) (+ (* ?x33640 y94_1) (- y94_1_endpoint0_2 (* ?x33640 ?x33597))) ?x33660)))
 (let ((?x33588 (- mean94 ?x6297)))
 (let ((?x33635 (/ (- y94_1_endpoint0_2 y94_1_endpoint1_1) (- ?x33597 ?x33588))))
 (let ((?x33668 (ite (< y94_1 ?x33597) (+ (* ?x33635 y94_1) (- y94_1_endpoint1_1 (* ?x33635 ?x33588))) ?x33664)))
 (let ((?x25698 (- mean94 ?x6279)))
 (let ((?x33630 (/ (- y94_1_endpoint1_1 y94_1_endpoint2_1) (- ?x33588 ?x25698))))
 (let ((?x33672 (ite (< y94_1 ?x33588) (+ (* ?x33630 y94_1) (- y94_1_endpoint2_1 (* ?x33630 ?x25698))) ?x33668)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x25702 (- mean94 ?x6257)))
 (let ((?x33625 (/ (- y94_1_endpoint2_1 y94_1_endpoint3_1) (- ?x25698 ?x25702))))
 (let ((?x33676 (ite (< y94_1 ?x25698) (+ (* ?x33625 y94_1) (- y94_1_endpoint3_1 (* ?x33625 ?x25702))) ?x33672)))
 (let ((?x33680 (ite (> y94_1 (+ mean94 ?x6257)) 0.0 (ite (< y94_1 ?x25702) 0.0 ?x33676))))
 (= likelihoody94_1 ?x33680))))))))))))))))))))))))))
(assert
 (let ((?x33773 (ite (< y94_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y94_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y94_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y94_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x33781 (ite (< y94_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y94_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y94_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y94_2) (/ 3989467804994813.0 100000000000000000.0)) ?x33773))))
 (let ((?x33789 (ite (< y94_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y94_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y94_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y94_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x33781))))
 (= likelihoody94_2 (ite (> y94_2 30.0) 0.0 (ite (< y94_2 (- 30.0)) 0.0 ?x33789)))))))
(assert
 (= likelihoodoutlier95 (ite (= outlier95 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33829 (= y95_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y95_1_endpoint3_1| $x33829)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33826 (= y95_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y95_1_endpoint2_1| $x33826)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x25950 (= y95_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y95_1_endpoint1_1| $x25950)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x33851 (= y95_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y95_1_endpoint0_2| $x33851)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x33859 (= y95_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y95_1_endpoint1_2| $x33859)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x33865 (= y95_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y95_1_endpoint2_2| $x33865)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x33871 (= y95_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y95_1_endpoint3_2| $x33871)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x6440 (+ mean95 ?x6279)))
 (let ((?x33902 (/ (- y95_1_endpoint3_2 y95_1_endpoint2_2) (- (+ mean95 (* ?x6258 3.0)) ?x6440))))
 (let ((?x33908 (ite (< y95_1 (+ mean95 (* ?x6258 3.0))) (+ (* ?x33902 y95_1) (- y95_1_endpoint2_2 (* ?x33902 ?x6440))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x33857 (+ mean95 ?x6297)))
 (let ((?x33897 (/ (- y95_1_endpoint2_2 y95_1_endpoint1_2) (- ?x6440 ?x33857))))
 (let ((?x33912 (ite (< y95_1 ?x6440) (+ (* ?x33897 y95_1) (- y95_1_endpoint1_2 (* ?x33897 ?x33857))) ?x33908)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x33849 (+ mean95 ?x6313)))
 (let ((?x33892 (/ (- y95_1_endpoint1_2 y95_1_endpoint0_2) (- ?x33857 ?x33849))))
 (let ((?x33916 (ite (< y95_1 ?x33857) (+ (* ?x33892 y95_1) (- y95_1_endpoint0_2 (* ?x33892 ?x33849))) ?x33912)))
 (let ((?x33840 (- mean95 ?x6297)))
 (let ((?x33887 (/ (- y95_1_endpoint0_2 y95_1_endpoint1_1) (- ?x33849 ?x33840))))
 (let ((?x33920 (ite (< y95_1 ?x33849) (+ (* ?x33887 y95_1) (- y95_1_endpoint1_1 (* ?x33887 ?x33840))) ?x33916)))
 (let ((?x25949 (- mean95 ?x6279)))
 (let ((?x33882 (/ (- y95_1_endpoint1_1 y95_1_endpoint2_1) (- ?x33840 ?x25949))))
 (let ((?x33924 (ite (< y95_1 ?x33840) (+ (* ?x33882 y95_1) (- y95_1_endpoint2_1 (* ?x33882 ?x25949))) ?x33920)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x25953 (- mean95 ?x6257)))
 (let ((?x33877 (/ (- y95_1_endpoint2_1 y95_1_endpoint3_1) (- ?x25949 ?x25953))))
 (let ((?x33928 (ite (< y95_1 ?x25949) (+ (* ?x33877 y95_1) (- y95_1_endpoint3_1 (* ?x33877 ?x25953))) ?x33924)))
 (let ((?x33932 (ite (> y95_1 (+ mean95 ?x6257)) 0.0 (ite (< y95_1 ?x25953) 0.0 ?x33928))))
 (= likelihoody95_1 ?x33932))))))))))))))))))))))))))
(assert
 (let ((?x34025 (ite (< y95_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y95_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y95_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y95_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x34033 (ite (< y95_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y95_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y95_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y95_2) (/ 3989467804994813.0 100000000000000000.0)) ?x34025))))
 (let ((?x34041 (ite (< y95_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y95_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y95_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y95_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x34033))))
 (= likelihoody95_2 (ite (> y95_2 30.0) 0.0 (ite (< y95_2 (- 30.0)) 0.0 ?x34041)))))))
(assert
 (= likelihoodoutlier96 (ite (= outlier96 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34081 (= y96_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y96_1_endpoint3_1| $x34081)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34078 (= y96_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y96_1_endpoint2_1| $x34078)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26203 (= y96_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y96_1_endpoint1_1| $x26203)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x34103 (= y96_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y96_1_endpoint0_2| $x34103)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x34111 (= y96_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y96_1_endpoint1_2| $x34111)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34117 (= y96_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y96_1_endpoint2_2| $x34117)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34123 (= y96_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y96_1_endpoint3_2| $x34123)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x6835 (+ mean96 ?x6279)))
 (let ((?x34154 (/ (- y96_1_endpoint3_2 y96_1_endpoint2_2) (- (+ mean96 (* ?x6258 3.0)) ?x6835))))
 (let ((?x34160 (ite (< y96_1 (+ mean96 (* ?x6258 3.0))) (+ (* ?x34154 y96_1) (- y96_1_endpoint2_2 (* ?x34154 ?x6835))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x34109 (+ mean96 ?x6297)))
 (let ((?x34149 (/ (- y96_1_endpoint2_2 y96_1_endpoint1_2) (- ?x6835 ?x34109))))
 (let ((?x34164 (ite (< y96_1 ?x6835) (+ (* ?x34149 y96_1) (- y96_1_endpoint1_2 (* ?x34149 ?x34109))) ?x34160)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x34101 (+ mean96 ?x6313)))
 (let ((?x34144 (/ (- y96_1_endpoint1_2 y96_1_endpoint0_2) (- ?x34109 ?x34101))))
 (let ((?x34168 (ite (< y96_1 ?x34109) (+ (* ?x34144 y96_1) (- y96_1_endpoint0_2 (* ?x34144 ?x34101))) ?x34164)))
 (let ((?x34092 (- mean96 ?x6297)))
 (let ((?x34139 (/ (- y96_1_endpoint0_2 y96_1_endpoint1_1) (- ?x34101 ?x34092))))
 (let ((?x34172 (ite (< y96_1 ?x34101) (+ (* ?x34139 y96_1) (- y96_1_endpoint1_1 (* ?x34139 ?x34092))) ?x34168)))
 (let ((?x26202 (- mean96 ?x6279)))
 (let ((?x34134 (/ (- y96_1_endpoint1_1 y96_1_endpoint2_1) (- ?x34092 ?x26202))))
 (let ((?x34176 (ite (< y96_1 ?x34092) (+ (* ?x34134 y96_1) (- y96_1_endpoint2_1 (* ?x34134 ?x26202))) ?x34172)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x26206 (- mean96 ?x6257)))
 (let ((?x34129 (/ (- y96_1_endpoint2_1 y96_1_endpoint3_1) (- ?x26202 ?x26206))))
 (let ((?x34180 (ite (< y96_1 ?x26202) (+ (* ?x34129 y96_1) (- y96_1_endpoint3_1 (* ?x34129 ?x26206))) ?x34176)))
 (let ((?x34184 (ite (> y96_1 (+ mean96 ?x6257)) 0.0 (ite (< y96_1 ?x26206) 0.0 ?x34180))))
 (= likelihoody96_1 ?x34184))))))))))))))))))))))))))
(assert
 (let ((?x34277 (ite (< y96_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y96_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y96_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y96_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x34285 (ite (< y96_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y96_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y96_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y96_2) (/ 3989467804994813.0 100000000000000000.0)) ?x34277))))
 (let ((?x34293 (ite (< y96_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y96_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y96_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y96_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x34285))))
 (= likelihoody96_2 (ite (> y96_2 30.0) 0.0 (ite (< y96_2 (- 30.0)) 0.0 ?x34293)))))))
(assert
 (= likelihoodoutlier97 (ite (= outlier97 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34333 (= y97_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y97_1_endpoint3_1| $x34333)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34330 (= y97_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y97_1_endpoint2_1| $x34330)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26454 (= y97_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y97_1_endpoint1_1| $x26454)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x34355 (= y97_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y97_1_endpoint0_2| $x34355)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x34363 (= y97_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y97_1_endpoint1_2| $x34363)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34369 (= y97_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y97_1_endpoint2_2| $x34369)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34375 (= y97_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y97_1_endpoint3_2| $x34375)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x7219 (+ mean97 ?x6279)))
 (let ((?x34406 (/ (- y97_1_endpoint3_2 y97_1_endpoint2_2) (- (+ mean97 (* ?x6258 3.0)) ?x7219))))
 (let ((?x34412 (ite (< y97_1 (+ mean97 (* ?x6258 3.0))) (+ (* ?x34406 y97_1) (- y97_1_endpoint2_2 (* ?x34406 ?x7219))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x34361 (+ mean97 ?x6297)))
 (let ((?x34401 (/ (- y97_1_endpoint2_2 y97_1_endpoint1_2) (- ?x7219 ?x34361))))
 (let ((?x34416 (ite (< y97_1 ?x7219) (+ (* ?x34401 y97_1) (- y97_1_endpoint1_2 (* ?x34401 ?x34361))) ?x34412)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x34353 (+ mean97 ?x6313)))
 (let ((?x34396 (/ (- y97_1_endpoint1_2 y97_1_endpoint0_2) (- ?x34361 ?x34353))))
 (let ((?x34420 (ite (< y97_1 ?x34361) (+ (* ?x34396 y97_1) (- y97_1_endpoint0_2 (* ?x34396 ?x34353))) ?x34416)))
 (let ((?x34344 (- mean97 ?x6297)))
 (let ((?x34391 (/ (- y97_1_endpoint0_2 y97_1_endpoint1_1) (- ?x34353 ?x34344))))
 (let ((?x34424 (ite (< y97_1 ?x34353) (+ (* ?x34391 y97_1) (- y97_1_endpoint1_1 (* ?x34391 ?x34344))) ?x34420)))
 (let ((?x26453 (- mean97 ?x6279)))
 (let ((?x34386 (/ (- y97_1_endpoint1_1 y97_1_endpoint2_1) (- ?x34344 ?x26453))))
 (let ((?x34428 (ite (< y97_1 ?x34344) (+ (* ?x34386 y97_1) (- y97_1_endpoint2_1 (* ?x34386 ?x26453))) ?x34424)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x26457 (- mean97 ?x6257)))
 (let ((?x34381 (/ (- y97_1_endpoint2_1 y97_1_endpoint3_1) (- ?x26453 ?x26457))))
 (let ((?x34432 (ite (< y97_1 ?x26453) (+ (* ?x34381 y97_1) (- y97_1_endpoint3_1 (* ?x34381 ?x26457))) ?x34428)))
 (let ((?x34436 (ite (> y97_1 (+ mean97 ?x6257)) 0.0 (ite (< y97_1 ?x26457) 0.0 ?x34432))))
 (= likelihoody97_1 ?x34436))))))))))))))))))))))))))
(assert
 (let ((?x34529 (ite (< y97_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y97_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y97_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y97_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x34537 (ite (< y97_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y97_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y97_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y97_2) (/ 3989467804994813.0 100000000000000000.0)) ?x34529))))
 (let ((?x34545 (ite (< y97_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y97_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y97_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y97_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x34537))))
 (= likelihoody97_2 (ite (> y97_2 30.0) 0.0 (ite (< y97_2 (- 30.0)) 0.0 ?x34545)))))))
(assert
 (= likelihoodoutlier98 (ite (= outlier98 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34585 (= y98_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y98_1_endpoint3_1| $x34585)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34582 (= y98_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y98_1_endpoint2_1| $x34582)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26706 (= y98_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y98_1_endpoint1_1| $x26706)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x34607 (= y98_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y98_1_endpoint0_2| $x34607)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x34615 (= y98_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y98_1_endpoint1_2| $x34615)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34621 (= y98_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y98_1_endpoint2_2| $x34621)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34627 (= y98_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y98_1_endpoint3_2| $x34627)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x18891 (+ mean98 ?x6279)))
 (let ((?x34658 (/ (- y98_1_endpoint3_2 y98_1_endpoint2_2) (- (+ mean98 (* ?x6258 3.0)) ?x18891))))
 (let ((?x34664 (ite (< y98_1 (+ mean98 (* ?x6258 3.0))) (+ (* ?x34658 y98_1) (- y98_1_endpoint2_2 (* ?x34658 ?x18891))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x34613 (+ mean98 ?x6297)))
 (let ((?x34653 (/ (- y98_1_endpoint2_2 y98_1_endpoint1_2) (- ?x18891 ?x34613))))
 (let ((?x34668 (ite (< y98_1 ?x18891) (+ (* ?x34653 y98_1) (- y98_1_endpoint1_2 (* ?x34653 ?x34613))) ?x34664)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x34605 (+ mean98 ?x6313)))
 (let ((?x34648 (/ (- y98_1_endpoint1_2 y98_1_endpoint0_2) (- ?x34613 ?x34605))))
 (let ((?x34672 (ite (< y98_1 ?x34613) (+ (* ?x34648 y98_1) (- y98_1_endpoint0_2 (* ?x34648 ?x34605))) ?x34668)))
 (let ((?x34596 (- mean98 ?x6297)))
 (let ((?x34643 (/ (- y98_1_endpoint0_2 y98_1_endpoint1_1) (- ?x34605 ?x34596))))
 (let ((?x34676 (ite (< y98_1 ?x34605) (+ (* ?x34643 y98_1) (- y98_1_endpoint1_1 (* ?x34643 ?x34596))) ?x34672)))
 (let ((?x26705 (- mean98 ?x6279)))
 (let ((?x34638 (/ (- y98_1_endpoint1_1 y98_1_endpoint2_1) (- ?x34596 ?x26705))))
 (let ((?x34680 (ite (< y98_1 ?x34596) (+ (* ?x34638 y98_1) (- y98_1_endpoint2_1 (* ?x34638 ?x26705))) ?x34676)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x26709 (- mean98 ?x6257)))
 (let ((?x34633 (/ (- y98_1_endpoint2_1 y98_1_endpoint3_1) (- ?x26705 ?x26709))))
 (let ((?x34684 (ite (< y98_1 ?x26705) (+ (* ?x34633 y98_1) (- y98_1_endpoint3_1 (* ?x34633 ?x26709))) ?x34680)))
 (let ((?x34688 (ite (> y98_1 (+ mean98 ?x6257)) 0.0 (ite (< y98_1 ?x26709) 0.0 ?x34684))))
 (= likelihoody98_1 ?x34688))))))))))))))))))))))))))
(assert
 (let ((?x34781 (ite (< y98_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y98_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y98_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y98_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x34789 (ite (< y98_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y98_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y98_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y98_2) (/ 3989467804994813.0 100000000000000000.0)) ?x34781))))
 (let ((?x34797 (ite (< y98_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y98_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y98_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y98_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x34789))))
 (= likelihoody98_2 (ite (> y98_2 30.0) 0.0 (ite (< y98_2 (- 30.0)) 0.0 ?x34797)))))))
(assert
 (= likelihoodoutlier99 (ite (= outlier99 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34837 (= y99_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y99_1_endpoint3_1| $x34837)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34834 (= y99_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y99_1_endpoint2_1| $x34834)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x26957 (= y99_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y99_1_endpoint1_1| $x26957)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x34859 (= y99_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y99_1_endpoint0_2| $x34859)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x34867 (= y99_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y99_1_endpoint1_2| $x34867)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x34873 (= y99_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y99_1_endpoint2_2| $x34873)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x34879 (= y99_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y99_1_endpoint3_2| $x34879)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x7995 (+ mean99 ?x6279)))
 (let ((?x34910 (/ (- y99_1_endpoint3_2 y99_1_endpoint2_2) (- (+ mean99 (* ?x6258 3.0)) ?x7995))))
 (let ((?x34916 (ite (< y99_1 (+ mean99 (* ?x6258 3.0))) (+ (* ?x34910 y99_1) (- y99_1_endpoint2_2 (* ?x34910 ?x7995))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x34865 (+ mean99 ?x6297)))
 (let ((?x34905 (/ (- y99_1_endpoint2_2 y99_1_endpoint1_2) (- ?x7995 ?x34865))))
 (let ((?x34920 (ite (< y99_1 ?x7995) (+ (* ?x34905 y99_1) (- y99_1_endpoint1_2 (* ?x34905 ?x34865))) ?x34916)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x34857 (+ mean99 ?x6313)))
 (let ((?x34900 (/ (- y99_1_endpoint1_2 y99_1_endpoint0_2) (- ?x34865 ?x34857))))
 (let ((?x34924 (ite (< y99_1 ?x34865) (+ (* ?x34900 y99_1) (- y99_1_endpoint0_2 (* ?x34900 ?x34857))) ?x34920)))
 (let ((?x34848 (- mean99 ?x6297)))
 (let ((?x34895 (/ (- y99_1_endpoint0_2 y99_1_endpoint1_1) (- ?x34857 ?x34848))))
 (let ((?x34928 (ite (< y99_1 ?x34857) (+ (* ?x34895 y99_1) (- y99_1_endpoint1_1 (* ?x34895 ?x34848))) ?x34924)))
 (let ((?x26956 (- mean99 ?x6279)))
 (let ((?x34890 (/ (- y99_1_endpoint1_1 y99_1_endpoint2_1) (- ?x34848 ?x26956))))
 (let ((?x34932 (ite (< y99_1 ?x34848) (+ (* ?x34890 y99_1) (- y99_1_endpoint2_1 (* ?x34890 ?x26956))) ?x34928)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x26960 (- mean99 ?x6257)))
 (let ((?x34885 (/ (- y99_1_endpoint2_1 y99_1_endpoint3_1) (- ?x26956 ?x26960))))
 (let ((?x34936 (ite (< y99_1 ?x26956) (+ (* ?x34885 y99_1) (- y99_1_endpoint3_1 (* ?x34885 ?x26960))) ?x34932)))
 (let ((?x34940 (ite (> y99_1 (+ mean99 ?x6257)) 0.0 (ite (< y99_1 ?x26960) 0.0 ?x34936))))
 (= likelihoody99_1 ?x34940))))))))))))))))))))))))))
(assert
 (let ((?x35033 (ite (< y99_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y99_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y99_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y99_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x35041 (ite (< y99_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y99_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y99_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y99_2) (/ 3989467804994813.0 100000000000000000.0)) ?x35033))))
 (let ((?x35049 (ite (< y99_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y99_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y99_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y99_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x35041))))
 (= likelihoody99_2 (ite (> y99_2 30.0) 0.0 (ite (< y99_2 (- 30.0)) 0.0 ?x35049)))))))
(assert
 (= likelihoodoutlier100 (ite (= outlier100 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x35089 (= y100_1_endpoint3_1 ?x6269)))
 (=> |piecewise for y100_1_endpoint3_1| $x35089)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x35086 (= y100_1_endpoint2_1 ?x6263)))
 (=> |piecewise for y100_1_endpoint2_1| $x35086)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x27209 (= y100_1_endpoint1_1 ?x6282)))
 (=> |piecewise for y100_1_endpoint1_1| $x27209)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6316 (* ?x6268 4.0)))
 (let (($x35111 (= y100_1_endpoint0_2 ?x6316)))
 (=> |piecewise for y100_1_endpoint0_2| $x35111)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6282 (* ?x6268 3.0)))
 (let (($x35119 (= y100_1_endpoint1_2 ?x6282)))
 (=> |piecewise for y100_1_endpoint1_2| $x35119)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6263 (* ?x6268 2.0)))
 (let (($x35125 (= y100_1_endpoint2_2 ?x6263)))
 (=> |piecewise for y100_1_endpoint2_2| $x35125)))))
(assert
 (let ((?x6268 (- 12.0 noise)))
 (let ((?x6269 (* ?x6268 1.0)))
 (let (($x35131 (= y100_1_endpoint3_2 ?x6269)))
 (=> |piecewise for y100_1_endpoint3_2| $x35131)))))
(assert
 (let ((?x6258 (* noise 1.0)))
 (let ((?x6279 (* ?x6258 2.0)))
 (let ((?x8373 (+ mean100 ?x6279)))
 (let ((?x35162 (/ (- y100_1_endpoint3_2 y100_1_endpoint2_2) (- (+ mean100 (* ?x6258 3.0)) ?x8373))))
 (let ((?x35168 (ite (< y100_1 (+ mean100 (* ?x6258 3.0))) (+ (* ?x35162 y100_1) (- y100_1_endpoint2_2 (* ?x35162 ?x8373))) 0.0)))
 (let ((?x6297 (* ?x6258 1.0)))
 (let ((?x35117 (+ mean100 ?x6297)))
 (let ((?x35157 (/ (- y100_1_endpoint2_2 y100_1_endpoint1_2) (- ?x8373 ?x35117))))
 (let ((?x35172 (ite (< y100_1 ?x8373) (+ (* ?x35157 y100_1) (- y100_1_endpoint1_2 (* ?x35157 ?x35117))) ?x35168)))
 (let ((?x6313 (* ?x6258 0.0)))
 (let ((?x35109 (+ mean100 ?x6313)))
 (let ((?x35152 (/ (- y100_1_endpoint1_2 y100_1_endpoint0_2) (- ?x35117 ?x35109))))
 (let ((?x35176 (ite (< y100_1 ?x35117) (+ (* ?x35152 y100_1) (- y100_1_endpoint0_2 (* ?x35152 ?x35109))) ?x35172)))
 (let ((?x35100 (- mean100 ?x6297)))
 (let ((?x35147 (/ (- y100_1_endpoint0_2 y100_1_endpoint1_1) (- ?x35109 ?x35100))))
 (let ((?x35180 (ite (< y100_1 ?x35109) (+ (* ?x35147 y100_1) (- y100_1_endpoint1_1 (* ?x35147 ?x35100))) ?x35176)))
 (let ((?x27208 (- mean100 ?x6279)))
 (let ((?x35142 (/ (- y100_1_endpoint1_1 y100_1_endpoint2_1) (- ?x35100 ?x27208))))
 (let ((?x35184 (ite (< y100_1 ?x35100) (+ (* ?x35142 y100_1) (- y100_1_endpoint2_1 (* ?x35142 ?x27208))) ?x35180)))
 (let ((?x6257 (* ?x6258 3.0)))
 (let ((?x27212 (- mean100 ?x6257)))
 (let ((?x35137 (/ (- y100_1_endpoint2_1 y100_1_endpoint3_1) (- ?x27208 ?x27212))))
 (let ((?x35188 (ite (< y100_1 ?x27208) (+ (* ?x35137 y100_1) (- y100_1_endpoint3_1 (* ?x35137 ?x27212))) ?x35184)))
 (let ((?x35192 (ite (> y100_1 (+ mean100 ?x6257)) 0.0 (ite (< y100_1 ?x27212) 0.0 ?x35188))))
 (= likelihoody100_1 ?x35192))))))))))))))))))))))))))
(assert
 (let ((?x35285 (ite (< y100_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y100_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y100_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y100_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x35293 (ite (< y100_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y100_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y100_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y100_2) (/ 3989467804994813.0 100000000000000000.0)) ?x35285))))
 (let ((?x35301 (ite (< y100_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y100_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y100_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y100_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x35293))))
 (= likelihoody100_2 (ite (> y100_2 30.0) 0.0 (ite (< y100_2 (- 30.0)) 0.0 ?x35301)))))))
(assert
 (let (($x35336 (and (= likelihoody1 likelihoody1_1) (= y1 y1_1))))
 (=> (= alivey1_1 true) $x35336)))
(assert
 (let (($x35341 (= likelihoody1_1 0.0)))
 (=> (= alivey1_1 false) $x35341)))
(assert
 (let (($x35348 (and (= likelihoody1 likelihoody1_2) (= y1 y1_2))))
 (=> (= alivey1_2 true) $x35348)))
(assert
 (let (($x35353 (= likelihoody1_2 0.0)))
 (=> (= alivey1_2 false) $x35353)))
(assert
 (let (($x35356 (or (or false alivey1_1) alivey1_2)))
 (= alivey1 $x35356)))
(assert
 (let (($x35360 (and (= likelihoody2 likelihoody2_1) (= y2 y2_1))))
 (=> (= alivey2_1 true) $x35360)))
(assert
 (let (($x35365 (= likelihoody2_1 0.0)))
 (=> (= alivey2_1 false) $x35365)))
(assert
 (let (($x35372 (and (= likelihoody2 likelihoody2_2) (= y2 y2_2))))
 (=> (= alivey2_2 true) $x35372)))
(assert
 (let (($x35377 (= likelihoody2_2 0.0)))
 (=> (= alivey2_2 false) $x35377)))
(assert
 (let (($x35380 (or (or false alivey2_1) alivey2_2)))
 (= alivey2 $x35380)))
(assert
 (let (($x27460 (and (= likelihoody3 likelihoody3_1) (= y3 y3_1))))
 (=> (= alivey3_1 true) $x27460)))
(assert
 (let (($x35387 (= likelihoody3_1 0.0)))
 (=> (= alivey3_1 false) $x35387)))
(assert
 (let (($x35394 (and (= likelihoody3 likelihoody3_2) (= y3 y3_2))))
 (=> (= alivey3_2 true) $x35394)))
(assert
 (let (($x35399 (= likelihoody3_2 0.0)))
 (=> (= alivey3_2 false) $x35399)))
(assert
 (let (($x35402 (or (or false alivey3_1) alivey3_2)))
 (= alivey3 $x35402)))
(assert
 (let (($x35409 (and (= likelihoody4 likelihoody4_1) (= y4 y4_1))))
 (=> (= alivey4_1 true) $x35409)))
(assert
 (let (($x35414 (= likelihoody4_1 0.0)))
 (=> (= alivey4_1 false) $x35414)))
(assert
 (let (($x35421 (and (= likelihoody4 likelihoody4_2) (= y4 y4_2))))
 (=> (= alivey4_2 true) $x35421)))
(assert
 (let (($x35426 (= likelihoody4_2 0.0)))
 (=> (= alivey4_2 false) $x35426)))
(assert
 (let (($x35429 (or (or false alivey4_1) alivey4_2)))
 (= alivey4 $x35429)))
(assert
 (let (($x35436 (and (= likelihoody5 likelihoody5_1) (= y5 y5_1))))
 (=> (= alivey5_1 true) $x35436)))
(assert
 (let (($x35441 (= likelihoody5_1 0.0)))
 (=> (= alivey5_1 false) $x35441)))
(assert
 (let (($x35448 (and (= likelihoody5 likelihoody5_2) (= y5 y5_2))))
 (=> (= alivey5_2 true) $x35448)))
(assert
 (let (($x35453 (= likelihoody5_2 0.0)))
 (=> (= alivey5_2 false) $x35453)))
(assert
 (let (($x35456 (or (or false alivey5_1) alivey5_2)))
 (= alivey5 $x35456)))
(assert
 (let (($x35462 (and (= likelihoody6 likelihoody6_1) (= y6 y6_1))))
 (=> (= alivey6_1 true) $x35462)))
(assert
 (let (($x35467 (= likelihoody6_1 0.0)))
 (=> (= alivey6_1 false) $x35467)))
(assert
 (let (($x35474 (and (= likelihoody6 likelihoody6_2) (= y6 y6_2))))
 (=> (= alivey6_2 true) $x35474)))
(assert
 (let (($x35479 (= likelihoody6_2 0.0)))
 (=> (= alivey6_2 false) $x35479)))
(assert
 (let (($x35482 (or (or false alivey6_1) alivey6_2)))
 (= alivey6 $x35482)))
(assert
 (let (($x35486 (and (= likelihoody7 likelihoody7_1) (= y7 y7_1))))
 (=> (= alivey7_1 true) $x35486)))
(assert
 (let (($x35491 (= likelihoody7_1 0.0)))
 (=> (= alivey7_1 false) $x35491)))
(assert
 (let (($x35498 (and (= likelihoody7 likelihoody7_2) (= y7 y7_2))))
 (=> (= alivey7_2 true) $x35498)))
(assert
 (let (($x35503 (= likelihoody7_2 0.0)))
 (=> (= alivey7_2 false) $x35503)))
(assert
 (let (($x35506 (or (or false alivey7_1) alivey7_2)))
 (= alivey7 $x35506)))
(assert
 (let (($x35510 (and (= likelihoody8 likelihoody8_1) (= y8 y8_1))))
 (=> (= alivey8_1 true) $x35510)))
(assert
 (let (($x35515 (= likelihoody8_1 0.0)))
 (=> (= alivey8_1 false) $x35515)))
(assert
 (let (($x35522 (and (= likelihoody8 likelihoody8_2) (= y8 y8_2))))
 (=> (= alivey8_2 true) $x35522)))
(assert
 (let (($x35527 (= likelihoody8_2 0.0)))
 (=> (= alivey8_2 false) $x35527)))
(assert
 (let (($x35530 (or (or false alivey8_1) alivey8_2)))
 (= alivey8 $x35530)))
(assert
 (let (($x35534 (and (= likelihoody9 likelihoody9_1) (= y9 y9_1))))
 (=> (= alivey9_1 true) $x35534)))
(assert
 (let (($x35539 (= likelihoody9_1 0.0)))
 (=> (= alivey9_1 false) $x35539)))
(assert
 (let (($x35546 (and (= likelihoody9 likelihoody9_2) (= y9 y9_2))))
 (=> (= alivey9_2 true) $x35546)))
(assert
 (let (($x35551 (= likelihoody9_2 0.0)))
 (=> (= alivey9_2 false) $x35551)))
(assert
 (let (($x35554 (or (or false alivey9_1) alivey9_2)))
 (= alivey9 $x35554)))
(assert
 (let (($x35558 (and (= likelihoody10 likelihoody10_1) (= y10 y10_1))))
 (=> (= alivey10_1 true) $x35558)))
(assert
 (let (($x35563 (= likelihoody10_1 0.0)))
 (=> (= alivey10_1 false) $x35563)))
(assert
 (let (($x35570 (and (= likelihoody10 likelihoody10_2) (= y10 y10_2))))
 (=> (= alivey10_2 true) $x35570)))
(assert
 (let (($x35575 (= likelihoody10_2 0.0)))
 (=> (= alivey10_2 false) $x35575)))
(assert
 (let (($x35578 (or (or false alivey10_1) alivey10_2)))
 (= alivey10 $x35578)))
(assert
 (let (($x35582 (and (= likelihoody11 likelihoody11_1) (= y11 y11_1))))
 (=> (= alivey11_1 true) $x35582)))
(assert
 (let (($x35587 (= likelihoody11_1 0.0)))
 (=> (= alivey11_1 false) $x35587)))
(assert
 (let (($x35594 (and (= likelihoody11 likelihoody11_2) (= y11 y11_2))))
 (=> (= alivey11_2 true) $x35594)))
(assert
 (let (($x35599 (= likelihoody11_2 0.0)))
 (=> (= alivey11_2 false) $x35599)))
(assert
 (let (($x35602 (or (or false alivey11_1) alivey11_2)))
 (= alivey11 $x35602)))
(assert
 (let (($x35606 (and (= likelihoody12 likelihoody12_1) (= y12 y12_1))))
 (=> (= alivey12_1 true) $x35606)))
(assert
 (let (($x35611 (= likelihoody12_1 0.0)))
 (=> (= alivey12_1 false) $x35611)))
(assert
 (let (($x35618 (and (= likelihoody12 likelihoody12_2) (= y12 y12_2))))
 (=> (= alivey12_2 true) $x35618)))
(assert
 (let (($x35623 (= likelihoody12_2 0.0)))
 (=> (= alivey12_2 false) $x35623)))
(assert
 (let (($x35626 (or (or false alivey12_1) alivey12_2)))
 (= alivey12 $x35626)))
(assert
 (let (($x35630 (and (= likelihoody13 likelihoody13_1) (= y13 y13_1))))
 (=> (= alivey13_1 true) $x35630)))
(assert
 (let (($x35635 (= likelihoody13_1 0.0)))
 (=> (= alivey13_1 false) $x35635)))
(assert
 (let (($x35642 (and (= likelihoody13 likelihoody13_2) (= y13 y13_2))))
 (=> (= alivey13_2 true) $x35642)))
(assert
 (let (($x35647 (= likelihoody13_2 0.0)))
 (=> (= alivey13_2 false) $x35647)))
(assert
 (let (($x35650 (or (or false alivey13_1) alivey13_2)))
 (= alivey13 $x35650)))
(assert
 (let (($x35657 (and (= likelihoody14 likelihoody14_1) (= y14 y14_1))))
 (=> (= alivey14_1 true) $x35657)))
(assert
 (let (($x35662 (= likelihoody14_1 0.0)))
 (=> (= alivey14_1 false) $x35662)))
(assert
 (let (($x35669 (and (= likelihoody14 likelihoody14_2) (= y14 y14_2))))
 (=> (= alivey14_2 true) $x35669)))
(assert
 (let (($x35674 (= likelihoody14_2 0.0)))
 (=> (= alivey14_2 false) $x35674)))
(assert
 (let (($x35677 (or (or false alivey14_1) alivey14_2)))
 (= alivey14 $x35677)))
(assert
 (let (($x35684 (and (= likelihoody15 likelihoody15_1) (= y15 y15_1))))
 (=> (= alivey15_1 true) $x35684)))
(assert
 (let (($x35689 (= likelihoody15_1 0.0)))
 (=> (= alivey15_1 false) $x35689)))
(assert
 (let (($x35696 (and (= likelihoody15 likelihoody15_2) (= y15 y15_2))))
 (=> (= alivey15_2 true) $x35696)))
(assert
 (let (($x35701 (= likelihoody15_2 0.0)))
 (=> (= alivey15_2 false) $x35701)))
(assert
 (let (($x35704 (or (or false alivey15_1) alivey15_2)))
 (= alivey15 $x35704)))
(assert
 (let (($x35711 (and (= likelihoody16 likelihoody16_1) (= y16 y16_1))))
 (=> (= alivey16_1 true) $x35711)))
(assert
 (let (($x35716 (= likelihoody16_1 0.0)))
 (=> (= alivey16_1 false) $x35716)))
(assert
 (let (($x35723 (and (= likelihoody16 likelihoody16_2) (= y16 y16_2))))
 (=> (= alivey16_2 true) $x35723)))
(assert
 (let (($x35728 (= likelihoody16_2 0.0)))
 (=> (= alivey16_2 false) $x35728)))
(assert
 (let (($x35731 (or (or false alivey16_1) alivey16_2)))
 (= alivey16 $x35731)))
(assert
 (let (($x35738 (and (= likelihoody17 likelihoody17_1) (= y17 y17_1))))
 (=> (= alivey17_1 true) $x35738)))
(assert
 (let (($x35743 (= likelihoody17_1 0.0)))
 (=> (= alivey17_1 false) $x35743)))
(assert
 (let (($x35750 (and (= likelihoody17 likelihoody17_2) (= y17 y17_2))))
 (=> (= alivey17_2 true) $x35750)))
(assert
 (let (($x35755 (= likelihoody17_2 0.0)))
 (=> (= alivey17_2 false) $x35755)))
(assert
 (let (($x35758 (or (or false alivey17_1) alivey17_2)))
 (= alivey17 $x35758)))
(assert
 (let (($x35765 (and (= likelihoody18 likelihoody18_1) (= y18 y18_1))))
 (=> (= alivey18_1 true) $x35765)))
(assert
 (let (($x35770 (= likelihoody18_1 0.0)))
 (=> (= alivey18_1 false) $x35770)))
(assert
 (let (($x35777 (and (= likelihoody18 likelihoody18_2) (= y18 y18_2))))
 (=> (= alivey18_2 true) $x35777)))
(assert
 (let (($x35782 (= likelihoody18_2 0.0)))
 (=> (= alivey18_2 false) $x35782)))
(assert
 (let (($x35785 (or (or false alivey18_1) alivey18_2)))
 (= alivey18 $x35785)))
(assert
 (let (($x35792 (and (= likelihoody19 likelihoody19_1) (= y19 y19_1))))
 (=> (= alivey19_1 true) $x35792)))
(assert
 (let (($x35797 (= likelihoody19_1 0.0)))
 (=> (= alivey19_1 false) $x35797)))
(assert
 (let (($x35804 (and (= likelihoody19 likelihoody19_2) (= y19 y19_2))))
 (=> (= alivey19_2 true) $x35804)))
(assert
 (let (($x35809 (= likelihoody19_2 0.0)))
 (=> (= alivey19_2 false) $x35809)))
(assert
 (let (($x35812 (or (or false alivey19_1) alivey19_2)))
 (= alivey19 $x35812)))
(assert
 (let (($x35819 (and (= likelihoody20 likelihoody20_1) (= y20 y20_1))))
 (=> (= alivey20_1 true) $x35819)))
(assert
 (let (($x35824 (= likelihoody20_1 0.0)))
 (=> (= alivey20_1 false) $x35824)))
(assert
 (let (($x35831 (and (= likelihoody20 likelihoody20_2) (= y20 y20_2))))
 (=> (= alivey20_2 true) $x35831)))
(assert
 (let (($x35836 (= likelihoody20_2 0.0)))
 (=> (= alivey20_2 false) $x35836)))
(assert
 (let (($x35839 (or (or false alivey20_1) alivey20_2)))
 (= alivey20 $x35839)))
(assert
 (let (($x35846 (and (= likelihoody21 likelihoody21_1) (= y21 y21_1))))
 (=> (= alivey21_1 true) $x35846)))
(assert
 (let (($x35851 (= likelihoody21_1 0.0)))
 (=> (= alivey21_1 false) $x35851)))
(assert
 (let (($x35858 (and (= likelihoody21 likelihoody21_2) (= y21 y21_2))))
 (=> (= alivey21_2 true) $x35858)))
(assert
 (let (($x35863 (= likelihoody21_2 0.0)))
 (=> (= alivey21_2 false) $x35863)))
(assert
 (let (($x35866 (or (or false alivey21_1) alivey21_2)))
 (= alivey21 $x35866)))
(assert
 (let (($x35873 (and (= likelihoody22 likelihoody22_1) (= y22 y22_1))))
 (=> (= alivey22_1 true) $x35873)))
(assert
 (let (($x35878 (= likelihoody22_1 0.0)))
 (=> (= alivey22_1 false) $x35878)))
(assert
 (let (($x35885 (and (= likelihoody22 likelihoody22_2) (= y22 y22_2))))
 (=> (= alivey22_2 true) $x35885)))
(assert
 (let (($x35890 (= likelihoody22_2 0.0)))
 (=> (= alivey22_2 false) $x35890)))
(assert
 (let (($x35893 (or (or false alivey22_1) alivey22_2)))
 (= alivey22 $x35893)))
(assert
 (let (($x35900 (and (= likelihoody23 likelihoody23_1) (= y23 y23_1))))
 (=> (= alivey23_1 true) $x35900)))
(assert
 (let (($x35905 (= likelihoody23_1 0.0)))
 (=> (= alivey23_1 false) $x35905)))
(assert
 (let (($x35912 (and (= likelihoody23 likelihoody23_2) (= y23 y23_2))))
 (=> (= alivey23_2 true) $x35912)))
(assert
 (let (($x35917 (= likelihoody23_2 0.0)))
 (=> (= alivey23_2 false) $x35917)))
(assert
 (let (($x35920 (or (or false alivey23_1) alivey23_2)))
 (= alivey23 $x35920)))
(assert
 (let (($x35925 (and (= likelihoody24 likelihoody24_1) (= y24 y24_1))))
 (=> (= alivey24_1 true) $x35925)))
(assert
 (let (($x35930 (= likelihoody24_1 0.0)))
 (=> (= alivey24_1 false) $x35930)))
(assert
 (let (($x35937 (and (= likelihoody24 likelihoody24_2) (= y24 y24_2))))
 (=> (= alivey24_2 true) $x35937)))
(assert
 (let (($x35942 (= likelihoody24_2 0.0)))
 (=> (= alivey24_2 false) $x35942)))
(assert
 (let (($x35945 (or (or false alivey24_1) alivey24_2)))
 (= alivey24 $x35945)))
(assert
 (let (($x35951 (and (= likelihoody25 likelihoody25_1) (= y25 y25_1))))
 (=> (= alivey25_1 true) $x35951)))
(assert
 (let (($x35956 (= likelihoody25_1 0.0)))
 (=> (= alivey25_1 false) $x35956)))
(assert
 (let (($x35963 (and (= likelihoody25 likelihoody25_2) (= y25 y25_2))))
 (=> (= alivey25_2 true) $x35963)))
(assert
 (let (($x35968 (= likelihoody25_2 0.0)))
 (=> (= alivey25_2 false) $x35968)))
(assert
 (let (($x35971 (or (or false alivey25_1) alivey25_2)))
 (= alivey25 $x35971)))
(assert
 (let (($x35975 (and (= likelihoody26 likelihoody26_1) (= y26 y26_1))))
 (=> (= alivey26_1 true) $x35975)))
(assert
 (let (($x35980 (= likelihoody26_1 0.0)))
 (=> (= alivey26_1 false) $x35980)))
(assert
 (let (($x35987 (and (= likelihoody26 likelihoody26_2) (= y26 y26_2))))
 (=> (= alivey26_2 true) $x35987)))
(assert
 (let (($x35992 (= likelihoody26_2 0.0)))
 (=> (= alivey26_2 false) $x35992)))
(assert
 (let (($x35995 (or (or false alivey26_1) alivey26_2)))
 (= alivey26 $x35995)))
(assert
 (let (($x36001 (and (= likelihoody27 likelihoody27_1) (= y27 y27_1))))
 (=> (= alivey27_1 true) $x36001)))
(assert
 (let (($x36006 (= likelihoody27_1 0.0)))
 (=> (= alivey27_1 false) $x36006)))
(assert
 (let (($x36013 (and (= likelihoody27 likelihoody27_2) (= y27 y27_2))))
 (=> (= alivey27_2 true) $x36013)))
(assert
 (let (($x36018 (= likelihoody27_2 0.0)))
 (=> (= alivey27_2 false) $x36018)))
(assert
 (let (($x36021 (or (or false alivey27_1) alivey27_2)))
 (= alivey27 $x36021)))
(assert
 (let (($x36025 (and (= likelihoody28 likelihoody28_1) (= y28 y28_1))))
 (=> (= alivey28_1 true) $x36025)))
(assert
 (let (($x36030 (= likelihoody28_1 0.0)))
 (=> (= alivey28_1 false) $x36030)))
(assert
 (let (($x36037 (and (= likelihoody28 likelihoody28_2) (= y28 y28_2))))
 (=> (= alivey28_2 true) $x36037)))
(assert
 (let (($x36042 (= likelihoody28_2 0.0)))
 (=> (= alivey28_2 false) $x36042)))
(assert
 (let (($x36045 (or (or false alivey28_1) alivey28_2)))
 (= alivey28 $x36045)))
(assert
 (let (($x36052 (and (= likelihoody29 likelihoody29_1) (= y29 y29_1))))
 (=> (= alivey29_1 true) $x36052)))
(assert
 (let (($x36057 (= likelihoody29_1 0.0)))
 (=> (= alivey29_1 false) $x36057)))
(assert
 (let (($x36064 (and (= likelihoody29 likelihoody29_2) (= y29 y29_2))))
 (=> (= alivey29_2 true) $x36064)))
(assert
 (let (($x36069 (= likelihoody29_2 0.0)))
 (=> (= alivey29_2 false) $x36069)))
(assert
 (let (($x36072 (or (or false alivey29_1) alivey29_2)))
 (= alivey29 $x36072)))
(assert
 (let (($x36079 (and (= likelihoody30 likelihoody30_1) (= y30 y30_1))))
 (=> (= alivey30_1 true) $x36079)))
(assert
 (let (($x36084 (= likelihoody30_1 0.0)))
 (=> (= alivey30_1 false) $x36084)))
(assert
 (let (($x36091 (and (= likelihoody30 likelihoody30_2) (= y30 y30_2))))
 (=> (= alivey30_2 true) $x36091)))
(assert
 (let (($x36096 (= likelihoody30_2 0.0)))
 (=> (= alivey30_2 false) $x36096)))
(assert
 (let (($x36099 (or (or false alivey30_1) alivey30_2)))
 (= alivey30 $x36099)))
(assert
 (let (($x36104 (and (= likelihoody31 likelihoody31_1) (= y31 y31_1))))
 (=> (= alivey31_1 true) $x36104)))
(assert
 (let (($x36109 (= likelihoody31_1 0.0)))
 (=> (= alivey31_1 false) $x36109)))
(assert
 (let (($x36116 (and (= likelihoody31 likelihoody31_2) (= y31 y31_2))))
 (=> (= alivey31_2 true) $x36116)))
(assert
 (let (($x36121 (= likelihoody31_2 0.0)))
 (=> (= alivey31_2 false) $x36121)))
(assert
 (let (($x36124 (or (or false alivey31_1) alivey31_2)))
 (= alivey31 $x36124)))
(assert
 (let (($x36129 (and (= likelihoody32 likelihoody32_1) (= y32 y32_1))))
 (=> (= alivey32_1 true) $x36129)))
(assert
 (let (($x36134 (= likelihoody32_1 0.0)))
 (=> (= alivey32_1 false) $x36134)))
(assert
 (let (($x36141 (and (= likelihoody32 likelihoody32_2) (= y32 y32_2))))
 (=> (= alivey32_2 true) $x36141)))
(assert
 (let (($x36146 (= likelihoody32_2 0.0)))
 (=> (= alivey32_2 false) $x36146)))
(assert
 (let (($x36149 (or (or false alivey32_1) alivey32_2)))
 (= alivey32 $x36149)))
(assert
 (let (($x36154 (and (= likelihoody33 likelihoody33_1) (= y33 y33_1))))
 (=> (= alivey33_1 true) $x36154)))
(assert
 (let (($x36159 (= likelihoody33_1 0.0)))
 (=> (= alivey33_1 false) $x36159)))
(assert
 (let (($x36166 (and (= likelihoody33 likelihoody33_2) (= y33 y33_2))))
 (=> (= alivey33_2 true) $x36166)))
(assert
 (let (($x36171 (= likelihoody33_2 0.0)))
 (=> (= alivey33_2 false) $x36171)))
(assert
 (let (($x36174 (or (or false alivey33_1) alivey33_2)))
 (= alivey33 $x36174)))
(assert
 (let (($x36178 (and (= likelihoody34 likelihoody34_1) (= y34 y34_1))))
 (=> (= alivey34_1 true) $x36178)))
(assert
 (let (($x36183 (= likelihoody34_1 0.0)))
 (=> (= alivey34_1 false) $x36183)))
(assert
 (let (($x36190 (and (= likelihoody34 likelihoody34_2) (= y34 y34_2))))
 (=> (= alivey34_2 true) $x36190)))
(assert
 (let (($x36195 (= likelihoody34_2 0.0)))
 (=> (= alivey34_2 false) $x36195)))
(assert
 (let (($x36198 (or (or false alivey34_1) alivey34_2)))
 (= alivey34 $x36198)))
(assert
 (let (($x36205 (and (= likelihoody35 likelihoody35_1) (= y35 y35_1))))
 (=> (= alivey35_1 true) $x36205)))
(assert
 (let (($x36210 (= likelihoody35_1 0.0)))
 (=> (= alivey35_1 false) $x36210)))
(assert
 (let (($x36217 (and (= likelihoody35 likelihoody35_2) (= y35 y35_2))))
 (=> (= alivey35_2 true) $x36217)))
(assert
 (let (($x36222 (= likelihoody35_2 0.0)))
 (=> (= alivey35_2 false) $x36222)))
(assert
 (let (($x36225 (or (or false alivey35_1) alivey35_2)))
 (= alivey35 $x36225)))
(assert
 (let (($x36232 (and (= likelihoody36 likelihoody36_1) (= y36 y36_1))))
 (=> (= alivey36_1 true) $x36232)))
(assert
 (let (($x36237 (= likelihoody36_1 0.0)))
 (=> (= alivey36_1 false) $x36237)))
(assert
 (let (($x36244 (and (= likelihoody36 likelihoody36_2) (= y36 y36_2))))
 (=> (= alivey36_2 true) $x36244)))
(assert
 (let (($x36249 (= likelihoody36_2 0.0)))
 (=> (= alivey36_2 false) $x36249)))
(assert
 (let (($x36252 (or (or false alivey36_1) alivey36_2)))
 (= alivey36 $x36252)))
(assert
 (let (($x36256 (and (= likelihoody37 likelihoody37_1) (= y37 y37_1))))
 (=> (= alivey37_1 true) $x36256)))
(assert
 (let (($x36261 (= likelihoody37_1 0.0)))
 (=> (= alivey37_1 false) $x36261)))
(assert
 (let (($x36268 (and (= likelihoody37 likelihoody37_2) (= y37 y37_2))))
 (=> (= alivey37_2 true) $x36268)))
(assert
 (let (($x36273 (= likelihoody37_2 0.0)))
 (=> (= alivey37_2 false) $x36273)))
(assert
 (let (($x36276 (or (or false alivey37_1) alivey37_2)))
 (= alivey37 $x36276)))
(assert
 (let (($x27653 (and (= likelihoody38 likelihoody38_1) (= y38 y38_1))))
 (=> (= alivey38_1 true) $x27653)))
(assert
 (let (($x36283 (= likelihoody38_1 0.0)))
 (=> (= alivey38_1 false) $x36283)))
(assert
 (let (($x36290 (and (= likelihoody38 likelihoody38_2) (= y38 y38_2))))
 (=> (= alivey38_2 true) $x36290)))
(assert
 (let (($x36295 (= likelihoody38_2 0.0)))
 (=> (= alivey38_2 false) $x36295)))
(assert
 (let (($x36298 (or (or false alivey38_1) alivey38_2)))
 (= alivey38 $x36298)))
(assert
 (let (($x36302 (and (= likelihoody39 likelihoody39_1) (= y39 y39_1))))
 (=> (= alivey39_1 true) $x36302)))
(assert
 (let (($x36307 (= likelihoody39_1 0.0)))
 (=> (= alivey39_1 false) $x36307)))
(assert
 (let (($x36314 (and (= likelihoody39 likelihoody39_2) (= y39 y39_2))))
 (=> (= alivey39_2 true) $x36314)))
(assert
 (let (($x36319 (= likelihoody39_2 0.0)))
 (=> (= alivey39_2 false) $x36319)))
(assert
 (let (($x36322 (or (or false alivey39_1) alivey39_2)))
 (= alivey39 $x36322)))
(assert
 (let (($x36329 (and (= likelihoody40 likelihoody40_1) (= y40 y40_1))))
 (=> (= alivey40_1 true) $x36329)))
(assert
 (let (($x36334 (= likelihoody40_1 0.0)))
 (=> (= alivey40_1 false) $x36334)))
(assert
 (let (($x36341 (and (= likelihoody40 likelihoody40_2) (= y40 y40_2))))
 (=> (= alivey40_2 true) $x36341)))
(assert
 (let (($x36346 (= likelihoody40_2 0.0)))
 (=> (= alivey40_2 false) $x36346)))
(assert
 (let (($x36349 (or (or false alivey40_1) alivey40_2)))
 (= alivey40 $x36349)))
(assert
 (let (($x36354 (and (= likelihoody41 likelihoody41_1) (= y41 y41_1))))
 (=> (= alivey41_1 true) $x36354)))
(assert
 (let (($x36359 (= likelihoody41_1 0.0)))
 (=> (= alivey41_1 false) $x36359)))
(assert
 (let (($x36366 (and (= likelihoody41 likelihoody41_2) (= y41 y41_2))))
 (=> (= alivey41_2 true) $x36366)))
(assert
 (let (($x36371 (= likelihoody41_2 0.0)))
 (=> (= alivey41_2 false) $x36371)))
(assert
 (let (($x36374 (or (or false alivey41_1) alivey41_2)))
 (= alivey41 $x36374)))
(assert
 (let (($x36379 (and (= likelihoody42 likelihoody42_1) (= y42 y42_1))))
 (=> (= alivey42_1 true) $x36379)))
(assert
 (let (($x36384 (= likelihoody42_1 0.0)))
 (=> (= alivey42_1 false) $x36384)))
(assert
 (let (($x36391 (and (= likelihoody42 likelihoody42_2) (= y42 y42_2))))
 (=> (= alivey42_2 true) $x36391)))
(assert
 (let (($x36396 (= likelihoody42_2 0.0)))
 (=> (= alivey42_2 false) $x36396)))
(assert
 (let (($x36399 (or (or false alivey42_1) alivey42_2)))
 (= alivey42 $x36399)))
(assert
 (let (($x36404 (and (= likelihoody43 likelihoody43_1) (= y43 y43_1))))
 (=> (= alivey43_1 true) $x36404)))
(assert
 (let (($x36409 (= likelihoody43_1 0.0)))
 (=> (= alivey43_1 false) $x36409)))
(assert
 (let (($x36416 (and (= likelihoody43 likelihoody43_2) (= y43 y43_2))))
 (=> (= alivey43_2 true) $x36416)))
(assert
 (let (($x36421 (= likelihoody43_2 0.0)))
 (=> (= alivey43_2 false) $x36421)))
(assert
 (let (($x36424 (or (or false alivey43_1) alivey43_2)))
 (= alivey43 $x36424)))
(assert
 (let (($x36428 (and (= likelihoody44 likelihoody44_1) (= y44 y44_1))))
 (=> (= alivey44_1 true) $x36428)))
(assert
 (let (($x36433 (= likelihoody44_1 0.0)))
 (=> (= alivey44_1 false) $x36433)))
(assert
 (let (($x36440 (and (= likelihoody44 likelihoody44_2) (= y44 y44_2))))
 (=> (= alivey44_2 true) $x36440)))
(assert
 (let (($x36445 (= likelihoody44_2 0.0)))
 (=> (= alivey44_2 false) $x36445)))
(assert
 (let (($x36448 (or (or false alivey44_1) alivey44_2)))
 (= alivey44 $x36448)))
(assert
 (let (($x36455 (and (= likelihoody45 likelihoody45_1) (= y45 y45_1))))
 (=> (= alivey45_1 true) $x36455)))
(assert
 (let (($x36460 (= likelihoody45_1 0.0)))
 (=> (= alivey45_1 false) $x36460)))
(assert
 (let (($x36467 (and (= likelihoody45 likelihoody45_2) (= y45 y45_2))))
 (=> (= alivey45_2 true) $x36467)))
(assert
 (let (($x36472 (= likelihoody45_2 0.0)))
 (=> (= alivey45_2 false) $x36472)))
(assert
 (let (($x36475 (or (or false alivey45_1) alivey45_2)))
 (= alivey45 $x36475)))
(assert
 (let (($x36482 (and (= likelihoody46 likelihoody46_1) (= y46 y46_1))))
 (=> (= alivey46_1 true) $x36482)))
(assert
 (let (($x36487 (= likelihoody46_1 0.0)))
 (=> (= alivey46_1 false) $x36487)))
(assert
 (let (($x36494 (and (= likelihoody46 likelihoody46_2) (= y46 y46_2))))
 (=> (= alivey46_2 true) $x36494)))
(assert
 (let (($x36499 (= likelihoody46_2 0.0)))
 (=> (= alivey46_2 false) $x36499)))
(assert
 (let (($x36502 (or (or false alivey46_1) alivey46_2)))
 (= alivey46 $x36502)))
(assert
 (let (($x36506 (and (= likelihoody47 likelihoody47_1) (= y47 y47_1))))
 (=> (= alivey47_1 true) $x36506)))
(assert
 (let (($x36511 (= likelihoody47_1 0.0)))
 (=> (= alivey47_1 false) $x36511)))
(assert
 (let (($x36518 (and (= likelihoody47 likelihoody47_2) (= y47 y47_2))))
 (=> (= alivey47_2 true) $x36518)))
(assert
 (let (($x36523 (= likelihoody47_2 0.0)))
 (=> (= alivey47_2 false) $x36523)))
(assert
 (let (($x36526 (or (or false alivey47_1) alivey47_2)))
 (= alivey47 $x36526)))
(assert
 (let (($x8888 (and (= likelihoody48 likelihoody48_1) (= y48 y48_1))))
 (=> (= alivey48_1 true) $x8888)))
(assert
 (let (($x36533 (= likelihoody48_1 0.0)))
 (=> (= alivey48_1 false) $x36533)))
(assert
 (let (($x36540 (and (= likelihoody48 likelihoody48_2) (= y48 y48_2))))
 (=> (= alivey48_2 true) $x36540)))
(assert
 (let (($x36545 (= likelihoody48_2 0.0)))
 (=> (= alivey48_2 false) $x36545)))
(assert
 (let (($x36548 (or (or false alivey48_1) alivey48_2)))
 (= alivey48 $x36548)))
(assert
 (let (($x36552 (and (= likelihoody49 likelihoody49_1) (= y49 y49_1))))
 (=> (= alivey49_1 true) $x36552)))
(assert
 (let (($x36557 (= likelihoody49_1 0.0)))
 (=> (= alivey49_1 false) $x36557)))
(assert
 (let (($x36564 (and (= likelihoody49 likelihoody49_2) (= y49 y49_2))))
 (=> (= alivey49_2 true) $x36564)))
(assert
 (let (($x36569 (= likelihoody49_2 0.0)))
 (=> (= alivey49_2 false) $x36569)))
(assert
 (let (($x36572 (or (or false alivey49_1) alivey49_2)))
 (= alivey49 $x36572)))
(assert
 (let (($x36578 (and (= likelihoody50 likelihoody50_1) (= y50 y50_1))))
 (=> (= alivey50_1 true) $x36578)))
(assert
 (let (($x36583 (= likelihoody50_1 0.0)))
 (=> (= alivey50_1 false) $x36583)))
(assert
 (let (($x36590 (and (= likelihoody50 likelihoody50_2) (= y50 y50_2))))
 (=> (= alivey50_2 true) $x36590)))
(assert
 (let (($x36595 (= likelihoody50_2 0.0)))
 (=> (= alivey50_2 false) $x36595)))
(assert
 (let (($x36598 (or (or false alivey50_1) alivey50_2)))
 (= alivey50 $x36598)))
(assert
 (let (($x36603 (and (= likelihoody51 likelihoody51_1) (= y51 y51_1))))
 (=> (= alivey51_1 true) $x36603)))
(assert
 (let (($x36608 (= likelihoody51_1 0.0)))
 (=> (= alivey51_1 false) $x36608)))
(assert
 (let (($x36615 (and (= likelihoody51 likelihoody51_2) (= y51 y51_2))))
 (=> (= alivey51_2 true) $x36615)))
(assert
 (let (($x36620 (= likelihoody51_2 0.0)))
 (=> (= alivey51_2 false) $x36620)))
(assert
 (let (($x36623 (or (or false alivey51_1) alivey51_2)))
 (= alivey51 $x36623)))
(assert
 (let (($x36628 (and (= likelihoody52 likelihoody52_1) (= y52 y52_1))))
 (=> (= alivey52_1 true) $x36628)))
(assert
 (let (($x36633 (= likelihoody52_1 0.0)))
 (=> (= alivey52_1 false) $x36633)))
(assert
 (let (($x36640 (and (= likelihoody52 likelihoody52_2) (= y52 y52_2))))
 (=> (= alivey52_2 true) $x36640)))
(assert
 (let (($x36645 (= likelihoody52_2 0.0)))
 (=> (= alivey52_2 false) $x36645)))
(assert
 (let (($x36648 (or (or false alivey52_1) alivey52_2)))
 (= alivey52 $x36648)))
(assert
 (let (($x36653 (and (= likelihoody53 likelihoody53_1) (= y53 y53_1))))
 (=> (= alivey53_1 true) $x36653)))
(assert
 (let (($x36658 (= likelihoody53_1 0.0)))
 (=> (= alivey53_1 false) $x36658)))
(assert
 (let (($x36665 (and (= likelihoody53 likelihoody53_2) (= y53 y53_2))))
 (=> (= alivey53_2 true) $x36665)))
(assert
 (let (($x36670 (= likelihoody53_2 0.0)))
 (=> (= alivey53_2 false) $x36670)))
(assert
 (let (($x36673 (or (or false alivey53_1) alivey53_2)))
 (= alivey53 $x36673)))
(assert
 (let (($x36677 (and (= likelihoody54 likelihoody54_1) (= y54 y54_1))))
 (=> (= alivey54_1 true) $x36677)))
(assert
 (let (($x36682 (= likelihoody54_1 0.0)))
 (=> (= alivey54_1 false) $x36682)))
(assert
 (let (($x36689 (and (= likelihoody54 likelihoody54_2) (= y54 y54_2))))
 (=> (= alivey54_2 true) $x36689)))
(assert
 (let (($x36694 (= likelihoody54_2 0.0)))
 (=> (= alivey54_2 false) $x36694)))
(assert
 (let (($x36697 (or (or false alivey54_1) alivey54_2)))
 (= alivey54 $x36697)))
(assert
 (let (($x36704 (and (= likelihoody55 likelihoody55_1) (= y55 y55_1))))
 (=> (= alivey55_1 true) $x36704)))
(assert
 (let (($x36709 (= likelihoody55_1 0.0)))
 (=> (= alivey55_1 false) $x36709)))
(assert
 (let (($x36716 (and (= likelihoody55 likelihoody55_2) (= y55 y55_2))))
 (=> (= alivey55_2 true) $x36716)))
(assert
 (let (($x36721 (= likelihoody55_2 0.0)))
 (=> (= alivey55_2 false) $x36721)))
(assert
 (let (($x36724 (or (or false alivey55_1) alivey55_2)))
 (= alivey55 $x36724)))
(assert
 (let (($x36731 (and (= likelihoody56 likelihoody56_1) (= y56 y56_1))))
 (=> (= alivey56_1 true) $x36731)))
(assert
 (let (($x36736 (= likelihoody56_1 0.0)))
 (=> (= alivey56_1 false) $x36736)))
(assert
 (let (($x36743 (and (= likelihoody56 likelihoody56_2) (= y56 y56_2))))
 (=> (= alivey56_2 true) $x36743)))
(assert
 (let (($x36748 (= likelihoody56_2 0.0)))
 (=> (= alivey56_2 false) $x36748)))
(assert
 (let (($x36751 (or (or false alivey56_1) alivey56_2)))
 (= alivey56 $x36751)))
(assert
 (let (($x36755 (and (= likelihoody57 likelihoody57_1) (= y57 y57_1))))
 (=> (= alivey57_1 true) $x36755)))
(assert
 (let (($x36760 (= likelihoody57_1 0.0)))
 (=> (= alivey57_1 false) $x36760)))
(assert
 (let (($x36767 (and (= likelihoody57 likelihoody57_2) (= y57 y57_2))))
 (=> (= alivey57_2 true) $x36767)))
(assert
 (let (($x36772 (= likelihoody57_2 0.0)))
 (=> (= alivey57_2 false) $x36772)))
(assert
 (let (($x36775 (or (or false alivey57_1) alivey57_2)))
 (= alivey57 $x36775)))
(assert
 (let (($x8962 (and (= likelihoody58 likelihoody58_1) (= y58 y58_1))))
 (=> (= alivey58_1 true) $x8962)))
(assert
 (let (($x36782 (= likelihoody58_1 0.0)))
 (=> (= alivey58_1 false) $x36782)))
(assert
 (let (($x36789 (and (= likelihoody58 likelihoody58_2) (= y58 y58_2))))
 (=> (= alivey58_2 true) $x36789)))
(assert
 (let (($x36794 (= likelihoody58_2 0.0)))
 (=> (= alivey58_2 false) $x36794)))
(assert
 (let (($x36797 (or (or false alivey58_1) alivey58_2)))
 (= alivey58 $x36797)))
(assert
 (let (($x36801 (and (= likelihoody59 likelihoody59_1) (= y59 y59_1))))
 (=> (= alivey59_1 true) $x36801)))
(assert
 (let (($x36806 (= likelihoody59_1 0.0)))
 (=> (= alivey59_1 false) $x36806)))
(assert
 (let (($x36813 (and (= likelihoody59 likelihoody59_2) (= y59 y59_2))))
 (=> (= alivey59_2 true) $x36813)))
(assert
 (let (($x36818 (= likelihoody59_2 0.0)))
 (=> (= alivey59_2 false) $x36818)))
(assert
 (let (($x36821 (or (or false alivey59_1) alivey59_2)))
 (= alivey59 $x36821)))
(assert
 (let (($x36827 (and (= likelihoody60 likelihoody60_1) (= y60 y60_1))))
 (=> (= alivey60_1 true) $x36827)))
(assert
 (let (($x36832 (= likelihoody60_1 0.0)))
 (=> (= alivey60_1 false) $x36832)))
(assert
 (let (($x36839 (and (= likelihoody60 likelihoody60_2) (= y60 y60_2))))
 (=> (= alivey60_2 true) $x36839)))
(assert
 (let (($x36844 (= likelihoody60_2 0.0)))
 (=> (= alivey60_2 false) $x36844)))
(assert
 (let (($x36847 (or (or false alivey60_1) alivey60_2)))
 (= alivey60 $x36847)))
(assert
 (let (($x36854 (and (= likelihoody61 likelihoody61_1) (= y61 y61_1))))
 (=> (= alivey61_1 true) $x36854)))
(assert
 (let (($x36859 (= likelihoody61_1 0.0)))
 (=> (= alivey61_1 false) $x36859)))
(assert
 (let (($x36866 (and (= likelihoody61 likelihoody61_2) (= y61 y61_2))))
 (=> (= alivey61_2 true) $x36866)))
(assert
 (let (($x36871 (= likelihoody61_2 0.0)))
 (=> (= alivey61_2 false) $x36871)))
(assert
 (let (($x36874 (or (or false alivey61_1) alivey61_2)))
 (= alivey61 $x36874)))
(assert
 (let (($x36880 (and (= likelihoody62 likelihoody62_1) (= y62 y62_1))))
 (=> (= alivey62_1 true) $x36880)))
(assert
 (let (($x36885 (= likelihoody62_1 0.0)))
 (=> (= alivey62_1 false) $x36885)))
(assert
 (let (($x36892 (and (= likelihoody62 likelihoody62_2) (= y62 y62_2))))
 (=> (= alivey62_2 true) $x36892)))
(assert
 (let (($x36897 (= likelihoody62_2 0.0)))
 (=> (= alivey62_2 false) $x36897)))
(assert
 (let (($x36900 (or (or false alivey62_1) alivey62_2)))
 (= alivey62 $x36900)))
(assert
 (let (($x36905 (and (= likelihoody63 likelihoody63_1) (= y63 y63_1))))
 (=> (= alivey63_1 true) $x36905)))
(assert
 (let (($x36910 (= likelihoody63_1 0.0)))
 (=> (= alivey63_1 false) $x36910)))
(assert
 (let (($x36917 (and (= likelihoody63 likelihoody63_2) (= y63 y63_2))))
 (=> (= alivey63_2 true) $x36917)))
(assert
 (let (($x36922 (= likelihoody63_2 0.0)))
 (=> (= alivey63_2 false) $x36922)))
(assert
 (let (($x36925 (or (or false alivey63_1) alivey63_2)))
 (= alivey63 $x36925)))
(assert
 (let (($x36929 (and (= likelihoody64 likelihoody64_1) (= y64 y64_1))))
 (=> (= alivey64_1 true) $x36929)))
(assert
 (let (($x36934 (= likelihoody64_1 0.0)))
 (=> (= alivey64_1 false) $x36934)))
(assert
 (let (($x36941 (and (= likelihoody64 likelihoody64_2) (= y64 y64_2))))
 (=> (= alivey64_2 true) $x36941)))
(assert
 (let (($x36946 (= likelihoody64_2 0.0)))
 (=> (= alivey64_2 false) $x36946)))
(assert
 (let (($x36949 (or (or false alivey64_1) alivey64_2)))
 (= alivey64 $x36949)))
(assert
 (let (($x36955 (and (= likelihoody65 likelihoody65_1) (= y65 y65_1))))
 (=> (= alivey65_1 true) $x36955)))
(assert
 (let (($x36960 (= likelihoody65_1 0.0)))
 (=> (= alivey65_1 false) $x36960)))
(assert
 (let (($x36967 (and (= likelihoody65 likelihoody65_2) (= y65 y65_2))))
 (=> (= alivey65_2 true) $x36967)))
(assert
 (let (($x36972 (= likelihoody65_2 0.0)))
 (=> (= alivey65_2 false) $x36972)))
(assert
 (let (($x36975 (or (or false alivey65_1) alivey65_2)))
 (= alivey65 $x36975)))
(assert
 (let (($x36982 (and (= likelihoody66 likelihoody66_1) (= y66 y66_1))))
 (=> (= alivey66_1 true) $x36982)))
(assert
 (let (($x36987 (= likelihoody66_1 0.0)))
 (=> (= alivey66_1 false) $x36987)))
(assert
 (let (($x36994 (and (= likelihoody66 likelihoody66_2) (= y66 y66_2))))
 (=> (= alivey66_2 true) $x36994)))
(assert
 (let (($x36999 (= likelihoody66_2 0.0)))
 (=> (= alivey66_2 false) $x36999)))
(assert
 (let (($x37002 (or (or false alivey66_1) alivey66_2)))
 (= alivey66 $x37002)))
(assert
 (let (($x37008 (and (= likelihoody67 likelihoody67_1) (= y67 y67_1))))
 (=> (= alivey67_1 true) $x37008)))
(assert
 (let (($x37013 (= likelihoody67_1 0.0)))
 (=> (= alivey67_1 false) $x37013)))
(assert
 (let (($x37020 (and (= likelihoody67 likelihoody67_2) (= y67 y67_2))))
 (=> (= alivey67_2 true) $x37020)))
(assert
 (let (($x37025 (= likelihoody67_2 0.0)))
 (=> (= alivey67_2 false) $x37025)))
(assert
 (let (($x37028 (or (or false alivey67_1) alivey67_2)))
 (= alivey67 $x37028)))
(assert
 (let (($x37033 (and (= likelihoody68 likelihoody68_1) (= y68 y68_1))))
 (=> (= alivey68_1 true) $x37033)))
(assert
 (let (($x37038 (= likelihoody68_1 0.0)))
 (=> (= alivey68_1 false) $x37038)))
(assert
 (let (($x37045 (and (= likelihoody68 likelihoody68_2) (= y68 y68_2))))
 (=> (= alivey68_2 true) $x37045)))
(assert
 (let (($x37050 (= likelihoody68_2 0.0)))
 (=> (= alivey68_2 false) $x37050)))
(assert
 (let (($x37053 (or (or false alivey68_1) alivey68_2)))
 (= alivey68 $x37053)))
(assert
 (let (($x37057 (and (= likelihoody69 likelihoody69_1) (= y69 y69_1))))
 (=> (= alivey69_1 true) $x37057)))
(assert
 (let (($x37062 (= likelihoody69_1 0.0)))
 (=> (= alivey69_1 false) $x37062)))
(assert
 (let (($x37069 (and (= likelihoody69 likelihoody69_2) (= y69 y69_2))))
 (=> (= alivey69_2 true) $x37069)))
(assert
 (let (($x37074 (= likelihoody69_2 0.0)))
 (=> (= alivey69_2 false) $x37074)))
(assert
 (let (($x37077 (or (or false alivey69_1) alivey69_2)))
 (= alivey69 $x37077)))
(assert
 (let (($x37083 (and (= likelihoody70 likelihoody70_1) (= y70 y70_1))))
 (=> (= alivey70_1 true) $x37083)))
(assert
 (let (($x37088 (= likelihoody70_1 0.0)))
 (=> (= alivey70_1 false) $x37088)))
(assert
 (let (($x37095 (and (= likelihoody70 likelihoody70_2) (= y70 y70_2))))
 (=> (= alivey70_2 true) $x37095)))
(assert
 (let (($x37100 (= likelihoody70_2 0.0)))
 (=> (= alivey70_2 false) $x37100)))
(assert
 (let (($x37103 (or (or false alivey70_1) alivey70_2)))
 (= alivey70 $x37103)))
(assert
 (let (($x37106 (and (= likelihoody71 likelihoody71_1) (= y71 y71_1))))
 (=> (= alivey71_1 true) $x37106)))
(assert
 (let (($x37111 (= likelihoody71_1 0.0)))
 (=> (= alivey71_1 false) $x37111)))
(assert
 (let (($x37118 (and (= likelihoody71 likelihoody71_2) (= y71 y71_2))))
 (=> (= alivey71_2 true) $x37118)))
(assert
 (let (($x37123 (= likelihoody71_2 0.0)))
 (=> (= alivey71_2 false) $x37123)))
(assert
 (let (($x37126 (or (or false alivey71_1) alivey71_2)))
 (= alivey71 $x37126)))
(assert
 (let (($x37130 (and (= likelihoody72 likelihoody72_1) (= y72 y72_1))))
 (=> (= alivey72_1 true) $x37130)))
(assert
 (let (($x37135 (= likelihoody72_1 0.0)))
 (=> (= alivey72_1 false) $x37135)))
(assert
 (let (($x37142 (and (= likelihoody72 likelihoody72_2) (= y72 y72_2))))
 (=> (= alivey72_2 true) $x37142)))
(assert
 (let (($x37147 (= likelihoody72_2 0.0)))
 (=> (= alivey72_2 false) $x37147)))
(assert
 (let (($x37150 (or (or false alivey72_1) alivey72_2)))
 (= alivey72 $x37150)))
(assert
 (let (($x37156 (and (= likelihoody73 likelihoody73_1) (= y73 y73_1))))
 (=> (= alivey73_1 true) $x37156)))
(assert
 (let (($x37161 (= likelihoody73_1 0.0)))
 (=> (= alivey73_1 false) $x37161)))
(assert
 (let (($x37168 (and (= likelihoody73 likelihoody73_2) (= y73 y73_2))))
 (=> (= alivey73_2 true) $x37168)))
(assert
 (let (($x37173 (= likelihoody73_2 0.0)))
 (=> (= alivey73_2 false) $x37173)))
(assert
 (let (($x37176 (or (or false alivey73_1) alivey73_2)))
 (= alivey73 $x37176)))
(assert
 (let (($x37183 (and (= likelihoody74 likelihoody74_1) (= y74 y74_1))))
 (=> (= alivey74_1 true) $x37183)))
(assert
 (let (($x37188 (= likelihoody74_1 0.0)))
 (=> (= alivey74_1 false) $x37188)))
(assert
 (let (($x37195 (and (= likelihoody74 likelihoody74_2) (= y74 y74_2))))
 (=> (= alivey74_2 true) $x37195)))
(assert
 (let (($x37200 (= likelihoody74_2 0.0)))
 (=> (= alivey74_2 false) $x37200)))
(assert
 (let (($x37203 (or (or false alivey74_1) alivey74_2)))
 (= alivey74 $x37203)))
(assert
 (let (($x37208 (and (= likelihoody75 likelihoody75_1) (= y75 y75_1))))
 (=> (= alivey75_1 true) $x37208)))
(assert
 (let (($x37213 (= likelihoody75_1 0.0)))
 (=> (= alivey75_1 false) $x37213)))
(assert
 (let (($x37220 (and (= likelihoody75 likelihoody75_2) (= y75 y75_2))))
 (=> (= alivey75_2 true) $x37220)))
(assert
 (let (($x37225 (= likelihoody75_2 0.0)))
 (=> (= alivey75_2 false) $x37225)))
(assert
 (let (($x37228 (or (or false alivey75_1) alivey75_2)))
 (= alivey75 $x37228)))
(assert
 (let (($x37233 (and (= likelihoody76 likelihoody76_1) (= y76 y76_1))))
 (=> (= alivey76_1 true) $x37233)))
(assert
 (let (($x37238 (= likelihoody76_1 0.0)))
 (=> (= alivey76_1 false) $x37238)))
(assert
 (let (($x37245 (and (= likelihoody76 likelihoody76_2) (= y76 y76_2))))
 (=> (= alivey76_2 true) $x37245)))
(assert
 (let (($x37250 (= likelihoody76_2 0.0)))
 (=> (= alivey76_2 false) $x37250)))
(assert
 (let (($x37253 (or (or false alivey76_1) alivey76_2)))
 (= alivey76 $x37253)))
(assert
 (let (($x37258 (and (= likelihoody77 likelihoody77_1) (= y77 y77_1))))
 (=> (= alivey77_1 true) $x37258)))
(assert
 (let (($x37263 (= likelihoody77_1 0.0)))
 (=> (= alivey77_1 false) $x37263)))
(assert
 (let (($x37270 (and (= likelihoody77 likelihoody77_2) (= y77 y77_2))))
 (=> (= alivey77_2 true) $x37270)))
(assert
 (let (($x37275 (= likelihoody77_2 0.0)))
 (=> (= alivey77_2 false) $x37275)))
(assert
 (let (($x37278 (or (or false alivey77_1) alivey77_2)))
 (= alivey77 $x37278)))
(assert
 (let (($x37282 (and (= likelihoody78 likelihoody78_1) (= y78 y78_1))))
 (=> (= alivey78_1 true) $x37282)))
(assert
 (let (($x37287 (= likelihoody78_1 0.0)))
 (=> (= alivey78_1 false) $x37287)))
(assert
 (let (($x37294 (and (= likelihoody78 likelihoody78_2) (= y78 y78_2))))
 (=> (= alivey78_2 true) $x37294)))
(assert
 (let (($x37299 (= likelihoody78_2 0.0)))
 (=> (= alivey78_2 false) $x37299)))
(assert
 (let (($x37302 (or (or false alivey78_1) alivey78_2)))
 (= alivey78 $x37302)))
(assert
 (let (($x37309 (and (= likelihoody79 likelihoody79_1) (= y79 y79_1))))
 (=> (= alivey79_1 true) $x37309)))
(assert
 (let (($x37314 (= likelihoody79_1 0.0)))
 (=> (= alivey79_1 false) $x37314)))
(assert
 (let (($x37321 (and (= likelihoody79 likelihoody79_2) (= y79 y79_2))))
 (=> (= alivey79_2 true) $x37321)))
(assert
 (let (($x37326 (= likelihoody79_2 0.0)))
 (=> (= alivey79_2 false) $x37326)))
(assert
 (let (($x37329 (or (or false alivey79_1) alivey79_2)))
 (= alivey79 $x37329)))
(assert
 (let (($x37336 (and (= likelihoody80 likelihoody80_1) (= y80 y80_1))))
 (=> (= alivey80_1 true) $x37336)))
(assert
 (let (($x37341 (= likelihoody80_1 0.0)))
 (=> (= alivey80_1 false) $x37341)))
(assert
 (let (($x37348 (and (= likelihoody80 likelihoody80_2) (= y80 y80_2))))
 (=> (= alivey80_2 true) $x37348)))
(assert
 (let (($x37353 (= likelihoody80_2 0.0)))
 (=> (= alivey80_2 false) $x37353)))
(assert
 (let (($x37356 (or (or false alivey80_1) alivey80_2)))
 (= alivey80 $x37356)))
(assert
 (let (($x37360 (and (= likelihoody81 likelihoody81_1) (= y81 y81_1))))
 (=> (= alivey81_1 true) $x37360)))
(assert
 (let (($x37365 (= likelihoody81_1 0.0)))
 (=> (= alivey81_1 false) $x37365)))
(assert
 (let (($x37372 (and (= likelihoody81 likelihoody81_2) (= y81 y81_2))))
 (=> (= alivey81_2 true) $x37372)))
(assert
 (let (($x37377 (= likelihoody81_2 0.0)))
 (=> (= alivey81_2 false) $x37377)))
(assert
 (let (($x37380 (or (or false alivey81_1) alivey81_2)))
 (= alivey81 $x37380)))
(assert
 (let (($x27711 (and (= likelihoody82 likelihoody82_1) (= y82 y82_1))))
 (=> (= alivey82_1 true) $x27711)))
(assert
 (let (($x37387 (= likelihoody82_1 0.0)))
 (=> (= alivey82_1 false) $x37387)))
(assert
 (let (($x37394 (and (= likelihoody82 likelihoody82_2) (= y82 y82_2))))
 (=> (= alivey82_2 true) $x37394)))
(assert
 (let (($x37399 (= likelihoody82_2 0.0)))
 (=> (= alivey82_2 false) $x37399)))
(assert
 (let (($x37402 (or (or false alivey82_1) alivey82_2)))
 (= alivey82 $x37402)))
(assert
 (let (($x37409 (and (= likelihoody83 likelihoody83_1) (= y83 y83_1))))
 (=> (= alivey83_1 true) $x37409)))
(assert
 (let (($x37414 (= likelihoody83_1 0.0)))
 (=> (= alivey83_1 false) $x37414)))
(assert
 (let (($x37421 (and (= likelihoody83 likelihoody83_2) (= y83 y83_2))))
 (=> (= alivey83_2 true) $x37421)))
(assert
 (let (($x37426 (= likelihoody83_2 0.0)))
 (=> (= alivey83_2 false) $x37426)))
(assert
 (let (($x37429 (or (or false alivey83_1) alivey83_2)))
 (= alivey83 $x37429)))
(assert
 (let (($x37436 (and (= likelihoody84 likelihoody84_1) (= y84 y84_1))))
 (=> (= alivey84_1 true) $x37436)))
(assert
 (let (($x37441 (= likelihoody84_1 0.0)))
 (=> (= alivey84_1 false) $x37441)))
(assert
 (let (($x37448 (and (= likelihoody84 likelihoody84_2) (= y84 y84_2))))
 (=> (= alivey84_2 true) $x37448)))
(assert
 (let (($x37453 (= likelihoody84_2 0.0)))
 (=> (= alivey84_2 false) $x37453)))
(assert
 (let (($x37456 (or (or false alivey84_1) alivey84_2)))
 (= alivey84 $x37456)))
(assert
 (let (($x37462 (and (= likelihoody85 likelihoody85_1) (= y85 y85_1))))
 (=> (= alivey85_1 true) $x37462)))
(assert
 (let (($x37467 (= likelihoody85_1 0.0)))
 (=> (= alivey85_1 false) $x37467)))
(assert
 (let (($x37474 (and (= likelihoody85 likelihoody85_2) (= y85 y85_2))))
 (=> (= alivey85_2 true) $x37474)))
(assert
 (let (($x37479 (= likelihoody85_2 0.0)))
 (=> (= alivey85_2 false) $x37479)))
(assert
 (let (($x37482 (or (or false alivey85_1) alivey85_2)))
 (= alivey85 $x37482)))
(assert
 (let (($x37486 (and (= likelihoody86 likelihoody86_1) (= y86 y86_1))))
 (=> (= alivey86_1 true) $x37486)))
(assert
 (let (($x37491 (= likelihoody86_1 0.0)))
 (=> (= alivey86_1 false) $x37491)))
(assert
 (let (($x37498 (and (= likelihoody86 likelihoody86_2) (= y86 y86_2))))
 (=> (= alivey86_2 true) $x37498)))
(assert
 (let (($x37503 (= likelihoody86_2 0.0)))
 (=> (= alivey86_2 false) $x37503)))
(assert
 (let (($x37506 (or (or false alivey86_1) alivey86_2)))
 (= alivey86 $x37506)))
(assert
 (let (($x37510 (and (= likelihoody87 likelihoody87_1) (= y87 y87_1))))
 (=> (= alivey87_1 true) $x37510)))
(assert
 (let (($x37515 (= likelihoody87_1 0.0)))
 (=> (= alivey87_1 false) $x37515)))
(assert
 (let (($x37522 (and (= likelihoody87 likelihoody87_2) (= y87 y87_2))))
 (=> (= alivey87_2 true) $x37522)))
(assert
 (let (($x37527 (= likelihoody87_2 0.0)))
 (=> (= alivey87_2 false) $x37527)))
(assert
 (let (($x37530 (or (or false alivey87_1) alivey87_2)))
 (= alivey87 $x37530)))
(assert
 (let (($x37534 (and (= likelihoody88 likelihoody88_1) (= y88 y88_1))))
 (=> (= alivey88_1 true) $x37534)))
(assert
 (let (($x37539 (= likelihoody88_1 0.0)))
 (=> (= alivey88_1 false) $x37539)))
(assert
 (let (($x37546 (and (= likelihoody88 likelihoody88_2) (= y88 y88_2))))
 (=> (= alivey88_2 true) $x37546)))
(assert
 (let (($x37551 (= likelihoody88_2 0.0)))
 (=> (= alivey88_2 false) $x37551)))
(assert
 (let (($x37554 (or (or false alivey88_1) alivey88_2)))
 (= alivey88 $x37554)))
(assert
 (let (($x37558 (and (= likelihoody89 likelihoody89_1) (= y89 y89_1))))
 (=> (= alivey89_1 true) $x37558)))
(assert
 (let (($x37563 (= likelihoody89_1 0.0)))
 (=> (= alivey89_1 false) $x37563)))
(assert
 (let (($x37570 (and (= likelihoody89 likelihoody89_2) (= y89 y89_2))))
 (=> (= alivey89_2 true) $x37570)))
(assert
 (let (($x37575 (= likelihoody89_2 0.0)))
 (=> (= alivey89_2 false) $x37575)))
(assert
 (let (($x37578 (or (or false alivey89_1) alivey89_2)))
 (= alivey89 $x37578)))
(assert
 (let (($x37582 (and (= likelihoody90 likelihoody90_1) (= y90 y90_1))))
 (=> (= alivey90_1 true) $x37582)))
(assert
 (let (($x37587 (= likelihoody90_1 0.0)))
 (=> (= alivey90_1 false) $x37587)))
(assert
 (let (($x37594 (and (= likelihoody90 likelihoody90_2) (= y90 y90_2))))
 (=> (= alivey90_2 true) $x37594)))
(assert
 (let (($x37599 (= likelihoody90_2 0.0)))
 (=> (= alivey90_2 false) $x37599)))
(assert
 (let (($x37602 (or (or false alivey90_1) alivey90_2)))
 (= alivey90 $x37602)))
(assert
 (let (($x37606 (and (= likelihoody91 likelihoody91_1) (= y91 y91_1))))
 (=> (= alivey91_1 true) $x37606)))
(assert
 (let (($x37611 (= likelihoody91_1 0.0)))
 (=> (= alivey91_1 false) $x37611)))
(assert
 (let (($x37618 (and (= likelihoody91 likelihoody91_2) (= y91 y91_2))))
 (=> (= alivey91_2 true) $x37618)))
(assert
 (let (($x37623 (= likelihoody91_2 0.0)))
 (=> (= alivey91_2 false) $x37623)))
(assert
 (let (($x37626 (or (or false alivey91_1) alivey91_2)))
 (= alivey91 $x37626)))
(assert
 (let (($x37630 (and (= likelihoody92 likelihoody92_1) (= y92 y92_1))))
 (=> (= alivey92_1 true) $x37630)))
(assert
 (let (($x37635 (= likelihoody92_1 0.0)))
 (=> (= alivey92_1 false) $x37635)))
(assert
 (let (($x37642 (and (= likelihoody92 likelihoody92_2) (= y92 y92_2))))
 (=> (= alivey92_2 true) $x37642)))
(assert
 (let (($x37647 (= likelihoody92_2 0.0)))
 (=> (= alivey92_2 false) $x37647)))
(assert
 (let (($x37650 (or (or false alivey92_1) alivey92_2)))
 (= alivey92 $x37650)))
(assert
 (let (($x37657 (and (= likelihoody93 likelihoody93_1) (= y93 y93_1))))
 (=> (= alivey93_1 true) $x37657)))
(assert
 (let (($x37662 (= likelihoody93_1 0.0)))
 (=> (= alivey93_1 false) $x37662)))
(assert
 (let (($x37669 (and (= likelihoody93 likelihoody93_2) (= y93 y93_2))))
 (=> (= alivey93_2 true) $x37669)))
(assert
 (let (($x37674 (= likelihoody93_2 0.0)))
 (=> (= alivey93_2 false) $x37674)))
(assert
 (let (($x37677 (or (or false alivey93_1) alivey93_2)))
 (= alivey93 $x37677)))
(assert
 (let (($x37684 (and (= likelihoody94 likelihoody94_1) (= y94 y94_1))))
 (=> (= alivey94_1 true) $x37684)))
(assert
 (let (($x37689 (= likelihoody94_1 0.0)))
 (=> (= alivey94_1 false) $x37689)))
(assert
 (let (($x37696 (and (= likelihoody94 likelihoody94_2) (= y94 y94_2))))
 (=> (= alivey94_2 true) $x37696)))
(assert
 (let (($x37701 (= likelihoody94_2 0.0)))
 (=> (= alivey94_2 false) $x37701)))
(assert
 (let (($x37704 (or (or false alivey94_1) alivey94_2)))
 (= alivey94 $x37704)))
(assert
 (let (($x37711 (and (= likelihoody95 likelihoody95_1) (= y95 y95_1))))
 (=> (= alivey95_1 true) $x37711)))
(assert
 (let (($x37716 (= likelihoody95_1 0.0)))
 (=> (= alivey95_1 false) $x37716)))
(assert
 (let (($x37723 (and (= likelihoody95 likelihoody95_2) (= y95 y95_2))))
 (=> (= alivey95_2 true) $x37723)))
(assert
 (let (($x37728 (= likelihoody95_2 0.0)))
 (=> (= alivey95_2 false) $x37728)))
(assert
 (let (($x37731 (or (or false alivey95_1) alivey95_2)))
 (= alivey95 $x37731)))
(assert
 (let (($x37738 (and (= likelihoody96 likelihoody96_1) (= y96 y96_1))))
 (=> (= alivey96_1 true) $x37738)))
(assert
 (let (($x37743 (= likelihoody96_1 0.0)))
 (=> (= alivey96_1 false) $x37743)))
(assert
 (let (($x37750 (and (= likelihoody96 likelihoody96_2) (= y96 y96_2))))
 (=> (= alivey96_2 true) $x37750)))
(assert
 (let (($x37755 (= likelihoody96_2 0.0)))
 (=> (= alivey96_2 false) $x37755)))
(assert
 (let (($x37758 (or (or false alivey96_1) alivey96_2)))
 (= alivey96 $x37758)))
(assert
 (let (($x37765 (and (= likelihoody97 likelihoody97_1) (= y97 y97_1))))
 (=> (= alivey97_1 true) $x37765)))
(assert
 (let (($x37770 (= likelihoody97_1 0.0)))
 (=> (= alivey97_1 false) $x37770)))
(assert
 (let (($x37777 (and (= likelihoody97 likelihoody97_2) (= y97 y97_2))))
 (=> (= alivey97_2 true) $x37777)))
(assert
 (let (($x37782 (= likelihoody97_2 0.0)))
 (=> (= alivey97_2 false) $x37782)))
(assert
 (let (($x37785 (or (or false alivey97_1) alivey97_2)))
 (= alivey97 $x37785)))
(assert
 (let (($x37792 (and (= likelihoody98 likelihoody98_1) (= y98 y98_1))))
 (=> (= alivey98_1 true) $x37792)))
(assert
 (let (($x37797 (= likelihoody98_1 0.0)))
 (=> (= alivey98_1 false) $x37797)))
(assert
 (let (($x37804 (and (= likelihoody98 likelihoody98_2) (= y98 y98_2))))
 (=> (= alivey98_2 true) $x37804)))
(assert
 (let (($x37809 (= likelihoody98_2 0.0)))
 (=> (= alivey98_2 false) $x37809)))
(assert
 (let (($x37812 (or (or false alivey98_1) alivey98_2)))
 (= alivey98 $x37812)))
(assert
 (let (($x37819 (and (= likelihoody99 likelihoody99_1) (= y99 y99_1))))
 (=> (= alivey99_1 true) $x37819)))
(assert
 (let (($x37824 (= likelihoody99_1 0.0)))
 (=> (= alivey99_1 false) $x37824)))
(assert
 (let (($x37831 (and (= likelihoody99 likelihoody99_2) (= y99 y99_2))))
 (=> (= alivey99_2 true) $x37831)))
(assert
 (let (($x37836 (= likelihoody99_2 0.0)))
 (=> (= alivey99_2 false) $x37836)))
(assert
 (let (($x37839 (or (or false alivey99_1) alivey99_2)))
 (= alivey99 $x37839)))
(assert
 (let (($x37846 (and (= likelihoody100 likelihoody100_1) (= y100 y100_1))))
 (=> (= alivey100_1 true) $x37846)))
(assert
 (let (($x37851 (= likelihoody100_1 0.0)))
 (=> (= alivey100_1 false) $x37851)))
(assert
 (let (($x37858 (and (= likelihoody100 likelihoody100_2) (= y100 y100_2))))
 (=> (= alivey100_2 true) $x37858)))
(assert
 (let (($x37863 (= likelihoody100_2 0.0)))
 (=> (= alivey100_2 false) $x37863)))
(assert
 (let (($x37866 (or (or false alivey100_1) alivey100_2)))
 (= alivey100 $x37866)))
(assert
 (let ((?x38276 (ite alivey100 likelihoody100 0.0)))
 (let ((?x38274 (ite aliveoutlier100 likelihoodoutlier100 0.0)))
 (let ((?x38272 (ite alivey99 likelihoody99 0.0)))
 (let ((?x38270 (ite aliveoutlier99 likelihoodoutlier99 0.0)))
 (let ((?x38268 (ite alivey98 likelihoody98 0.0)))
 (let ((?x38266 (ite aliveoutlier98 likelihoodoutlier98 0.0)))
 (let ((?x38264 (ite alivey97 likelihoody97 0.0)))
 (let ((?x38262 (ite aliveoutlier97 likelihoodoutlier97 0.0)))
 (let ((?x38260 (ite alivey96 likelihoody96 0.0)))
 (let ((?x38258 (ite aliveoutlier96 likelihoodoutlier96 0.0)))
 (let ((?x38256 (ite alivey95 likelihoody95 0.0)))
 (let ((?x38254 (ite aliveoutlier95 likelihoodoutlier95 0.0)))
 (let ((?x38252 (ite alivey94 likelihoody94 0.0)))
 (let ((?x38250 (ite aliveoutlier94 likelihoodoutlier94 0.0)))
 (let ((?x38248 (ite alivey93 likelihoody93 0.0)))
 (let ((?x38246 (ite aliveoutlier93 likelihoodoutlier93 0.0)))
 (let ((?x38244 (ite alivey92 likelihoody92 0.0)))
 (let ((?x38242 (ite aliveoutlier92 likelihoodoutlier92 0.0)))
 (let ((?x38240 (ite alivey91 likelihoody91 0.0)))
 (let ((?x38238 (ite aliveoutlier91 likelihoodoutlier91 0.0)))
 (let ((?x38236 (ite alivey90 likelihoody90 0.0)))
 (let ((?x38234 (ite aliveoutlier90 likelihoodoutlier90 0.0)))
 (let ((?x38232 (ite alivey89 likelihoody89 0.0)))
 (let ((?x38230 (ite aliveoutlier89 likelihoodoutlier89 0.0)))
 (let ((?x38228 (ite alivey88 likelihoody88 0.0)))
 (let ((?x38226 (ite aliveoutlier88 likelihoodoutlier88 0.0)))
 (let ((?x38224 (ite alivey87 likelihoody87 0.0)))
 (let ((?x38222 (ite aliveoutlier87 likelihoodoutlier87 0.0)))
 (let ((?x38220 (ite alivey86 likelihoody86 0.0)))
 (let ((?x38218 (ite aliveoutlier86 likelihoodoutlier86 0.0)))
 (let ((?x38216 (ite alivey85 likelihoody85 0.0)))
 (let ((?x38214 (ite aliveoutlier85 likelihoodoutlier85 0.0)))
 (let ((?x38212 (ite alivey84 likelihoody84 0.0)))
 (let ((?x38210 (ite aliveoutlier84 likelihoodoutlier84 0.0)))
 (let ((?x38208 (ite alivey83 likelihoody83 0.0)))
 (let ((?x38206 (ite aliveoutlier83 likelihoodoutlier83 0.0)))
 (let ((?x38204 (ite alivey82 likelihoody82 0.0)))
 (let ((?x38202 (ite aliveoutlier82 likelihoodoutlier82 0.0)))
 (let ((?x38200 (ite alivey81 likelihoody81 0.0)))
 (let ((?x38198 (ite aliveoutlier81 likelihoodoutlier81 0.0)))
 (let ((?x38196 (ite alivey80 likelihoody80 0.0)))
 (let ((?x38194 (ite aliveoutlier80 likelihoodoutlier80 0.0)))
 (let ((?x38192 (ite alivey79 likelihoody79 0.0)))
 (let ((?x38190 (ite aliveoutlier79 likelihoodoutlier79 0.0)))
 (let ((?x38188 (ite alivey78 likelihoody78 0.0)))
 (let ((?x38186 (ite aliveoutlier78 likelihoodoutlier78 0.0)))
 (let ((?x38184 (ite alivey77 likelihoody77 0.0)))
 (let ((?x38182 (ite aliveoutlier77 likelihoodoutlier77 0.0)))
 (let ((?x38180 (ite alivey76 likelihoody76 0.0)))
 (let ((?x38178 (ite aliveoutlier76 likelihoodoutlier76 0.0)))
 (let ((?x38176 (ite alivey75 likelihoody75 0.0)))
 (let ((?x38174 (ite aliveoutlier75 likelihoodoutlier75 0.0)))
 (let ((?x38172 (ite alivey74 likelihoody74 0.0)))
 (let ((?x38170 (ite aliveoutlier74 likelihoodoutlier74 0.0)))
 (let ((?x38168 (ite alivey73 likelihoody73 0.0)))
 (let ((?x38166 (ite aliveoutlier73 likelihoodoutlier73 0.0)))
 (let ((?x38164 (ite alivey72 likelihoody72 0.0)))
 (let ((?x38162 (ite aliveoutlier72 likelihoodoutlier72 0.0)))
 (let ((?x38160 (ite alivey71 likelihoody71 0.0)))
 (let ((?x38158 (ite aliveoutlier71 likelihoodoutlier71 0.0)))
 (let ((?x38156 (ite alivey70 likelihoody70 0.0)))
 (let ((?x38154 (ite aliveoutlier70 likelihoodoutlier70 0.0)))
 (let ((?x38152 (ite alivey69 likelihoody69 0.0)))
 (let ((?x38150 (ite aliveoutlier69 likelihoodoutlier69 0.0)))
 (let ((?x38148 (ite alivey68 likelihoody68 0.0)))
 (let ((?x38146 (ite aliveoutlier68 likelihoodoutlier68 0.0)))
 (let ((?x38144 (ite alivey67 likelihoody67 0.0)))
 (let ((?x38142 (ite aliveoutlier67 likelihoodoutlier67 0.0)))
 (let ((?x38140 (ite alivey66 likelihoody66 0.0)))
 (let ((?x38138 (ite aliveoutlier66 likelihoodoutlier66 0.0)))
 (let ((?x38136 (ite alivey65 likelihoody65 0.0)))
 (let ((?x38134 (ite aliveoutlier65 likelihoodoutlier65 0.0)))
 (let ((?x38132 (ite alivey64 likelihoody64 0.0)))
 (let ((?x38130 (ite aliveoutlier64 likelihoodoutlier64 0.0)))
 (let ((?x38128 (ite alivey63 likelihoody63 0.0)))
 (let ((?x38126 (ite aliveoutlier63 likelihoodoutlier63 0.0)))
 (let ((?x38124 (ite alivey62 likelihoody62 0.0)))
 (let ((?x38122 (ite aliveoutlier62 likelihoodoutlier62 0.0)))
 (let ((?x38120 (ite alivey61 likelihoody61 0.0)))
 (let ((?x38118 (ite aliveoutlier61 likelihoodoutlier61 0.0)))
 (let ((?x38116 (ite alivey60 likelihoody60 0.0)))
 (let ((?x38114 (ite aliveoutlier60 likelihoodoutlier60 0.0)))
 (let ((?x38112 (ite alivey59 likelihoody59 0.0)))
 (let ((?x38110 (ite aliveoutlier59 likelihoodoutlier59 0.0)))
 (let ((?x38108 (ite alivey58 likelihoody58 0.0)))
 (let ((?x38106 (ite aliveoutlier58 likelihoodoutlier58 0.0)))
 (let ((?x38104 (ite alivey57 likelihoody57 0.0)))
 (let ((?x38102 (ite aliveoutlier57 likelihoodoutlier57 0.0)))
 (let ((?x38100 (ite alivey56 likelihoody56 0.0)))
 (let ((?x38098 (ite aliveoutlier56 likelihoodoutlier56 0.0)))
 (let ((?x38096 (ite alivey55 likelihoody55 0.0)))
 (let ((?x38094 (ite aliveoutlier55 likelihoodoutlier55 0.0)))
 (let ((?x38092 (ite alivey54 likelihoody54 0.0)))
 (let ((?x38090 (ite aliveoutlier54 likelihoodoutlier54 0.0)))
 (let ((?x38088 (ite alivey53 likelihoody53 0.0)))
 (let ((?x38086 (ite aliveoutlier53 likelihoodoutlier53 0.0)))
 (let ((?x38084 (ite alivey52 likelihoody52 0.0)))
 (let ((?x38082 (ite aliveoutlier52 likelihoodoutlier52 0.0)))
 (let ((?x38080 (ite alivey51 likelihoody51 0.0)))
 (let ((?x38078 (ite aliveoutlier51 likelihoodoutlier51 0.0)))
 (let ((?x38076 (ite alivey50 likelihoody50 0.0)))
 (let ((?x38074 (ite aliveoutlier50 likelihoodoutlier50 0.0)))
 (let ((?x38072 (ite alivey49 likelihoody49 0.0)))
 (let ((?x38070 (ite aliveoutlier49 likelihoodoutlier49 0.0)))
 (let ((?x38068 (ite alivey48 likelihoody48 0.0)))
 (let ((?x38066 (ite aliveoutlier48 likelihoodoutlier48 0.0)))
 (let ((?x38064 (ite alivey47 likelihoody47 0.0)))
 (let ((?x38062 (ite aliveoutlier47 likelihoodoutlier47 0.0)))
 (let ((?x38060 (ite alivey46 likelihoody46 0.0)))
 (let ((?x38058 (ite aliveoutlier46 likelihoodoutlier46 0.0)))
 (let ((?x38056 (ite alivey45 likelihoody45 0.0)))
 (let ((?x38054 (ite aliveoutlier45 likelihoodoutlier45 0.0)))
 (let ((?x38052 (ite alivey44 likelihoody44 0.0)))
 (let ((?x38050 (ite aliveoutlier44 likelihoodoutlier44 0.0)))
 (let ((?x38048 (ite alivey43 likelihoody43 0.0)))
 (let ((?x38046 (ite aliveoutlier43 likelihoodoutlier43 0.0)))
 (let ((?x38044 (ite alivey42 likelihoody42 0.0)))
 (let ((?x38042 (ite aliveoutlier42 likelihoodoutlier42 0.0)))
 (let ((?x38040 (ite alivey41 likelihoody41 0.0)))
 (let ((?x38038 (ite aliveoutlier41 likelihoodoutlier41 0.0)))
 (let ((?x38036 (ite alivey40 likelihoody40 0.0)))
 (let ((?x38034 (ite aliveoutlier40 likelihoodoutlier40 0.0)))
 (let ((?x38032 (ite alivey39 likelihoody39 0.0)))
 (let ((?x38030 (ite aliveoutlier39 likelihoodoutlier39 0.0)))
 (let ((?x38028 (ite alivey38 likelihoody38 0.0)))
 (let ((?x38026 (ite aliveoutlier38 likelihoodoutlier38 0.0)))
 (let ((?x38024 (ite alivey37 likelihoody37 0.0)))
 (let ((?x38022 (ite aliveoutlier37 likelihoodoutlier37 0.0)))
 (let ((?x38020 (ite alivey36 likelihoody36 0.0)))
 (let ((?x38018 (ite aliveoutlier36 likelihoodoutlier36 0.0)))
 (let ((?x38016 (ite alivey35 likelihoody35 0.0)))
 (let ((?x38014 (ite aliveoutlier35 likelihoodoutlier35 0.0)))
 (let ((?x38012 (ite alivey34 likelihoody34 0.0)))
 (let ((?x38010 (ite aliveoutlier34 likelihoodoutlier34 0.0)))
 (let ((?x38008 (ite alivey33 likelihoody33 0.0)))
 (let ((?x38006 (ite aliveoutlier33 likelihoodoutlier33 0.0)))
 (let ((?x38004 (ite alivey32 likelihoody32 0.0)))
 (let ((?x38002 (ite aliveoutlier32 likelihoodoutlier32 0.0)))
 (let ((?x38000 (ite alivey31 likelihoody31 0.0)))
 (let ((?x37998 (ite aliveoutlier31 likelihoodoutlier31 0.0)))
 (let ((?x37996 (ite alivey30 likelihoody30 0.0)))
 (let ((?x37994 (ite aliveoutlier30 likelihoodoutlier30 0.0)))
 (let ((?x37992 (ite alivey29 likelihoody29 0.0)))
 (let ((?x37990 (ite aliveoutlier29 likelihoodoutlier29 0.0)))
 (let ((?x37988 (ite alivey28 likelihoody28 0.0)))
 (let ((?x37986 (ite aliveoutlier28 likelihoodoutlier28 0.0)))
 (let ((?x37984 (ite alivey27 likelihoody27 0.0)))
 (let ((?x37982 (ite aliveoutlier27 likelihoodoutlier27 0.0)))
 (let ((?x37980 (ite alivey26 likelihoody26 0.0)))
 (let ((?x37978 (ite aliveoutlier26 likelihoodoutlier26 0.0)))
 (let ((?x37976 (ite alivey25 likelihoody25 0.0)))
 (let ((?x37974 (ite aliveoutlier25 likelihoodoutlier25 0.0)))
 (let ((?x37972 (ite alivey24 likelihoody24 0.0)))
 (let ((?x37970 (ite aliveoutlier24 likelihoodoutlier24 0.0)))
 (let ((?x37968 (ite alivey23 likelihoody23 0.0)))
 (let ((?x37966 (ite aliveoutlier23 likelihoodoutlier23 0.0)))
 (let ((?x37964 (ite alivey22 likelihoody22 0.0)))
 (let ((?x37962 (ite aliveoutlier22 likelihoodoutlier22 0.0)))
 (let ((?x37960 (ite alivey21 likelihoody21 0.0)))
 (let ((?x37958 (ite aliveoutlier21 likelihoodoutlier21 0.0)))
 (let ((?x37956 (ite alivey20 likelihoody20 0.0)))
 (let ((?x37954 (ite aliveoutlier20 likelihoodoutlier20 0.0)))
 (let ((?x37952 (ite alivey19 likelihoody19 0.0)))
 (let ((?x37950 (ite aliveoutlier19 likelihoodoutlier19 0.0)))
 (let ((?x37948 (ite alivey18 likelihoody18 0.0)))
 (let ((?x37946 (ite aliveoutlier18 likelihoodoutlier18 0.0)))
 (let ((?x37944 (ite alivey17 likelihoody17 0.0)))
 (let ((?x37942 (ite aliveoutlier17 likelihoodoutlier17 0.0)))
 (let ((?x37940 (ite alivey16 likelihoody16 0.0)))
 (let ((?x37938 (ite aliveoutlier16 likelihoodoutlier16 0.0)))
 (let ((?x37936 (ite alivey15 likelihoody15 0.0)))
 (let ((?x37934 (ite aliveoutlier15 likelihoodoutlier15 0.0)))
 (let ((?x37932 (ite alivey14 likelihoody14 0.0)))
 (let ((?x37930 (ite aliveoutlier14 likelihoodoutlier14 0.0)))
 (let ((?x37928 (ite alivey13 likelihoody13 0.0)))
 (let ((?x37926 (ite aliveoutlier13 likelihoodoutlier13 0.0)))
 (let ((?x37924 (ite alivey12 likelihoody12 0.0)))
 (let ((?x37922 (ite aliveoutlier12 likelihoodoutlier12 0.0)))
 (let ((?x37920 (ite alivey11 likelihoody11 0.0)))
 (let ((?x37918 (ite aliveoutlier11 likelihoodoutlier11 0.0)))
 (let ((?x37916 (ite alivey10 likelihoody10 0.0)))
 (let ((?x37914 (ite aliveoutlier10 likelihoodoutlier10 0.0)))
 (let ((?x37912 (ite alivey9 likelihoody9 0.0)))
 (let ((?x37910 (ite aliveoutlier9 likelihoodoutlier9 0.0)))
 (let ((?x37908 (ite alivey8 likelihoody8 0.0)))
 (let ((?x37906 (ite aliveoutlier8 likelihoodoutlier8 0.0)))
 (let ((?x37904 (ite alivey7 likelihoody7 0.0)))
 (let ((?x37902 (ite aliveoutlier7 likelihoodoutlier7 0.0)))
 (let ((?x37900 (ite alivey6 likelihoody6 0.0)))
 (let ((?x37898 (ite aliveoutlier6 likelihoodoutlier6 0.0)))
 (let ((?x37896 (ite alivey5 likelihoody5 0.0)))
 (let ((?x37894 (ite aliveoutlier5 likelihoodoutlier5 0.0)))
 (let ((?x37892 (ite alivey4 likelihoody4 0.0)))
 (let ((?x37890 (ite aliveoutlier4 likelihoodoutlier4 0.0)))
 (let ((?x37888 (ite alivey3 likelihoody3 0.0)))
 (let ((?x37886 (ite aliveoutlier3 likelihoodoutlier3 0.0)))
 (let ((?x37884 (ite alivey2 likelihoody2 0.0)))
 (let ((?x37882 (ite aliveoutlier2 likelihoodoutlier2 0.0)))
 (let ((?x37880 (ite alivey1 likelihoody1 0.0)))
 (let ((?x37878 (ite aliveoutlier1 likelihoodoutlier1 0.0)))
 (let ((?x37876 (ite aliveproboutlier likelihoodproboutlier 0.0)))
 (let ((?x37874 (ite aliveslope likelihoodslope 0.0)))
 (let ((?x37872 (ite aliveintercept likelihoodintercept 0.0)))
 (let ((?x37875 (+ (+ (+ 0.0 (ite alivenoise likelihoodnoise 0.0)) ?x37872) ?x37874)))
 (let ((?x37889 (+ (+ (+ (+ (+ (+ (+ ?x37875 ?x37876) ?x37878) ?x37880) ?x37882) ?x37884) ?x37886) ?x37888)))
 (let ((?x37903 (+ (+ (+ (+ (+ (+ (+ ?x37889 ?x37890) ?x37892) ?x37894) ?x37896) ?x37898) ?x37900) ?x37902)))
 (let ((?x37917 (+ (+ (+ (+ (+ (+ (+ ?x37903 ?x37904) ?x37906) ?x37908) ?x37910) ?x37912) ?x37914) ?x37916)))
 (let ((?x37931 (+ (+ (+ (+ (+ (+ (+ ?x37917 ?x37918) ?x37920) ?x37922) ?x37924) ?x37926) ?x37928) ?x37930)))
 (let ((?x37945 (+ (+ (+ (+ (+ (+ (+ ?x37931 ?x37932) ?x37934) ?x37936) ?x37938) ?x37940) ?x37942) ?x37944)))
 (let ((?x37959 (+ (+ (+ (+ (+ (+ (+ ?x37945 ?x37946) ?x37948) ?x37950) ?x37952) ?x37954) ?x37956) ?x37958)))
 (let ((?x37973 (+ (+ (+ (+ (+ (+ (+ ?x37959 ?x37960) ?x37962) ?x37964) ?x37966) ?x37968) ?x37970) ?x37972)))
 (let ((?x37987 (+ (+ (+ (+ (+ (+ (+ ?x37973 ?x37974) ?x37976) ?x37978) ?x37980) ?x37982) ?x37984) ?x37986)))
 (let ((?x38001 (+ (+ (+ (+ (+ (+ (+ ?x37987 ?x37988) ?x37990) ?x37992) ?x37994) ?x37996) ?x37998) ?x38000)))
 (let ((?x38015 (+ (+ (+ (+ (+ (+ (+ ?x38001 ?x38002) ?x38004) ?x38006) ?x38008) ?x38010) ?x38012) ?x38014)))
 (let ((?x38029 (+ (+ (+ (+ (+ (+ (+ ?x38015 ?x38016) ?x38018) ?x38020) ?x38022) ?x38024) ?x38026) ?x38028)))
 (let ((?x38043 (+ (+ (+ (+ (+ (+ (+ ?x38029 ?x38030) ?x38032) ?x38034) ?x38036) ?x38038) ?x38040) ?x38042)))
 (let ((?x38057 (+ (+ (+ (+ (+ (+ (+ ?x38043 ?x38044) ?x38046) ?x38048) ?x38050) ?x38052) ?x38054) ?x38056)))
 (let ((?x38071 (+ (+ (+ (+ (+ (+ (+ ?x38057 ?x38058) ?x38060) ?x38062) ?x38064) ?x38066) ?x38068) ?x38070)))
 (let ((?x38085 (+ (+ (+ (+ (+ (+ (+ ?x38071 ?x38072) ?x38074) ?x38076) ?x38078) ?x38080) ?x38082) ?x38084)))
 (let ((?x38099 (+ (+ (+ (+ (+ (+ (+ ?x38085 ?x38086) ?x38088) ?x38090) ?x38092) ?x38094) ?x38096) ?x38098)))
 (let ((?x38113 (+ (+ (+ (+ (+ (+ (+ ?x38099 ?x38100) ?x38102) ?x38104) ?x38106) ?x38108) ?x38110) ?x38112)))
 (let ((?x38127 (+ (+ (+ (+ (+ (+ (+ ?x38113 ?x38114) ?x38116) ?x38118) ?x38120) ?x38122) ?x38124) ?x38126)))
 (let ((?x38141 (+ (+ (+ (+ (+ (+ (+ ?x38127 ?x38128) ?x38130) ?x38132) ?x38134) ?x38136) ?x38138) ?x38140)))
 (let ((?x38155 (+ (+ (+ (+ (+ (+ (+ ?x38141 ?x38142) ?x38144) ?x38146) ?x38148) ?x38150) ?x38152) ?x38154)))
 (let ((?x38169 (+ (+ (+ (+ (+ (+ (+ ?x38155 ?x38156) ?x38158) ?x38160) ?x38162) ?x38164) ?x38166) ?x38168)))
 (let ((?x38183 (+ (+ (+ (+ (+ (+ (+ ?x38169 ?x38170) ?x38172) ?x38174) ?x38176) ?x38178) ?x38180) ?x38182)))
 (let ((?x38197 (+ (+ (+ (+ (+ (+ (+ ?x38183 ?x38184) ?x38186) ?x38188) ?x38190) ?x38192) ?x38194) ?x38196)))
 (let ((?x38211 (+ (+ (+ (+ (+ (+ (+ ?x38197 ?x38198) ?x38200) ?x38202) ?x38204) ?x38206) ?x38208) ?x38210)))
 (let ((?x38225 (+ (+ (+ (+ (+ (+ (+ ?x38211 ?x38212) ?x38214) ?x38216) ?x38218) ?x38220) ?x38222) ?x38224)))
 (let ((?x38239 (+ (+ (+ (+ (+ (+ (+ ?x38225 ?x38226) ?x38228) ?x38230) ?x38232) ?x38234) ?x38236) ?x38238)))
 (let ((?x38253 (+ (+ (+ (+ (+ (+ (+ ?x38239 ?x38240) ?x38242) ?x38244) ?x38246) ?x38248) ?x38250) ?x38252)))
 (let ((?x38267 (+ (+ (+ (+ (+ (+ (+ ?x38253 ?x38254) ?x38256) ?x38258) ?x38260) ?x38262) ?x38264) ?x38266)))
 (let ((?x38277 (+ (+ (+ (+ (+ ?x38267 ?x38268) ?x38270) ?x38272) ?x38274) ?x38276)))
 (= trace_prob ?x38277)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
