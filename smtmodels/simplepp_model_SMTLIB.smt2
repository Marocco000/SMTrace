; benchmark generated from python API
(set-info :status unknown)
(declare-fun alivenoise () Bool)
(declare-fun aliveintercept () Bool)
(declare-fun aliveslope () Bool)
(declare-fun aliveproboutlier () Bool)
(declare-fun aliveoutlier1 () Bool)
(declare-fun outlier1 () Int)
(declare-fun alivey1_1 () Bool)
(declare-fun alivey1_2 () Bool)
(declare-fun aliveoutlier2 () Bool)
(declare-fun outlier2 () Int)
(declare-fun alivey2_1 () Bool)
(declare-fun alivey2_2 () Bool)
(declare-fun aliveoutlier3 () Bool)
(declare-fun outlier3 () Int)
(declare-fun alivey3_1 () Bool)
(declare-fun alivey3_2 () Bool)
(declare-fun aliveoutlier4 () Bool)
(declare-fun outlier4 () Int)
(declare-fun alivey4_1 () Bool)
(declare-fun alivey4_2 () Bool)
(declare-fun aliveoutlier5 () Bool)
(declare-fun outlier5 () Int)
(declare-fun alivey5_1 () Bool)
(declare-fun alivey5_2 () Bool)
(declare-fun aliveoutlier6 () Bool)
(declare-fun outlier6 () Int)
(declare-fun alivey6_1 () Bool)
(declare-fun alivey6_2 () Bool)
(declare-fun aliveoutlier7 () Bool)
(declare-fun outlier7 () Int)
(declare-fun alivey7_1 () Bool)
(declare-fun alivey7_2 () Bool)
(declare-fun aliveoutlier8 () Bool)
(declare-fun outlier8 () Int)
(declare-fun alivey8_1 () Bool)
(declare-fun alivey8_2 () Bool)
(declare-fun aliveoutlier9 () Bool)
(declare-fun outlier9 () Int)
(declare-fun alivey9_1 () Bool)
(declare-fun alivey9_2 () Bool)
(declare-fun aliveoutlier10 () Bool)
(declare-fun outlier10 () Int)
(declare-fun alivey10_1 () Bool)
(declare-fun alivey10_2 () Bool)
(declare-fun aliveoutlier11 () Bool)
(declare-fun outlier11 () Int)
(declare-fun alivey11_1 () Bool)
(declare-fun alivey11_2 () Bool)
(declare-fun aliveoutlier12 () Bool)
(declare-fun outlier12 () Int)
(declare-fun alivey12_1 () Bool)
(declare-fun alivey12_2 () Bool)
(declare-fun aliveoutlier13 () Bool)
(declare-fun outlier13 () Int)
(declare-fun alivey13_1 () Bool)
(declare-fun alivey13_2 () Bool)
(declare-fun aliveoutlier14 () Bool)
(declare-fun outlier14 () Int)
(declare-fun alivey14_1 () Bool)
(declare-fun alivey14_2 () Bool)
(declare-fun aliveoutlier15 () Bool)
(declare-fun outlier15 () Int)
(declare-fun alivey15_1 () Bool)
(declare-fun alivey15_2 () Bool)
(declare-fun aliveoutlier16 () Bool)
(declare-fun outlier16 () Int)
(declare-fun alivey16_1 () Bool)
(declare-fun alivey16_2 () Bool)
(declare-fun aliveoutlier17 () Bool)
(declare-fun outlier17 () Int)
(declare-fun alivey17_1 () Bool)
(declare-fun alivey17_2 () Bool)
(declare-fun aliveoutlier18 () Bool)
(declare-fun outlier18 () Int)
(declare-fun alivey18_1 () Bool)
(declare-fun alivey18_2 () Bool)
(declare-fun aliveoutlier19 () Bool)
(declare-fun outlier19 () Int)
(declare-fun alivey19_1 () Bool)
(declare-fun alivey19_2 () Bool)
(declare-fun aliveoutlier20 () Bool)
(declare-fun outlier20 () Int)
(declare-fun alivey20_1 () Bool)
(declare-fun alivey20_2 () Bool)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun x10 () Real)
(declare-fun x11 () Real)
(declare-fun x12 () Real)
(declare-fun x13 () Real)
(declare-fun x14 () Real)
(declare-fun x15 () Real)
(declare-fun x16 () Real)
(declare-fun x17 () Real)
(declare-fun x18 () Real)
(declare-fun x19 () Real)
(declare-fun x20 () Real)
(declare-fun slope () Real)
(declare-fun intercept () Real)
(declare-fun mean1 () Real)
(declare-fun mean2 () Real)
(declare-fun mean3 () Real)
(declare-fun mean4 () Real)
(declare-fun mean5 () Real)
(declare-fun mean6 () Real)
(declare-fun mean7 () Real)
(declare-fun mean8 () Real)
(declare-fun mean9 () Real)
(declare-fun mean10 () Real)
(declare-fun mean11 () Real)
(declare-fun mean12 () Real)
(declare-fun mean13 () Real)
(declare-fun mean14 () Real)
(declare-fun mean15 () Real)
(declare-fun mean16 () Real)
(declare-fun mean17 () Real)
(declare-fun mean18 () Real)
(declare-fun mean19 () Real)
(declare-fun mean20 () Real)
(declare-fun noise () Real)
(declare-fun noise_div () Real)
(declare-fun likelihoodnoise () Real)
(declare-fun likelihoodintercept () Real)
(declare-fun likelihoodslope () Real)
(declare-fun proboutlier_div () Real)
(declare-fun proboutlier () Real)
(declare-fun likelihoodproboutlier () Real)
(declare-fun likelihoodoutlier1 () Real)
(declare-fun y1_1_endpoint3_1 () Real)
(declare-fun |piecewise for y1_1_endpoint3_1| () Bool)
(declare-fun y1_1_endpoint2_1 () Real)
(declare-fun |piecewise for y1_1_endpoint2_1| () Bool)
(declare-fun y1_1_endpoint1_1 () Real)
(declare-fun |piecewise for y1_1_endpoint1_1| () Bool)
(declare-fun y1_1_endpoint0_2 () Real)
(declare-fun |piecewise for y1_1_endpoint0_2| () Bool)
(declare-fun y1_1_endpoint1_2 () Real)
(declare-fun |piecewise for y1_1_endpoint1_2| () Bool)
(declare-fun y1_1_endpoint2_2 () Real)
(declare-fun |piecewise for y1_1_endpoint2_2| () Bool)
(declare-fun y1_1_endpoint3_2 () Real)
(declare-fun |piecewise for y1_1_endpoint3_2| () Bool)
(declare-fun y1_1 () Real)
(declare-fun likelihoody1_1 () Real)
(declare-fun y1_2 () Real)
(declare-fun likelihoody1_2 () Real)
(declare-fun likelihoodoutlier2 () Real)
(declare-fun y2_1_endpoint3_1 () Real)
(declare-fun |piecewise for y2_1_endpoint3_1| () Bool)
(declare-fun y2_1_endpoint2_1 () Real)
(declare-fun |piecewise for y2_1_endpoint2_1| () Bool)
(declare-fun y2_1_endpoint1_1 () Real)
(declare-fun |piecewise for y2_1_endpoint1_1| () Bool)
(declare-fun y2_1_endpoint0_2 () Real)
(declare-fun |piecewise for y2_1_endpoint0_2| () Bool)
(declare-fun y2_1_endpoint1_2 () Real)
(declare-fun |piecewise for y2_1_endpoint1_2| () Bool)
(declare-fun y2_1_endpoint2_2 () Real)
(declare-fun |piecewise for y2_1_endpoint2_2| () Bool)
(declare-fun y2_1_endpoint3_2 () Real)
(declare-fun |piecewise for y2_1_endpoint3_2| () Bool)
(declare-fun y2_1 () Real)
(declare-fun likelihoody2_1 () Real)
(declare-fun y2_2 () Real)
(declare-fun likelihoody2_2 () Real)
(declare-fun likelihoodoutlier3 () Real)
(declare-fun y3_1_endpoint3_1 () Real)
(declare-fun |piecewise for y3_1_endpoint3_1| () Bool)
(declare-fun y3_1_endpoint2_1 () Real)
(declare-fun |piecewise for y3_1_endpoint2_1| () Bool)
(declare-fun y3_1_endpoint1_1 () Real)
(declare-fun |piecewise for y3_1_endpoint1_1| () Bool)
(declare-fun y3_1_endpoint0_2 () Real)
(declare-fun |piecewise for y3_1_endpoint0_2| () Bool)
(declare-fun y3_1_endpoint1_2 () Real)
(declare-fun |piecewise for y3_1_endpoint1_2| () Bool)
(declare-fun y3_1_endpoint2_2 () Real)
(declare-fun |piecewise for y3_1_endpoint2_2| () Bool)
(declare-fun y3_1_endpoint3_2 () Real)
(declare-fun |piecewise for y3_1_endpoint3_2| () Bool)
(declare-fun y3_1 () Real)
(declare-fun likelihoody3_1 () Real)
(declare-fun y3_2 () Real)
(declare-fun likelihoody3_2 () Real)
(declare-fun likelihoodoutlier4 () Real)
(declare-fun y4_1_endpoint3_1 () Real)
(declare-fun |piecewise for y4_1_endpoint3_1| () Bool)
(declare-fun y4_1_endpoint2_1 () Real)
(declare-fun |piecewise for y4_1_endpoint2_1| () Bool)
(declare-fun y4_1_endpoint1_1 () Real)
(declare-fun |piecewise for y4_1_endpoint1_1| () Bool)
(declare-fun y4_1_endpoint0_2 () Real)
(declare-fun |piecewise for y4_1_endpoint0_2| () Bool)
(declare-fun y4_1_endpoint1_2 () Real)
(declare-fun |piecewise for y4_1_endpoint1_2| () Bool)
(declare-fun y4_1_endpoint2_2 () Real)
(declare-fun |piecewise for y4_1_endpoint2_2| () Bool)
(declare-fun y4_1_endpoint3_2 () Real)
(declare-fun |piecewise for y4_1_endpoint3_2| () Bool)
(declare-fun y4_1 () Real)
(declare-fun likelihoody4_1 () Real)
(declare-fun y4_2 () Real)
(declare-fun likelihoody4_2 () Real)
(declare-fun likelihoodoutlier5 () Real)
(declare-fun y5_1_endpoint3_1 () Real)
(declare-fun |piecewise for y5_1_endpoint3_1| () Bool)
(declare-fun y5_1_endpoint2_1 () Real)
(declare-fun |piecewise for y5_1_endpoint2_1| () Bool)
(declare-fun y5_1_endpoint1_1 () Real)
(declare-fun |piecewise for y5_1_endpoint1_1| () Bool)
(declare-fun y5_1_endpoint0_2 () Real)
(declare-fun |piecewise for y5_1_endpoint0_2| () Bool)
(declare-fun y5_1_endpoint1_2 () Real)
(declare-fun |piecewise for y5_1_endpoint1_2| () Bool)
(declare-fun y5_1_endpoint2_2 () Real)
(declare-fun |piecewise for y5_1_endpoint2_2| () Bool)
(declare-fun y5_1_endpoint3_2 () Real)
(declare-fun |piecewise for y5_1_endpoint3_2| () Bool)
(declare-fun y5_1 () Real)
(declare-fun likelihoody5_1 () Real)
(declare-fun y5_2 () Real)
(declare-fun likelihoody5_2 () Real)
(declare-fun likelihoodoutlier6 () Real)
(declare-fun y6_1_endpoint3_1 () Real)
(declare-fun |piecewise for y6_1_endpoint3_1| () Bool)
(declare-fun y6_1_endpoint2_1 () Real)
(declare-fun |piecewise for y6_1_endpoint2_1| () Bool)
(declare-fun y6_1_endpoint1_1 () Real)
(declare-fun |piecewise for y6_1_endpoint1_1| () Bool)
(declare-fun y6_1_endpoint0_2 () Real)
(declare-fun |piecewise for y6_1_endpoint0_2| () Bool)
(declare-fun y6_1_endpoint1_2 () Real)
(declare-fun |piecewise for y6_1_endpoint1_2| () Bool)
(declare-fun y6_1_endpoint2_2 () Real)
(declare-fun |piecewise for y6_1_endpoint2_2| () Bool)
(declare-fun y6_1_endpoint3_2 () Real)
(declare-fun |piecewise for y6_1_endpoint3_2| () Bool)
(declare-fun y6_1 () Real)
(declare-fun likelihoody6_1 () Real)
(declare-fun y6_2 () Real)
(declare-fun likelihoody6_2 () Real)
(declare-fun likelihoodoutlier7 () Real)
(declare-fun y7_1_endpoint3_1 () Real)
(declare-fun |piecewise for y7_1_endpoint3_1| () Bool)
(declare-fun y7_1_endpoint2_1 () Real)
(declare-fun |piecewise for y7_1_endpoint2_1| () Bool)
(declare-fun y7_1_endpoint1_1 () Real)
(declare-fun |piecewise for y7_1_endpoint1_1| () Bool)
(declare-fun y7_1_endpoint0_2 () Real)
(declare-fun |piecewise for y7_1_endpoint0_2| () Bool)
(declare-fun y7_1_endpoint1_2 () Real)
(declare-fun |piecewise for y7_1_endpoint1_2| () Bool)
(declare-fun y7_1_endpoint2_2 () Real)
(declare-fun |piecewise for y7_1_endpoint2_2| () Bool)
(declare-fun y7_1_endpoint3_2 () Real)
(declare-fun |piecewise for y7_1_endpoint3_2| () Bool)
(declare-fun y7_1 () Real)
(declare-fun likelihoody7_1 () Real)
(declare-fun y7_2 () Real)
(declare-fun likelihoody7_2 () Real)
(declare-fun likelihoodoutlier8 () Real)
(declare-fun y8_1_endpoint3_1 () Real)
(declare-fun |piecewise for y8_1_endpoint3_1| () Bool)
(declare-fun y8_1_endpoint2_1 () Real)
(declare-fun |piecewise for y8_1_endpoint2_1| () Bool)
(declare-fun y8_1_endpoint1_1 () Real)
(declare-fun |piecewise for y8_1_endpoint1_1| () Bool)
(declare-fun y8_1_endpoint0_2 () Real)
(declare-fun |piecewise for y8_1_endpoint0_2| () Bool)
(declare-fun y8_1_endpoint1_2 () Real)
(declare-fun |piecewise for y8_1_endpoint1_2| () Bool)
(declare-fun y8_1_endpoint2_2 () Real)
(declare-fun |piecewise for y8_1_endpoint2_2| () Bool)
(declare-fun y8_1_endpoint3_2 () Real)
(declare-fun |piecewise for y8_1_endpoint3_2| () Bool)
(declare-fun y8_1 () Real)
(declare-fun likelihoody8_1 () Real)
(declare-fun y8_2 () Real)
(declare-fun likelihoody8_2 () Real)
(declare-fun likelihoodoutlier9 () Real)
(declare-fun y9_1_endpoint3_1 () Real)
(declare-fun |piecewise for y9_1_endpoint3_1| () Bool)
(declare-fun y9_1_endpoint2_1 () Real)
(declare-fun |piecewise for y9_1_endpoint2_1| () Bool)
(declare-fun y9_1_endpoint1_1 () Real)
(declare-fun |piecewise for y9_1_endpoint1_1| () Bool)
(declare-fun y9_1_endpoint0_2 () Real)
(declare-fun |piecewise for y9_1_endpoint0_2| () Bool)
(declare-fun y9_1_endpoint1_2 () Real)
(declare-fun |piecewise for y9_1_endpoint1_2| () Bool)
(declare-fun y9_1_endpoint2_2 () Real)
(declare-fun |piecewise for y9_1_endpoint2_2| () Bool)
(declare-fun y9_1_endpoint3_2 () Real)
(declare-fun |piecewise for y9_1_endpoint3_2| () Bool)
(declare-fun y9_1 () Real)
(declare-fun likelihoody9_1 () Real)
(declare-fun y9_2 () Real)
(declare-fun likelihoody9_2 () Real)
(declare-fun likelihoodoutlier10 () Real)
(declare-fun y10_1_endpoint3_1 () Real)
(declare-fun |piecewise for y10_1_endpoint3_1| () Bool)
(declare-fun y10_1_endpoint2_1 () Real)
(declare-fun |piecewise for y10_1_endpoint2_1| () Bool)
(declare-fun y10_1_endpoint1_1 () Real)
(declare-fun |piecewise for y10_1_endpoint1_1| () Bool)
(declare-fun y10_1_endpoint0_2 () Real)
(declare-fun |piecewise for y10_1_endpoint0_2| () Bool)
(declare-fun y10_1_endpoint1_2 () Real)
(declare-fun |piecewise for y10_1_endpoint1_2| () Bool)
(declare-fun y10_1_endpoint2_2 () Real)
(declare-fun |piecewise for y10_1_endpoint2_2| () Bool)
(declare-fun y10_1_endpoint3_2 () Real)
(declare-fun |piecewise for y10_1_endpoint3_2| () Bool)
(declare-fun y10_1 () Real)
(declare-fun likelihoody10_1 () Real)
(declare-fun y10_2 () Real)
(declare-fun likelihoody10_2 () Real)
(declare-fun likelihoodoutlier11 () Real)
(declare-fun y11_1_endpoint3_1 () Real)
(declare-fun |piecewise for y11_1_endpoint3_1| () Bool)
(declare-fun y11_1_endpoint2_1 () Real)
(declare-fun |piecewise for y11_1_endpoint2_1| () Bool)
(declare-fun y11_1_endpoint1_1 () Real)
(declare-fun |piecewise for y11_1_endpoint1_1| () Bool)
(declare-fun y11_1_endpoint0_2 () Real)
(declare-fun |piecewise for y11_1_endpoint0_2| () Bool)
(declare-fun y11_1_endpoint1_2 () Real)
(declare-fun |piecewise for y11_1_endpoint1_2| () Bool)
(declare-fun y11_1_endpoint2_2 () Real)
(declare-fun |piecewise for y11_1_endpoint2_2| () Bool)
(declare-fun y11_1_endpoint3_2 () Real)
(declare-fun |piecewise for y11_1_endpoint3_2| () Bool)
(declare-fun y11_1 () Real)
(declare-fun likelihoody11_1 () Real)
(declare-fun y11_2 () Real)
(declare-fun likelihoody11_2 () Real)
(declare-fun likelihoodoutlier12 () Real)
(declare-fun y12_1_endpoint3_1 () Real)
(declare-fun |piecewise for y12_1_endpoint3_1| () Bool)
(declare-fun y12_1_endpoint2_1 () Real)
(declare-fun |piecewise for y12_1_endpoint2_1| () Bool)
(declare-fun y12_1_endpoint1_1 () Real)
(declare-fun |piecewise for y12_1_endpoint1_1| () Bool)
(declare-fun y12_1_endpoint0_2 () Real)
(declare-fun |piecewise for y12_1_endpoint0_2| () Bool)
(declare-fun y12_1_endpoint1_2 () Real)
(declare-fun |piecewise for y12_1_endpoint1_2| () Bool)
(declare-fun y12_1_endpoint2_2 () Real)
(declare-fun |piecewise for y12_1_endpoint2_2| () Bool)
(declare-fun y12_1_endpoint3_2 () Real)
(declare-fun |piecewise for y12_1_endpoint3_2| () Bool)
(declare-fun y12_1 () Real)
(declare-fun likelihoody12_1 () Real)
(declare-fun y12_2 () Real)
(declare-fun likelihoody12_2 () Real)
(declare-fun likelihoodoutlier13 () Real)
(declare-fun y13_1_endpoint3_1 () Real)
(declare-fun |piecewise for y13_1_endpoint3_1| () Bool)
(declare-fun y13_1_endpoint2_1 () Real)
(declare-fun |piecewise for y13_1_endpoint2_1| () Bool)
(declare-fun y13_1_endpoint1_1 () Real)
(declare-fun |piecewise for y13_1_endpoint1_1| () Bool)
(declare-fun y13_1_endpoint0_2 () Real)
(declare-fun |piecewise for y13_1_endpoint0_2| () Bool)
(declare-fun y13_1_endpoint1_2 () Real)
(declare-fun |piecewise for y13_1_endpoint1_2| () Bool)
(declare-fun y13_1_endpoint2_2 () Real)
(declare-fun |piecewise for y13_1_endpoint2_2| () Bool)
(declare-fun y13_1_endpoint3_2 () Real)
(declare-fun |piecewise for y13_1_endpoint3_2| () Bool)
(declare-fun y13_1 () Real)
(declare-fun likelihoody13_1 () Real)
(declare-fun y13_2 () Real)
(declare-fun likelihoody13_2 () Real)
(declare-fun likelihoodoutlier14 () Real)
(declare-fun y14_1_endpoint3_1 () Real)
(declare-fun |piecewise for y14_1_endpoint3_1| () Bool)
(declare-fun y14_1_endpoint2_1 () Real)
(declare-fun |piecewise for y14_1_endpoint2_1| () Bool)
(declare-fun y14_1_endpoint1_1 () Real)
(declare-fun |piecewise for y14_1_endpoint1_1| () Bool)
(declare-fun y14_1_endpoint0_2 () Real)
(declare-fun |piecewise for y14_1_endpoint0_2| () Bool)
(declare-fun y14_1_endpoint1_2 () Real)
(declare-fun |piecewise for y14_1_endpoint1_2| () Bool)
(declare-fun y14_1_endpoint2_2 () Real)
(declare-fun |piecewise for y14_1_endpoint2_2| () Bool)
(declare-fun y14_1_endpoint3_2 () Real)
(declare-fun |piecewise for y14_1_endpoint3_2| () Bool)
(declare-fun y14_1 () Real)
(declare-fun likelihoody14_1 () Real)
(declare-fun y14_2 () Real)
(declare-fun likelihoody14_2 () Real)
(declare-fun likelihoodoutlier15 () Real)
(declare-fun y15_1_endpoint3_1 () Real)
(declare-fun |piecewise for y15_1_endpoint3_1| () Bool)
(declare-fun y15_1_endpoint2_1 () Real)
(declare-fun |piecewise for y15_1_endpoint2_1| () Bool)
(declare-fun y15_1_endpoint1_1 () Real)
(declare-fun |piecewise for y15_1_endpoint1_1| () Bool)
(declare-fun y15_1_endpoint0_2 () Real)
(declare-fun |piecewise for y15_1_endpoint0_2| () Bool)
(declare-fun y15_1_endpoint1_2 () Real)
(declare-fun |piecewise for y15_1_endpoint1_2| () Bool)
(declare-fun y15_1_endpoint2_2 () Real)
(declare-fun |piecewise for y15_1_endpoint2_2| () Bool)
(declare-fun y15_1_endpoint3_2 () Real)
(declare-fun |piecewise for y15_1_endpoint3_2| () Bool)
(declare-fun y15_1 () Real)
(declare-fun likelihoody15_1 () Real)
(declare-fun y15_2 () Real)
(declare-fun likelihoody15_2 () Real)
(declare-fun likelihoodoutlier16 () Real)
(declare-fun y16_1_endpoint3_1 () Real)
(declare-fun |piecewise for y16_1_endpoint3_1| () Bool)
(declare-fun y16_1_endpoint2_1 () Real)
(declare-fun |piecewise for y16_1_endpoint2_1| () Bool)
(declare-fun y16_1_endpoint1_1 () Real)
(declare-fun |piecewise for y16_1_endpoint1_1| () Bool)
(declare-fun y16_1_endpoint0_2 () Real)
(declare-fun |piecewise for y16_1_endpoint0_2| () Bool)
(declare-fun y16_1_endpoint1_2 () Real)
(declare-fun |piecewise for y16_1_endpoint1_2| () Bool)
(declare-fun y16_1_endpoint2_2 () Real)
(declare-fun |piecewise for y16_1_endpoint2_2| () Bool)
(declare-fun y16_1_endpoint3_2 () Real)
(declare-fun |piecewise for y16_1_endpoint3_2| () Bool)
(declare-fun y16_1 () Real)
(declare-fun likelihoody16_1 () Real)
(declare-fun y16_2 () Real)
(declare-fun likelihoody16_2 () Real)
(declare-fun likelihoodoutlier17 () Real)
(declare-fun y17_1_endpoint3_1 () Real)
(declare-fun |piecewise for y17_1_endpoint3_1| () Bool)
(declare-fun y17_1_endpoint2_1 () Real)
(declare-fun |piecewise for y17_1_endpoint2_1| () Bool)
(declare-fun y17_1_endpoint1_1 () Real)
(declare-fun |piecewise for y17_1_endpoint1_1| () Bool)
(declare-fun y17_1_endpoint0_2 () Real)
(declare-fun |piecewise for y17_1_endpoint0_2| () Bool)
(declare-fun y17_1_endpoint1_2 () Real)
(declare-fun |piecewise for y17_1_endpoint1_2| () Bool)
(declare-fun y17_1_endpoint2_2 () Real)
(declare-fun |piecewise for y17_1_endpoint2_2| () Bool)
(declare-fun y17_1_endpoint3_2 () Real)
(declare-fun |piecewise for y17_1_endpoint3_2| () Bool)
(declare-fun y17_1 () Real)
(declare-fun likelihoody17_1 () Real)
(declare-fun y17_2 () Real)
(declare-fun likelihoody17_2 () Real)
(declare-fun likelihoodoutlier18 () Real)
(declare-fun y18_1_endpoint3_1 () Real)
(declare-fun |piecewise for y18_1_endpoint3_1| () Bool)
(declare-fun y18_1_endpoint2_1 () Real)
(declare-fun |piecewise for y18_1_endpoint2_1| () Bool)
(declare-fun y18_1_endpoint1_1 () Real)
(declare-fun |piecewise for y18_1_endpoint1_1| () Bool)
(declare-fun y18_1_endpoint0_2 () Real)
(declare-fun |piecewise for y18_1_endpoint0_2| () Bool)
(declare-fun y18_1_endpoint1_2 () Real)
(declare-fun |piecewise for y18_1_endpoint1_2| () Bool)
(declare-fun y18_1_endpoint2_2 () Real)
(declare-fun |piecewise for y18_1_endpoint2_2| () Bool)
(declare-fun y18_1_endpoint3_2 () Real)
(declare-fun |piecewise for y18_1_endpoint3_2| () Bool)
(declare-fun y18_1 () Real)
(declare-fun likelihoody18_1 () Real)
(declare-fun y18_2 () Real)
(declare-fun likelihoody18_2 () Real)
(declare-fun likelihoodoutlier19 () Real)
(declare-fun y19_1_endpoint3_1 () Real)
(declare-fun |piecewise for y19_1_endpoint3_1| () Bool)
(declare-fun y19_1_endpoint2_1 () Real)
(declare-fun |piecewise for y19_1_endpoint2_1| () Bool)
(declare-fun y19_1_endpoint1_1 () Real)
(declare-fun |piecewise for y19_1_endpoint1_1| () Bool)
(declare-fun y19_1_endpoint0_2 () Real)
(declare-fun |piecewise for y19_1_endpoint0_2| () Bool)
(declare-fun y19_1_endpoint1_2 () Real)
(declare-fun |piecewise for y19_1_endpoint1_2| () Bool)
(declare-fun y19_1_endpoint2_2 () Real)
(declare-fun |piecewise for y19_1_endpoint2_2| () Bool)
(declare-fun y19_1_endpoint3_2 () Real)
(declare-fun |piecewise for y19_1_endpoint3_2| () Bool)
(declare-fun y19_1 () Real)
(declare-fun likelihoody19_1 () Real)
(declare-fun y19_2 () Real)
(declare-fun likelihoody19_2 () Real)
(declare-fun likelihoodoutlier20 () Real)
(declare-fun y20_1_endpoint3_1 () Real)
(declare-fun |piecewise for y20_1_endpoint3_1| () Bool)
(declare-fun y20_1_endpoint2_1 () Real)
(declare-fun |piecewise for y20_1_endpoint2_1| () Bool)
(declare-fun y20_1_endpoint1_1 () Real)
(declare-fun |piecewise for y20_1_endpoint1_1| () Bool)
(declare-fun y20_1_endpoint0_2 () Real)
(declare-fun |piecewise for y20_1_endpoint0_2| () Bool)
(declare-fun y20_1_endpoint1_2 () Real)
(declare-fun |piecewise for y20_1_endpoint1_2| () Bool)
(declare-fun y20_1_endpoint2_2 () Real)
(declare-fun |piecewise for y20_1_endpoint2_2| () Bool)
(declare-fun y20_1_endpoint3_2 () Real)
(declare-fun |piecewise for y20_1_endpoint3_2| () Bool)
(declare-fun y20_1 () Real)
(declare-fun likelihoody20_1 () Real)
(declare-fun y20_2 () Real)
(declare-fun likelihoody20_2 () Real)
(declare-fun y1 () Real)
(declare-fun likelihoody1 () Real)
(declare-fun alivey1 () Bool)
(declare-fun y2 () Real)
(declare-fun likelihoody2 () Real)
(declare-fun alivey2 () Bool)
(declare-fun y3 () Real)
(declare-fun likelihoody3 () Real)
(declare-fun alivey3 () Bool)
(declare-fun y4 () Real)
(declare-fun likelihoody4 () Real)
(declare-fun alivey4 () Bool)
(declare-fun y5 () Real)
(declare-fun likelihoody5 () Real)
(declare-fun alivey5 () Bool)
(declare-fun y6 () Real)
(declare-fun likelihoody6 () Real)
(declare-fun alivey6 () Bool)
(declare-fun y7 () Real)
(declare-fun likelihoody7 () Real)
(declare-fun alivey7 () Bool)
(declare-fun y8 () Real)
(declare-fun likelihoody8 () Real)
(declare-fun alivey8 () Bool)
(declare-fun y9 () Real)
(declare-fun likelihoody9 () Real)
(declare-fun alivey9 () Bool)
(declare-fun y10 () Real)
(declare-fun likelihoody10 () Real)
(declare-fun alivey10 () Bool)
(declare-fun y11 () Real)
(declare-fun likelihoody11 () Real)
(declare-fun alivey11 () Bool)
(declare-fun y12 () Real)
(declare-fun likelihoody12 () Real)
(declare-fun alivey12 () Bool)
(declare-fun y13 () Real)
(declare-fun likelihoody13 () Real)
(declare-fun alivey13 () Bool)
(declare-fun y14 () Real)
(declare-fun likelihoody14 () Real)
(declare-fun alivey14 () Bool)
(declare-fun y15 () Real)
(declare-fun likelihoody15 () Real)
(declare-fun alivey15 () Bool)
(declare-fun y16 () Real)
(declare-fun likelihoody16 () Real)
(declare-fun alivey16 () Bool)
(declare-fun y17 () Real)
(declare-fun likelihoody17 () Real)
(declare-fun alivey17 () Bool)
(declare-fun y18 () Real)
(declare-fun likelihoody18 () Real)
(declare-fun alivey18 () Bool)
(declare-fun y19 () Real)
(declare-fun likelihoody19 () Real)
(declare-fun alivey19 () Bool)
(declare-fun y20 () Real)
(declare-fun likelihoody20 () Real)
(declare-fun alivey20 () Bool)
(declare-fun trace_prob () Real)
(assert
 (= alivenoise true))
(assert
 (= aliveintercept true))
(assert
 (= aliveslope true))
(assert
 (= aliveproboutlier true))
(assert
 (= aliveoutlier1 true))
(assert
 (let (($x18 (= outlier1 0)))
 (= alivey1_1 $x18)))
(assert
 (= alivey1_2 (and (distinct outlier1 0) true)))
(assert
 (= aliveoutlier2 true))
(assert
 (let (($x27 (= outlier2 0)))
 (= alivey2_1 $x27)))
(assert
 (= alivey2_2 (and (distinct outlier2 0) true)))
(assert
 (= aliveoutlier3 true))
(assert
 (let (($x36 (= outlier3 0)))
 (= alivey3_1 $x36)))
(assert
 (= alivey3_2 (and (distinct outlier3 0) true)))
(assert
 (= aliveoutlier4 true))
(assert
 (let (($x45 (= outlier4 0)))
 (= alivey4_1 $x45)))
(assert
 (= alivey4_2 (and (distinct outlier4 0) true)))
(assert
 (= aliveoutlier5 true))
(assert
 (let (($x54 (= outlier5 0)))
 (= alivey5_1 $x54)))
(assert
 (= alivey5_2 (and (distinct outlier5 0) true)))
(assert
 (= aliveoutlier6 true))
(assert
 (let (($x63 (= outlier6 0)))
 (= alivey6_1 $x63)))
(assert
 (= alivey6_2 (and (distinct outlier6 0) true)))
(assert
 (= aliveoutlier7 true))
(assert
 (let (($x72 (= outlier7 0)))
 (= alivey7_1 $x72)))
(assert
 (= alivey7_2 (and (distinct outlier7 0) true)))
(assert
 (= aliveoutlier8 true))
(assert
 (let (($x81 (= outlier8 0)))
 (= alivey8_1 $x81)))
(assert
 (= alivey8_2 (and (distinct outlier8 0) true)))
(assert
 (= aliveoutlier9 true))
(assert
 (let (($x90 (= outlier9 0)))
 (= alivey9_1 $x90)))
(assert
 (= alivey9_2 (and (distinct outlier9 0) true)))
(assert
 (= aliveoutlier10 true))
(assert
 (let (($x99 (= outlier10 0)))
 (= alivey10_1 $x99)))
(assert
 (= alivey10_2 (and (distinct outlier10 0) true)))
(assert
 (= aliveoutlier11 true))
(assert
 (let (($x108 (= outlier11 0)))
 (= alivey11_1 $x108)))
(assert
 (= alivey11_2 (and (distinct outlier11 0) true)))
(assert
 (= aliveoutlier12 true))
(assert
 (let (($x117 (= outlier12 0)))
 (= alivey12_1 $x117)))
(assert
 (= alivey12_2 (and (distinct outlier12 0) true)))
(assert
 (= aliveoutlier13 true))
(assert
 (let (($x126 (= outlier13 0)))
 (= alivey13_1 $x126)))
(assert
 (= alivey13_2 (and (distinct outlier13 0) true)))
(assert
 (= aliveoutlier14 true))
(assert
 (let (($x135 (= outlier14 0)))
 (= alivey14_1 $x135)))
(assert
 (= alivey14_2 (and (distinct outlier14 0) true)))
(assert
 (= aliveoutlier15 true))
(assert
 (let (($x144 (= outlier15 0)))
 (= alivey15_1 $x144)))
(assert
 (= alivey15_2 (and (distinct outlier15 0) true)))
(assert
 (= aliveoutlier16 true))
(assert
 (let (($x153 (= outlier16 0)))
 (= alivey16_1 $x153)))
(assert
 (= alivey16_2 (and (distinct outlier16 0) true)))
(assert
 (= aliveoutlier17 true))
(assert
 (let (($x162 (= outlier17 0)))
 (= alivey17_1 $x162)))
(assert
 (= alivey17_2 (and (distinct outlier17 0) true)))
(assert
 (= aliveoutlier18 true))
(assert
 (let (($x171 (= outlier18 0)))
 (= alivey18_1 $x171)))
(assert
 (= alivey18_2 (and (distinct outlier18 0) true)))
(assert
 (= aliveoutlier19 true))
(assert
 (let (($x180 (= outlier19 0)))
 (= alivey19_1 $x180)))
(assert
 (= alivey19_2 (and (distinct outlier19 0) true)))
(assert
 (= aliveoutlier20 true))
(assert
 (let (($x189 (= outlier20 0)))
 (= alivey20_1 $x189)))
(assert
 (= alivey20_2 (and (distinct outlier20 0) true)))
(assert
 (= x1 (- 5.0)))
(assert
 (= x2 (- (/ 1118421052631579.0 250000000000000.0))))
(assert
 (= x3 (- (/ 19736842105263157.0 5000000000000000.0))))
(assert
 (= x4 (- (/ 34210526315789473.0 10000000000000000.0))))
(assert
 (= x5 (- (/ 28947368421052633.0 10000000000000000.0))))
(assert
 (= x6 (- (/ 5921052631578947.0 2500000000000000.0))))
(assert
 (= x7 (- (/ 18421052631578947.0 10000000000000000.0))))
(assert
 (= x8 (- (/ 6578947368421053.0 5000000000000000.0))))
(assert
 (= x9 (- (/ 7894736842105263.0 10000000000000000.0))))
(assert
 (= x10 (- (/ 2631578947368421.0 10000000000000000.0))))
(assert
 (= x11 (/ 2631578947368421.0 10000000000000000.0)))
(assert
 (= x12 (/ 7894736842105263.0 10000000000000000.0)))
(assert
 (= x13 (/ 6578947368421053.0 5000000000000000.0)))
(assert
 (= x14 (/ 18421052631578947.0 10000000000000000.0)))
(assert
 (= x15 (/ 5921052631578947.0 2500000000000000.0)))
(assert
 (= x16 (/ 28947368421052633.0 10000000000000000.0)))
(assert
 (= x17 (/ 34210526315789473.0 10000000000000000.0)))
(assert
 (= x18 (/ 19736842105263157.0 5000000000000000.0)))
(assert
 (= x19 (/ 1118421052631579.0 250000000000000.0)))
(assert
 (= x20 5.0))
(assert
 (= mean1 (+ intercept (* slope x1))))
(assert
 (= mean2 (+ intercept (* slope x2))))
(assert
 (= mean3 (+ intercept (* slope x3))))
(assert
 (= mean4 (+ intercept (* slope x4))))
(assert
 (= mean5 (+ intercept (* slope x5))))
(assert
 (= mean6 (+ intercept (* slope x6))))
(assert
 (= mean7 (+ intercept (* slope x7))))
(assert
 (= mean8 (+ intercept (* slope x8))))
(assert
 (= mean9 (+ intercept (* slope x9))))
(assert
 (= mean10 (+ intercept (* slope x10))))
(assert
 (= mean11 (+ intercept (* slope x11))))
(assert
 (= mean12 (+ intercept (* slope x12))))
(assert
 (= mean13 (+ intercept (* slope x13))))
(assert
 (= mean14 (+ intercept (* slope x14))))
(assert
 (= mean15 (+ intercept (* slope x15))))
(assert
 (= mean16 (+ intercept (* slope x16))))
(assert
 (= mean17 (+ intercept (* slope x17))))
(assert
 (= mean18 (+ intercept (* slope x18))))
(assert
 (= mean19 (+ intercept (* slope x19))))
(assert
 (= mean20 (+ intercept (* slope x20))))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (> noise 0.0))
(assert
 (let ((?x677 (ite (< noise (/ 1.0 10.0)) 0.0 (ite (<= noise 1.0) noise_div 0.0))))
 (= likelihoodnoise ?x677)))
(assert
 (let ((?x695 (ite (< intercept 4.0) (+ (* (- (/ 734304212622459.0 15625000000000000.0)) intercept) (/ 2687220827487069.0 12500000000000000.0)) (ite (< intercept 6.0) (+ (* (- (/ 1548739910366263.0 125000000000000000.0)) intercept) (/ 3827773244966823.0 50000000000000000.0)) 0.0))))
 (let ((?x707 (ite (< intercept 0.0) (+ (* (/ 2452708227076559.0 62500000000000000.0) intercept) (/ 19947339024974067.0 100000000000000000.0)) (ite (< intercept 2.0) (+ (* (- (/ 2452708227076559.0 62500000000000000.0)) intercept) (/ 19947339024974067.0 100000000000000000.0)) ?x695))))
 (let ((?x719 (ite (< intercept (- 4.0)) (+ (* (/ 1548739910366263.0 125000000000000000.0) intercept) (/ 3827773244966823.0 50000000000000000.0)) (ite (< intercept (- 2.0)) (+ (* (/ 734304212622459.0 15625000000000000.0) intercept) (/ 2687220827487069.0 12500000000000000.0)) ?x707))))
 (let ((?x724 (ite (> intercept 6.0) 0.0 (ite (< intercept (- 6.0)) 0.0 ?x719))))
 (= likelihoodintercept ?x724))))))
(assert
 (let ((?x778 (ite (< slope 4.0) (+ (* (- (/ 734304212622459.0 15625000000000000.0)) slope) (/ 2687220827487069.0 12500000000000000.0)) (ite (< slope 6.0) (+ (* (- (/ 1548739910366263.0 125000000000000000.0)) slope) (/ 3827773244966823.0 50000000000000000.0)) 0.0))))
 (let ((?x786 (ite (< slope 0.0) (+ (* (/ 2452708227076559.0 62500000000000000.0) slope) (/ 19947339024974067.0 100000000000000000.0)) (ite (< slope 2.0) (+ (* (- (/ 2452708227076559.0 62500000000000000.0)) slope) (/ 19947339024974067.0 100000000000000000.0)) ?x778))))
 (let ((?x794 (ite (< slope (- 4.0)) (+ (* (/ 1548739910366263.0 125000000000000000.0) slope) (/ 3827773244966823.0 50000000000000000.0)) (ite (< slope (- 2.0)) (+ (* (/ 734304212622459.0 15625000000000000.0) slope) (/ 2687220827487069.0 12500000000000000.0)) ?x786))))
 (= likelihoodslope (ite (> slope 6.0) 0.0 (ite (< slope (- 6.0)) 0.0 ?x794)))))))
(assert
 (let ((?x851 (ite (< proboutlier 0.0) 0.0 (ite (<= proboutlier 1.0) proboutlier_div 0.0))))
 (= likelihoodproboutlier ?x851)))
(assert
 (= likelihoodoutlier1 (ite (= outlier1 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x919 (= y1_1_endpoint3_1 ?x918)))
 (=> |piecewise for y1_1_endpoint3_1| $x919)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x1109 (= y1_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y1_1_endpoint2_1| $x1109)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x1256 (= y1_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y1_1_endpoint1_1| $x1256)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x1398 (= y1_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y1_1_endpoint0_2| $x1398)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x1411 (= y1_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y1_1_endpoint1_2| $x1411)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x1420 (= y1_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y1_1_endpoint2_2| $x1420)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x1429 (= y1_1_endpoint3_2 ?x918)))
 (=> |piecewise for y1_1_endpoint3_2| $x1429)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x1418 (+ mean1 ?x1072)))
 (let ((?x1464 (/ (- y1_1_endpoint3_2 y1_1_endpoint2_2) (- (+ mean1 (* ?x869 3.0)) ?x1418))))
 (let ((?x1470 (ite (< y1_1 (+ mean1 (* ?x869 3.0))) (+ (* ?x1464 y1_1) (- y1_1_endpoint2_2 (* ?x1464 ?x1418))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x1409 (+ mean1 ?x1219)))
 (let ((?x1459 (/ (- y1_1_endpoint2_2 y1_1_endpoint1_2) (- ?x1418 ?x1409))))
 (let ((?x1474 (ite (< y1_1 ?x1418) (+ (* ?x1459 y1_1) (- y1_1_endpoint1_2 (* ?x1459 ?x1409))) ?x1470)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x1362 (+ mean1 ?x1361)))
 (let ((?x1454 (/ (- y1_1_endpoint1_2 y1_1_endpoint0_2) (- ?x1409 ?x1362))))
 (let ((?x1478 (ite (< y1_1 ?x1409) (+ (* ?x1454 y1_1) (- y1_1_endpoint0_2 (* ?x1454 ?x1362))) ?x1474)))
 (let ((?x1220 (- mean1 ?x1219)))
 (let ((?x1449 (/ (- y1_1_endpoint0_2 y1_1_endpoint1_1) (- ?x1362 ?x1220))))
 (let ((?x1482 (ite (< y1_1 ?x1362) (+ (* ?x1449 y1_1) (- y1_1_endpoint1_1 (* ?x1449 ?x1220))) ?x1478)))
 (let ((?x1073 (- mean1 ?x1072)))
 (let ((?x1444 (/ (- y1_1_endpoint1_1 y1_1_endpoint2_1) (- ?x1220 ?x1073))))
 (let ((?x1486 (ite (< y1_1 ?x1220) (+ (* ?x1444 y1_1) (- y1_1_endpoint2_1 (* ?x1444 ?x1073))) ?x1482)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x868 (- mean1 ?x867)))
 (let ((?x1439 (/ (- y1_1_endpoint2_1 y1_1_endpoint3_1) (- ?x1073 ?x868))))
 (let ((?x1490 (ite (< y1_1 ?x1073) (+ (* ?x1439 y1_1) (- y1_1_endpoint3_1 (* ?x1439 ?x868))) ?x1486)))
 (let ((?x1494 (ite (> y1_1 (+ mean1 ?x867)) 0.0 (ite (< y1_1 ?x868) 0.0 ?x1490))))
 (= likelihoody1_1 ?x1494))))))))))))))))))))))))))
(assert
 (let ((?x1714 (ite (< y1_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y1_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y1_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y1_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x1726 (ite (< y1_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y1_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y1_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y1_2) (/ 3989467804994813.0 100000000000000000.0)) ?x1714))))
 (let ((?x1739 (ite (< y1_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y1_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y1_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y1_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x1726))))
 (= likelihoody1_2 (ite (> y1_2 30.0) 0.0 (ite (< y1_2 (- 30.0)) 0.0 ?x1739)))))))
(assert
 (= likelihoodoutlier2 (ite (= outlier2 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x1798 (= y2_1_endpoint3_1 ?x918)))
 (=> |piecewise for y2_1_endpoint3_1| $x1798)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x1808 (= y2_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y2_1_endpoint2_1| $x1808)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x1817 (= y2_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y2_1_endpoint1_1| $x1817)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x1826 (= y2_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y2_1_endpoint0_2| $x1826)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x1836 (= y2_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y2_1_endpoint1_2| $x1836)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x1845 (= y2_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y2_1_endpoint2_2| $x1845)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x1854 (= y2_1_endpoint3_2 ?x918)))
 (=> |piecewise for y2_1_endpoint3_2| $x1854)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x1843 (+ mean2 ?x1072)))
 (let ((?x1889 (/ (- y2_1_endpoint3_2 y2_1_endpoint2_2) (- (+ mean2 (* ?x869 3.0)) ?x1843))))
 (let ((?x1895 (ite (< y2_1 (+ mean2 (* ?x869 3.0))) (+ (* ?x1889 y2_1) (- y2_1_endpoint2_2 (* ?x1889 ?x1843))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x1834 (+ mean2 ?x1219)))
 (let ((?x1884 (/ (- y2_1_endpoint2_2 y2_1_endpoint1_2) (- ?x1843 ?x1834))))
 (let ((?x1899 (ite (< y2_1 ?x1843) (+ (* ?x1884 y2_1) (- y2_1_endpoint1_2 (* ?x1884 ?x1834))) ?x1895)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x1824 (+ mean2 ?x1361)))
 (let ((?x1879 (/ (- y2_1_endpoint1_2 y2_1_endpoint0_2) (- ?x1834 ?x1824))))
 (let ((?x1903 (ite (< y2_1 ?x1834) (+ (* ?x1879 y2_1) (- y2_1_endpoint0_2 (* ?x1879 ?x1824))) ?x1899)))
 (let ((?x1815 (- mean2 ?x1219)))
 (let ((?x1874 (/ (- y2_1_endpoint0_2 y2_1_endpoint1_1) (- ?x1824 ?x1815))))
 (let ((?x1907 (ite (< y2_1 ?x1824) (+ (* ?x1874 y2_1) (- y2_1_endpoint1_1 (* ?x1874 ?x1815))) ?x1903)))
 (let ((?x1806 (- mean2 ?x1072)))
 (let ((?x1869 (/ (- y2_1_endpoint1_1 y2_1_endpoint2_1) (- ?x1815 ?x1806))))
 (let ((?x1911 (ite (< y2_1 ?x1815) (+ (* ?x1869 y2_1) (- y2_1_endpoint2_1 (* ?x1869 ?x1806))) ?x1907)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x1796 (- mean2 ?x867)))
 (let ((?x1864 (/ (- y2_1_endpoint2_1 y2_1_endpoint3_1) (- ?x1806 ?x1796))))
 (let ((?x1915 (ite (< y2_1 ?x1806) (+ (* ?x1864 y2_1) (- y2_1_endpoint3_1 (* ?x1864 ?x1796))) ?x1911)))
 (let ((?x1919 (ite (> y2_1 (+ mean2 ?x867)) 0.0 (ite (< y2_1 ?x1796) 0.0 ?x1915))))
 (= likelihoody2_1 ?x1919))))))))))))))))))))))))))
(assert
 (let ((?x2121 (ite (< y2_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y2_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y2_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y2_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x2129 (ite (< y2_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y2_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y2_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y2_2) (/ 3989467804994813.0 100000000000000000.0)) ?x2121))))
 (let ((?x2137 (ite (< y2_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y2_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y2_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y2_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x2129))))
 (= likelihoody2_2 (ite (> y2_2 30.0) 0.0 (ite (< y2_2 (- 30.0)) 0.0 ?x2137)))))))
(assert
 (= likelihoodoutlier3 (ite (= outlier3 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x2195 (= y3_1_endpoint3_1 ?x918)))
 (=> |piecewise for y3_1_endpoint3_1| $x2195)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x2205 (= y3_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y3_1_endpoint2_1| $x2205)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x2214 (= y3_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y3_1_endpoint1_1| $x2214)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x2223 (= y3_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y3_1_endpoint0_2| $x2223)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x2233 (= y3_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y3_1_endpoint1_2| $x2233)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x2242 (= y3_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y3_1_endpoint2_2| $x2242)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x2251 (= y3_1_endpoint3_2 ?x918)))
 (=> |piecewise for y3_1_endpoint3_2| $x2251)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x2240 (+ mean3 ?x1072)))
 (let ((?x2286 (/ (- y3_1_endpoint3_2 y3_1_endpoint2_2) (- (+ mean3 (* ?x869 3.0)) ?x2240))))
 (let ((?x2292 (ite (< y3_1 (+ mean3 (* ?x869 3.0))) (+ (* ?x2286 y3_1) (- y3_1_endpoint2_2 (* ?x2286 ?x2240))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x2231 (+ mean3 ?x1219)))
 (let ((?x2281 (/ (- y3_1_endpoint2_2 y3_1_endpoint1_2) (- ?x2240 ?x2231))))
 (let ((?x2296 (ite (< y3_1 ?x2240) (+ (* ?x2281 y3_1) (- y3_1_endpoint1_2 (* ?x2281 ?x2231))) ?x2292)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x2221 (+ mean3 ?x1361)))
 (let ((?x2276 (/ (- y3_1_endpoint1_2 y3_1_endpoint0_2) (- ?x2231 ?x2221))))
 (let ((?x2300 (ite (< y3_1 ?x2231) (+ (* ?x2276 y3_1) (- y3_1_endpoint0_2 (* ?x2276 ?x2221))) ?x2296)))
 (let ((?x2212 (- mean3 ?x1219)))
 (let ((?x2271 (/ (- y3_1_endpoint0_2 y3_1_endpoint1_1) (- ?x2221 ?x2212))))
 (let ((?x2304 (ite (< y3_1 ?x2221) (+ (* ?x2271 y3_1) (- y3_1_endpoint1_1 (* ?x2271 ?x2212))) ?x2300)))
 (let ((?x2203 (- mean3 ?x1072)))
 (let ((?x2266 (/ (- y3_1_endpoint1_1 y3_1_endpoint2_1) (- ?x2212 ?x2203))))
 (let ((?x2308 (ite (< y3_1 ?x2212) (+ (* ?x2266 y3_1) (- y3_1_endpoint2_1 (* ?x2266 ?x2203))) ?x2304)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x2193 (- mean3 ?x867)))
 (let ((?x2261 (/ (- y3_1_endpoint2_1 y3_1_endpoint3_1) (- ?x2203 ?x2193))))
 (let ((?x2312 (ite (< y3_1 ?x2203) (+ (* ?x2261 y3_1) (- y3_1_endpoint3_1 (* ?x2261 ?x2193))) ?x2308)))
 (let ((?x2316 (ite (> y3_1 (+ mean3 ?x867)) 0.0 (ite (< y3_1 ?x2193) 0.0 ?x2312))))
 (= likelihoody3_1 ?x2316))))))))))))))))))))))))))
(assert
 (let ((?x2518 (ite (< y3_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y3_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y3_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y3_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x2526 (ite (< y3_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y3_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y3_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y3_2) (/ 3989467804994813.0 100000000000000000.0)) ?x2518))))
 (let ((?x2534 (ite (< y3_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y3_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y3_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y3_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x2526))))
 (= likelihoody3_2 (ite (> y3_2 30.0) 0.0 (ite (< y3_2 (- 30.0)) 0.0 ?x2534)))))))
(assert
 (= likelihoodoutlier4 (ite (= outlier4 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x2592 (= y4_1_endpoint3_1 ?x918)))
 (=> |piecewise for y4_1_endpoint3_1| $x2592)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x2602 (= y4_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y4_1_endpoint2_1| $x2602)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x2611 (= y4_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y4_1_endpoint1_1| $x2611)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x2620 (= y4_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y4_1_endpoint0_2| $x2620)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x2630 (= y4_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y4_1_endpoint1_2| $x2630)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x2639 (= y4_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y4_1_endpoint2_2| $x2639)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x2648 (= y4_1_endpoint3_2 ?x918)))
 (=> |piecewise for y4_1_endpoint3_2| $x2648)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x2637 (+ mean4 ?x1072)))
 (let ((?x2683 (/ (- y4_1_endpoint3_2 y4_1_endpoint2_2) (- (+ mean4 (* ?x869 3.0)) ?x2637))))
 (let ((?x2689 (ite (< y4_1 (+ mean4 (* ?x869 3.0))) (+ (* ?x2683 y4_1) (- y4_1_endpoint2_2 (* ?x2683 ?x2637))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x2628 (+ mean4 ?x1219)))
 (let ((?x2678 (/ (- y4_1_endpoint2_2 y4_1_endpoint1_2) (- ?x2637 ?x2628))))
 (let ((?x2693 (ite (< y4_1 ?x2637) (+ (* ?x2678 y4_1) (- y4_1_endpoint1_2 (* ?x2678 ?x2628))) ?x2689)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x2618 (+ mean4 ?x1361)))
 (let ((?x2673 (/ (- y4_1_endpoint1_2 y4_1_endpoint0_2) (- ?x2628 ?x2618))))
 (let ((?x2697 (ite (< y4_1 ?x2628) (+ (* ?x2673 y4_1) (- y4_1_endpoint0_2 (* ?x2673 ?x2618))) ?x2693)))
 (let ((?x2609 (- mean4 ?x1219)))
 (let ((?x2668 (/ (- y4_1_endpoint0_2 y4_1_endpoint1_1) (- ?x2618 ?x2609))))
 (let ((?x2701 (ite (< y4_1 ?x2618) (+ (* ?x2668 y4_1) (- y4_1_endpoint1_1 (* ?x2668 ?x2609))) ?x2697)))
 (let ((?x2600 (- mean4 ?x1072)))
 (let ((?x2663 (/ (- y4_1_endpoint1_1 y4_1_endpoint2_1) (- ?x2609 ?x2600))))
 (let ((?x2705 (ite (< y4_1 ?x2609) (+ (* ?x2663 y4_1) (- y4_1_endpoint2_1 (* ?x2663 ?x2600))) ?x2701)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x2590 (- mean4 ?x867)))
 (let ((?x2658 (/ (- y4_1_endpoint2_1 y4_1_endpoint3_1) (- ?x2600 ?x2590))))
 (let ((?x2709 (ite (< y4_1 ?x2600) (+ (* ?x2658 y4_1) (- y4_1_endpoint3_1 (* ?x2658 ?x2590))) ?x2705)))
 (let ((?x2713 (ite (> y4_1 (+ mean4 ?x867)) 0.0 (ite (< y4_1 ?x2590) 0.0 ?x2709))))
 (= likelihoody4_1 ?x2713))))))))))))))))))))))))))
(assert
 (let ((?x2915 (ite (< y4_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y4_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y4_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y4_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x2923 (ite (< y4_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y4_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y4_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y4_2) (/ 3989467804994813.0 100000000000000000.0)) ?x2915))))
 (let ((?x2931 (ite (< y4_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y4_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y4_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y4_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x2923))))
 (= likelihoody4_2 (ite (> y4_2 30.0) 0.0 (ite (< y4_2 (- 30.0)) 0.0 ?x2931)))))))
(assert
 (= likelihoodoutlier5 (ite (= outlier5 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x2989 (= y5_1_endpoint3_1 ?x918)))
 (=> |piecewise for y5_1_endpoint3_1| $x2989)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x2999 (= y5_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y5_1_endpoint2_1| $x2999)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x3008 (= y5_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y5_1_endpoint1_1| $x3008)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x3017 (= y5_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y5_1_endpoint0_2| $x3017)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x3027 (= y5_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y5_1_endpoint1_2| $x3027)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x3036 (= y5_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y5_1_endpoint2_2| $x3036)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x3045 (= y5_1_endpoint3_2 ?x918)))
 (=> |piecewise for y5_1_endpoint3_2| $x3045)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x3034 (+ mean5 ?x1072)))
 (let ((?x3080 (/ (- y5_1_endpoint3_2 y5_1_endpoint2_2) (- (+ mean5 (* ?x869 3.0)) ?x3034))))
 (let ((?x3086 (ite (< y5_1 (+ mean5 (* ?x869 3.0))) (+ (* ?x3080 y5_1) (- y5_1_endpoint2_2 (* ?x3080 ?x3034))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x3025 (+ mean5 ?x1219)))
 (let ((?x3075 (/ (- y5_1_endpoint2_2 y5_1_endpoint1_2) (- ?x3034 ?x3025))))
 (let ((?x3090 (ite (< y5_1 ?x3034) (+ (* ?x3075 y5_1) (- y5_1_endpoint1_2 (* ?x3075 ?x3025))) ?x3086)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x3015 (+ mean5 ?x1361)))
 (let ((?x3070 (/ (- y5_1_endpoint1_2 y5_1_endpoint0_2) (- ?x3025 ?x3015))))
 (let ((?x3094 (ite (< y5_1 ?x3025) (+ (* ?x3070 y5_1) (- y5_1_endpoint0_2 (* ?x3070 ?x3015))) ?x3090)))
 (let ((?x3006 (- mean5 ?x1219)))
 (let ((?x3065 (/ (- y5_1_endpoint0_2 y5_1_endpoint1_1) (- ?x3015 ?x3006))))
 (let ((?x3098 (ite (< y5_1 ?x3015) (+ (* ?x3065 y5_1) (- y5_1_endpoint1_1 (* ?x3065 ?x3006))) ?x3094)))
 (let ((?x2997 (- mean5 ?x1072)))
 (let ((?x3060 (/ (- y5_1_endpoint1_1 y5_1_endpoint2_1) (- ?x3006 ?x2997))))
 (let ((?x3102 (ite (< y5_1 ?x3006) (+ (* ?x3060 y5_1) (- y5_1_endpoint2_1 (* ?x3060 ?x2997))) ?x3098)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x2987 (- mean5 ?x867)))
 (let ((?x3055 (/ (- y5_1_endpoint2_1 y5_1_endpoint3_1) (- ?x2997 ?x2987))))
 (let ((?x3106 (ite (< y5_1 ?x2997) (+ (* ?x3055 y5_1) (- y5_1_endpoint3_1 (* ?x3055 ?x2987))) ?x3102)))
 (let ((?x3110 (ite (> y5_1 (+ mean5 ?x867)) 0.0 (ite (< y5_1 ?x2987) 0.0 ?x3106))))
 (= likelihoody5_1 ?x3110))))))))))))))))))))))))))
(assert
 (let ((?x3312 (ite (< y5_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y5_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y5_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y5_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x3320 (ite (< y5_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y5_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y5_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y5_2) (/ 3989467804994813.0 100000000000000000.0)) ?x3312))))
 (let ((?x3328 (ite (< y5_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y5_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y5_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y5_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x3320))))
 (= likelihoody5_2 (ite (> y5_2 30.0) 0.0 (ite (< y5_2 (- 30.0)) 0.0 ?x3328)))))))
(assert
 (= likelihoodoutlier6 (ite (= outlier6 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x3386 (= y6_1_endpoint3_1 ?x918)))
 (=> |piecewise for y6_1_endpoint3_1| $x3386)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x3396 (= y6_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y6_1_endpoint2_1| $x3396)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x3405 (= y6_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y6_1_endpoint1_1| $x3405)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x3414 (= y6_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y6_1_endpoint0_2| $x3414)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x3424 (= y6_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y6_1_endpoint1_2| $x3424)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x3433 (= y6_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y6_1_endpoint2_2| $x3433)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x3442 (= y6_1_endpoint3_2 ?x918)))
 (=> |piecewise for y6_1_endpoint3_2| $x3442)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x3431 (+ mean6 ?x1072)))
 (let ((?x3477 (/ (- y6_1_endpoint3_2 y6_1_endpoint2_2) (- (+ mean6 (* ?x869 3.0)) ?x3431))))
 (let ((?x3483 (ite (< y6_1 (+ mean6 (* ?x869 3.0))) (+ (* ?x3477 y6_1) (- y6_1_endpoint2_2 (* ?x3477 ?x3431))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x3422 (+ mean6 ?x1219)))
 (let ((?x3472 (/ (- y6_1_endpoint2_2 y6_1_endpoint1_2) (- ?x3431 ?x3422))))
 (let ((?x3487 (ite (< y6_1 ?x3431) (+ (* ?x3472 y6_1) (- y6_1_endpoint1_2 (* ?x3472 ?x3422))) ?x3483)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x3412 (+ mean6 ?x1361)))
 (let ((?x3467 (/ (- y6_1_endpoint1_2 y6_1_endpoint0_2) (- ?x3422 ?x3412))))
 (let ((?x3491 (ite (< y6_1 ?x3422) (+ (* ?x3467 y6_1) (- y6_1_endpoint0_2 (* ?x3467 ?x3412))) ?x3487)))
 (let ((?x3403 (- mean6 ?x1219)))
 (let ((?x3462 (/ (- y6_1_endpoint0_2 y6_1_endpoint1_1) (- ?x3412 ?x3403))))
 (let ((?x3495 (ite (< y6_1 ?x3412) (+ (* ?x3462 y6_1) (- y6_1_endpoint1_1 (* ?x3462 ?x3403))) ?x3491)))
 (let ((?x3394 (- mean6 ?x1072)))
 (let ((?x3457 (/ (- y6_1_endpoint1_1 y6_1_endpoint2_1) (- ?x3403 ?x3394))))
 (let ((?x3499 (ite (< y6_1 ?x3403) (+ (* ?x3457 y6_1) (- y6_1_endpoint2_1 (* ?x3457 ?x3394))) ?x3495)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x3384 (- mean6 ?x867)))
 (let ((?x3452 (/ (- y6_1_endpoint2_1 y6_1_endpoint3_1) (- ?x3394 ?x3384))))
 (let ((?x3503 (ite (< y6_1 ?x3394) (+ (* ?x3452 y6_1) (- y6_1_endpoint3_1 (* ?x3452 ?x3384))) ?x3499)))
 (let ((?x3507 (ite (> y6_1 (+ mean6 ?x867)) 0.0 (ite (< y6_1 ?x3384) 0.0 ?x3503))))
 (= likelihoody6_1 ?x3507))))))))))))))))))))))))))
(assert
 (let ((?x3709 (ite (< y6_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y6_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y6_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y6_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x3717 (ite (< y6_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y6_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y6_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y6_2) (/ 3989467804994813.0 100000000000000000.0)) ?x3709))))
 (let ((?x3725 (ite (< y6_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y6_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y6_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y6_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x3717))))
 (= likelihoody6_2 (ite (> y6_2 30.0) 0.0 (ite (< y6_2 (- 30.0)) 0.0 ?x3725)))))))
(assert
 (= likelihoodoutlier7 (ite (= outlier7 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x3783 (= y7_1_endpoint3_1 ?x918)))
 (=> |piecewise for y7_1_endpoint3_1| $x3783)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x3793 (= y7_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y7_1_endpoint2_1| $x3793)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x3802 (= y7_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y7_1_endpoint1_1| $x3802)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x3811 (= y7_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y7_1_endpoint0_2| $x3811)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x3821 (= y7_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y7_1_endpoint1_2| $x3821)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x3830 (= y7_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y7_1_endpoint2_2| $x3830)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x3839 (= y7_1_endpoint3_2 ?x918)))
 (=> |piecewise for y7_1_endpoint3_2| $x3839)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x3828 (+ mean7 ?x1072)))
 (let ((?x3874 (/ (- y7_1_endpoint3_2 y7_1_endpoint2_2) (- (+ mean7 (* ?x869 3.0)) ?x3828))))
 (let ((?x3880 (ite (< y7_1 (+ mean7 (* ?x869 3.0))) (+ (* ?x3874 y7_1) (- y7_1_endpoint2_2 (* ?x3874 ?x3828))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x3819 (+ mean7 ?x1219)))
 (let ((?x3869 (/ (- y7_1_endpoint2_2 y7_1_endpoint1_2) (- ?x3828 ?x3819))))
 (let ((?x3884 (ite (< y7_1 ?x3828) (+ (* ?x3869 y7_1) (- y7_1_endpoint1_2 (* ?x3869 ?x3819))) ?x3880)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x3809 (+ mean7 ?x1361)))
 (let ((?x3864 (/ (- y7_1_endpoint1_2 y7_1_endpoint0_2) (- ?x3819 ?x3809))))
 (let ((?x3888 (ite (< y7_1 ?x3819) (+ (* ?x3864 y7_1) (- y7_1_endpoint0_2 (* ?x3864 ?x3809))) ?x3884)))
 (let ((?x3800 (- mean7 ?x1219)))
 (let ((?x3859 (/ (- y7_1_endpoint0_2 y7_1_endpoint1_1) (- ?x3809 ?x3800))))
 (let ((?x3892 (ite (< y7_1 ?x3809) (+ (* ?x3859 y7_1) (- y7_1_endpoint1_1 (* ?x3859 ?x3800))) ?x3888)))
 (let ((?x3791 (- mean7 ?x1072)))
 (let ((?x3854 (/ (- y7_1_endpoint1_1 y7_1_endpoint2_1) (- ?x3800 ?x3791))))
 (let ((?x3896 (ite (< y7_1 ?x3800) (+ (* ?x3854 y7_1) (- y7_1_endpoint2_1 (* ?x3854 ?x3791))) ?x3892)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x3781 (- mean7 ?x867)))
 (let ((?x3849 (/ (- y7_1_endpoint2_1 y7_1_endpoint3_1) (- ?x3791 ?x3781))))
 (let ((?x3900 (ite (< y7_1 ?x3791) (+ (* ?x3849 y7_1) (- y7_1_endpoint3_1 (* ?x3849 ?x3781))) ?x3896)))
 (let ((?x3904 (ite (> y7_1 (+ mean7 ?x867)) 0.0 (ite (< y7_1 ?x3781) 0.0 ?x3900))))
 (= likelihoody7_1 ?x3904))))))))))))))))))))))))))
(assert
 (let ((?x4106 (ite (< y7_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y7_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y7_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y7_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x4114 (ite (< y7_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y7_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y7_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y7_2) (/ 3989467804994813.0 100000000000000000.0)) ?x4106))))
 (let ((?x4122 (ite (< y7_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y7_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y7_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y7_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x4114))))
 (= likelihoody7_2 (ite (> y7_2 30.0) 0.0 (ite (< y7_2 (- 30.0)) 0.0 ?x4122)))))))
(assert
 (= likelihoodoutlier8 (ite (= outlier8 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x4180 (= y8_1_endpoint3_1 ?x918)))
 (=> |piecewise for y8_1_endpoint3_1| $x4180)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x4190 (= y8_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y8_1_endpoint2_1| $x4190)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x4199 (= y8_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y8_1_endpoint1_1| $x4199)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x4208 (= y8_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y8_1_endpoint0_2| $x4208)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x4218 (= y8_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y8_1_endpoint1_2| $x4218)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x4227 (= y8_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y8_1_endpoint2_2| $x4227)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x4236 (= y8_1_endpoint3_2 ?x918)))
 (=> |piecewise for y8_1_endpoint3_2| $x4236)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x4225 (+ mean8 ?x1072)))
 (let ((?x4271 (/ (- y8_1_endpoint3_2 y8_1_endpoint2_2) (- (+ mean8 (* ?x869 3.0)) ?x4225))))
 (let ((?x4277 (ite (< y8_1 (+ mean8 (* ?x869 3.0))) (+ (* ?x4271 y8_1) (- y8_1_endpoint2_2 (* ?x4271 ?x4225))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x4216 (+ mean8 ?x1219)))
 (let ((?x4266 (/ (- y8_1_endpoint2_2 y8_1_endpoint1_2) (- ?x4225 ?x4216))))
 (let ((?x4281 (ite (< y8_1 ?x4225) (+ (* ?x4266 y8_1) (- y8_1_endpoint1_2 (* ?x4266 ?x4216))) ?x4277)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x4206 (+ mean8 ?x1361)))
 (let ((?x4261 (/ (- y8_1_endpoint1_2 y8_1_endpoint0_2) (- ?x4216 ?x4206))))
 (let ((?x4285 (ite (< y8_1 ?x4216) (+ (* ?x4261 y8_1) (- y8_1_endpoint0_2 (* ?x4261 ?x4206))) ?x4281)))
 (let ((?x4197 (- mean8 ?x1219)))
 (let ((?x4256 (/ (- y8_1_endpoint0_2 y8_1_endpoint1_1) (- ?x4206 ?x4197))))
 (let ((?x4289 (ite (< y8_1 ?x4206) (+ (* ?x4256 y8_1) (- y8_1_endpoint1_1 (* ?x4256 ?x4197))) ?x4285)))
 (let ((?x4188 (- mean8 ?x1072)))
 (let ((?x4251 (/ (- y8_1_endpoint1_1 y8_1_endpoint2_1) (- ?x4197 ?x4188))))
 (let ((?x4293 (ite (< y8_1 ?x4197) (+ (* ?x4251 y8_1) (- y8_1_endpoint2_1 (* ?x4251 ?x4188))) ?x4289)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x4178 (- mean8 ?x867)))
 (let ((?x4246 (/ (- y8_1_endpoint2_1 y8_1_endpoint3_1) (- ?x4188 ?x4178))))
 (let ((?x4297 (ite (< y8_1 ?x4188) (+ (* ?x4246 y8_1) (- y8_1_endpoint3_1 (* ?x4246 ?x4178))) ?x4293)))
 (let ((?x4301 (ite (> y8_1 (+ mean8 ?x867)) 0.0 (ite (< y8_1 ?x4178) 0.0 ?x4297))))
 (= likelihoody8_1 ?x4301))))))))))))))))))))))))))
(assert
 (let ((?x4503 (ite (< y8_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y8_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y8_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y8_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x4511 (ite (< y8_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y8_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y8_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y8_2) (/ 3989467804994813.0 100000000000000000.0)) ?x4503))))
 (let ((?x4519 (ite (< y8_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y8_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y8_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y8_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x4511))))
 (= likelihoody8_2 (ite (> y8_2 30.0) 0.0 (ite (< y8_2 (- 30.0)) 0.0 ?x4519)))))))
(assert
 (= likelihoodoutlier9 (ite (= outlier9 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x4577 (= y9_1_endpoint3_1 ?x918)))
 (=> |piecewise for y9_1_endpoint3_1| $x4577)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x4587 (= y9_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y9_1_endpoint2_1| $x4587)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x4596 (= y9_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y9_1_endpoint1_1| $x4596)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x4605 (= y9_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y9_1_endpoint0_2| $x4605)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x4615 (= y9_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y9_1_endpoint1_2| $x4615)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x4624 (= y9_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y9_1_endpoint2_2| $x4624)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x4633 (= y9_1_endpoint3_2 ?x918)))
 (=> |piecewise for y9_1_endpoint3_2| $x4633)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x4622 (+ mean9 ?x1072)))
 (let ((?x4668 (/ (- y9_1_endpoint3_2 y9_1_endpoint2_2) (- (+ mean9 (* ?x869 3.0)) ?x4622))))
 (let ((?x4674 (ite (< y9_1 (+ mean9 (* ?x869 3.0))) (+ (* ?x4668 y9_1) (- y9_1_endpoint2_2 (* ?x4668 ?x4622))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x4613 (+ mean9 ?x1219)))
 (let ((?x4663 (/ (- y9_1_endpoint2_2 y9_1_endpoint1_2) (- ?x4622 ?x4613))))
 (let ((?x4678 (ite (< y9_1 ?x4622) (+ (* ?x4663 y9_1) (- y9_1_endpoint1_2 (* ?x4663 ?x4613))) ?x4674)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x4603 (+ mean9 ?x1361)))
 (let ((?x4658 (/ (- y9_1_endpoint1_2 y9_1_endpoint0_2) (- ?x4613 ?x4603))))
 (let ((?x4682 (ite (< y9_1 ?x4613) (+ (* ?x4658 y9_1) (- y9_1_endpoint0_2 (* ?x4658 ?x4603))) ?x4678)))
 (let ((?x4594 (- mean9 ?x1219)))
 (let ((?x4653 (/ (- y9_1_endpoint0_2 y9_1_endpoint1_1) (- ?x4603 ?x4594))))
 (let ((?x4686 (ite (< y9_1 ?x4603) (+ (* ?x4653 y9_1) (- y9_1_endpoint1_1 (* ?x4653 ?x4594))) ?x4682)))
 (let ((?x4585 (- mean9 ?x1072)))
 (let ((?x4648 (/ (- y9_1_endpoint1_1 y9_1_endpoint2_1) (- ?x4594 ?x4585))))
 (let ((?x4690 (ite (< y9_1 ?x4594) (+ (* ?x4648 y9_1) (- y9_1_endpoint2_1 (* ?x4648 ?x4585))) ?x4686)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x4575 (- mean9 ?x867)))
 (let ((?x4643 (/ (- y9_1_endpoint2_1 y9_1_endpoint3_1) (- ?x4585 ?x4575))))
 (let ((?x4694 (ite (< y9_1 ?x4585) (+ (* ?x4643 y9_1) (- y9_1_endpoint3_1 (* ?x4643 ?x4575))) ?x4690)))
 (let ((?x4698 (ite (> y9_1 (+ mean9 ?x867)) 0.0 (ite (< y9_1 ?x4575) 0.0 ?x4694))))
 (= likelihoody9_1 ?x4698))))))))))))))))))))))))))
(assert
 (let ((?x4900 (ite (< y9_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y9_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y9_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y9_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x4908 (ite (< y9_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y9_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y9_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y9_2) (/ 3989467804994813.0 100000000000000000.0)) ?x4900))))
 (let ((?x4916 (ite (< y9_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y9_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y9_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y9_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x4908))))
 (= likelihoody9_2 (ite (> y9_2 30.0) 0.0 (ite (< y9_2 (- 30.0)) 0.0 ?x4916)))))))
(assert
 (= likelihoodoutlier10 (ite (= outlier10 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x4974 (= y10_1_endpoint3_1 ?x918)))
 (=> |piecewise for y10_1_endpoint3_1| $x4974)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x4984 (= y10_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y10_1_endpoint2_1| $x4984)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x4993 (= y10_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y10_1_endpoint1_1| $x4993)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x5002 (= y10_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y10_1_endpoint0_2| $x5002)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x5012 (= y10_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y10_1_endpoint1_2| $x5012)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x5021 (= y10_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y10_1_endpoint2_2| $x5021)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x5030 (= y10_1_endpoint3_2 ?x918)))
 (=> |piecewise for y10_1_endpoint3_2| $x5030)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x5019 (+ mean10 ?x1072)))
 (let ((?x5065 (/ (- y10_1_endpoint3_2 y10_1_endpoint2_2) (- (+ mean10 (* ?x869 3.0)) ?x5019))))
 (let ((?x5071 (ite (< y10_1 (+ mean10 (* ?x869 3.0))) (+ (* ?x5065 y10_1) (- y10_1_endpoint2_2 (* ?x5065 ?x5019))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x5010 (+ mean10 ?x1219)))
 (let ((?x5060 (/ (- y10_1_endpoint2_2 y10_1_endpoint1_2) (- ?x5019 ?x5010))))
 (let ((?x5075 (ite (< y10_1 ?x5019) (+ (* ?x5060 y10_1) (- y10_1_endpoint1_2 (* ?x5060 ?x5010))) ?x5071)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x5000 (+ mean10 ?x1361)))
 (let ((?x5055 (/ (- y10_1_endpoint1_2 y10_1_endpoint0_2) (- ?x5010 ?x5000))))
 (let ((?x5079 (ite (< y10_1 ?x5010) (+ (* ?x5055 y10_1) (- y10_1_endpoint0_2 (* ?x5055 ?x5000))) ?x5075)))
 (let ((?x4991 (- mean10 ?x1219)))
 (let ((?x5050 (/ (- y10_1_endpoint0_2 y10_1_endpoint1_1) (- ?x5000 ?x4991))))
 (let ((?x5083 (ite (< y10_1 ?x5000) (+ (* ?x5050 y10_1) (- y10_1_endpoint1_1 (* ?x5050 ?x4991))) ?x5079)))
 (let ((?x4982 (- mean10 ?x1072)))
 (let ((?x5045 (/ (- y10_1_endpoint1_1 y10_1_endpoint2_1) (- ?x4991 ?x4982))))
 (let ((?x5087 (ite (< y10_1 ?x4991) (+ (* ?x5045 y10_1) (- y10_1_endpoint2_1 (* ?x5045 ?x4982))) ?x5083)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x4972 (- mean10 ?x867)))
 (let ((?x5040 (/ (- y10_1_endpoint2_1 y10_1_endpoint3_1) (- ?x4982 ?x4972))))
 (let ((?x5091 (ite (< y10_1 ?x4982) (+ (* ?x5040 y10_1) (- y10_1_endpoint3_1 (* ?x5040 ?x4972))) ?x5087)))
 (let ((?x5095 (ite (> y10_1 (+ mean10 ?x867)) 0.0 (ite (< y10_1 ?x4972) 0.0 ?x5091))))
 (= likelihoody10_1 ?x5095))))))))))))))))))))))))))
(assert
 (let ((?x5297 (ite (< y10_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y10_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y10_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y10_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x5305 (ite (< y10_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y10_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y10_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y10_2) (/ 3989467804994813.0 100000000000000000.0)) ?x5297))))
 (let ((?x5313 (ite (< y10_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y10_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y10_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y10_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x5305))))
 (= likelihoody10_2 (ite (> y10_2 30.0) 0.0 (ite (< y10_2 (- 30.0)) 0.0 ?x5313)))))))
(assert
 (= likelihoodoutlier11 (ite (= outlier11 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x5371 (= y11_1_endpoint3_1 ?x918)))
 (=> |piecewise for y11_1_endpoint3_1| $x5371)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x5381 (= y11_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y11_1_endpoint2_1| $x5381)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x5390 (= y11_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y11_1_endpoint1_1| $x5390)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x5399 (= y11_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y11_1_endpoint0_2| $x5399)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x5409 (= y11_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y11_1_endpoint1_2| $x5409)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x5418 (= y11_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y11_1_endpoint2_2| $x5418)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x5427 (= y11_1_endpoint3_2 ?x918)))
 (=> |piecewise for y11_1_endpoint3_2| $x5427)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x5416 (+ mean11 ?x1072)))
 (let ((?x5462 (/ (- y11_1_endpoint3_2 y11_1_endpoint2_2) (- (+ mean11 (* ?x869 3.0)) ?x5416))))
 (let ((?x5468 (ite (< y11_1 (+ mean11 (* ?x869 3.0))) (+ (* ?x5462 y11_1) (- y11_1_endpoint2_2 (* ?x5462 ?x5416))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x5407 (+ mean11 ?x1219)))
 (let ((?x5457 (/ (- y11_1_endpoint2_2 y11_1_endpoint1_2) (- ?x5416 ?x5407))))
 (let ((?x5472 (ite (< y11_1 ?x5416) (+ (* ?x5457 y11_1) (- y11_1_endpoint1_2 (* ?x5457 ?x5407))) ?x5468)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x5397 (+ mean11 ?x1361)))
 (let ((?x5452 (/ (- y11_1_endpoint1_2 y11_1_endpoint0_2) (- ?x5407 ?x5397))))
 (let ((?x5476 (ite (< y11_1 ?x5407) (+ (* ?x5452 y11_1) (- y11_1_endpoint0_2 (* ?x5452 ?x5397))) ?x5472)))
 (let ((?x5388 (- mean11 ?x1219)))
 (let ((?x5447 (/ (- y11_1_endpoint0_2 y11_1_endpoint1_1) (- ?x5397 ?x5388))))
 (let ((?x5480 (ite (< y11_1 ?x5397) (+ (* ?x5447 y11_1) (- y11_1_endpoint1_1 (* ?x5447 ?x5388))) ?x5476)))
 (let ((?x5379 (- mean11 ?x1072)))
 (let ((?x5442 (/ (- y11_1_endpoint1_1 y11_1_endpoint2_1) (- ?x5388 ?x5379))))
 (let ((?x5484 (ite (< y11_1 ?x5388) (+ (* ?x5442 y11_1) (- y11_1_endpoint2_1 (* ?x5442 ?x5379))) ?x5480)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x5369 (- mean11 ?x867)))
 (let ((?x5437 (/ (- y11_1_endpoint2_1 y11_1_endpoint3_1) (- ?x5379 ?x5369))))
 (let ((?x5488 (ite (< y11_1 ?x5379) (+ (* ?x5437 y11_1) (- y11_1_endpoint3_1 (* ?x5437 ?x5369))) ?x5484)))
 (let ((?x5492 (ite (> y11_1 (+ mean11 ?x867)) 0.0 (ite (< y11_1 ?x5369) 0.0 ?x5488))))
 (= likelihoody11_1 ?x5492))))))))))))))))))))))))))
(assert
 (let ((?x5694 (ite (< y11_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y11_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y11_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y11_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x5702 (ite (< y11_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y11_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y11_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y11_2) (/ 3989467804994813.0 100000000000000000.0)) ?x5694))))
 (let ((?x5710 (ite (< y11_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y11_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y11_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y11_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x5702))))
 (= likelihoody11_2 (ite (> y11_2 30.0) 0.0 (ite (< y11_2 (- 30.0)) 0.0 ?x5710)))))))
(assert
 (= likelihoodoutlier12 (ite (= outlier12 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x5768 (= y12_1_endpoint3_1 ?x918)))
 (=> |piecewise for y12_1_endpoint3_1| $x5768)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x5778 (= y12_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y12_1_endpoint2_1| $x5778)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x5787 (= y12_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y12_1_endpoint1_1| $x5787)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x5796 (= y12_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y12_1_endpoint0_2| $x5796)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x5806 (= y12_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y12_1_endpoint1_2| $x5806)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x5815 (= y12_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y12_1_endpoint2_2| $x5815)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x5823 (= y12_1_endpoint3_2 ?x918)))
 (=> |piecewise for y12_1_endpoint3_2| $x5823)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x5813 (+ mean12 ?x1072)))
 (let ((?x5858 (/ (- y12_1_endpoint3_2 y12_1_endpoint2_2) (- (+ mean12 (* ?x869 3.0)) ?x5813))))
 (let ((?x5864 (ite (< y12_1 (+ mean12 (* ?x869 3.0))) (+ (* ?x5858 y12_1) (- y12_1_endpoint2_2 (* ?x5858 ?x5813))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x5804 (+ mean12 ?x1219)))
 (let ((?x5853 (/ (- y12_1_endpoint2_2 y12_1_endpoint1_2) (- ?x5813 ?x5804))))
 (let ((?x5868 (ite (< y12_1 ?x5813) (+ (* ?x5853 y12_1) (- y12_1_endpoint1_2 (* ?x5853 ?x5804))) ?x5864)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x5794 (+ mean12 ?x1361)))
 (let ((?x5848 (/ (- y12_1_endpoint1_2 y12_1_endpoint0_2) (- ?x5804 ?x5794))))
 (let ((?x5872 (ite (< y12_1 ?x5804) (+ (* ?x5848 y12_1) (- y12_1_endpoint0_2 (* ?x5848 ?x5794))) ?x5868)))
 (let ((?x5785 (- mean12 ?x1219)))
 (let ((?x5843 (/ (- y12_1_endpoint0_2 y12_1_endpoint1_1) (- ?x5794 ?x5785))))
 (let ((?x5876 (ite (< y12_1 ?x5794) (+ (* ?x5843 y12_1) (- y12_1_endpoint1_1 (* ?x5843 ?x5785))) ?x5872)))
 (let ((?x5776 (- mean12 ?x1072)))
 (let ((?x5838 (/ (- y12_1_endpoint1_1 y12_1_endpoint2_1) (- ?x5785 ?x5776))))
 (let ((?x5880 (ite (< y12_1 ?x5785) (+ (* ?x5838 y12_1) (- y12_1_endpoint2_1 (* ?x5838 ?x5776))) ?x5876)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x5766 (- mean12 ?x867)))
 (let ((?x5833 (/ (- y12_1_endpoint2_1 y12_1_endpoint3_1) (- ?x5776 ?x5766))))
 (let ((?x5884 (ite (< y12_1 ?x5776) (+ (* ?x5833 y12_1) (- y12_1_endpoint3_1 (* ?x5833 ?x5766))) ?x5880)))
 (let ((?x5888 (ite (> y12_1 (+ mean12 ?x867)) 0.0 (ite (< y12_1 ?x5766) 0.0 ?x5884))))
 (= likelihoody12_1 ?x5888))))))))))))))))))))))))))
(assert
 (let ((?x6058 (ite (< y12_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y12_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y12_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y12_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x6066 (ite (< y12_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y12_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y12_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y12_2) (/ 3989467804994813.0 100000000000000000.0)) ?x6058))))
 (let ((?x6074 (ite (< y12_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y12_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y12_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y12_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x6066))))
 (= likelihoody12_2 (ite (> y12_2 30.0) 0.0 (ite (< y12_2 (- 30.0)) 0.0 ?x6074)))))))
(assert
 (= likelihoodoutlier13 (ite (= outlier13 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x6110 (= y13_1_endpoint3_1 ?x918)))
 (=> |piecewise for y13_1_endpoint3_1| $x6110)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x6117 (= y13_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y13_1_endpoint2_1| $x6117)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x6123 (= y13_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y13_1_endpoint1_1| $x6123)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x6129 (= y13_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y13_1_endpoint0_2| $x6129)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x6136 (= y13_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y13_1_endpoint1_2| $x6136)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x6142 (= y13_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y13_1_endpoint2_2| $x6142)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x6151 (= y13_1_endpoint3_2 ?x918)))
 (=> |piecewise for y13_1_endpoint3_2| $x6151)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x832 (+ mean13 ?x1072)))
 (let ((?x6183 (/ (- y13_1_endpoint3_2 y13_1_endpoint2_2) (- (+ mean13 (* ?x869 3.0)) ?x832))))
 (let ((?x6189 (ite (< y13_1 (+ mean13 (* ?x869 3.0))) (+ (* ?x6183 y13_1) (- y13_1_endpoint2_2 (* ?x6183 ?x832))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x827 (+ mean13 ?x1219)))
 (let ((?x6178 (/ (- y13_1_endpoint2_2 y13_1_endpoint1_2) (- ?x832 ?x827))))
 (let ((?x6193 (ite (< y13_1 ?x832) (+ (* ?x6178 y13_1) (- y13_1_endpoint1_2 (* ?x6178 ?x827))) ?x6189)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x822 (+ mean13 ?x1361)))
 (let ((?x6173 (/ (- y13_1_endpoint1_2 y13_1_endpoint0_2) (- ?x827 ?x822))))
 (let ((?x6197 (ite (< y13_1 ?x827) (+ (* ?x6173 y13_1) (- y13_1_endpoint0_2 (* ?x6173 ?x822))) ?x6193)))
 (let ((?x817 (- mean13 ?x1219)))
 (let ((?x6168 (/ (- y13_1_endpoint0_2 y13_1_endpoint1_1) (- ?x822 ?x817))))
 (let ((?x6201 (ite (< y13_1 ?x822) (+ (* ?x6168 y13_1) (- y13_1_endpoint1_1 (* ?x6168 ?x817))) ?x6197)))
 (let ((?x812 (- mean13 ?x1072)))
 (let ((?x6163 (/ (- y13_1_endpoint1_1 y13_1_endpoint2_1) (- ?x817 ?x812))))
 (let ((?x6205 (ite (< y13_1 ?x817) (+ (* ?x6163 y13_1) (- y13_1_endpoint2_1 (* ?x6163 ?x812))) ?x6201)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x6108 (- mean13 ?x867)))
 (let ((?x6158 (/ (- y13_1_endpoint2_1 y13_1_endpoint3_1) (- ?x812 ?x6108))))
 (let ((?x6209 (ite (< y13_1 ?x812) (+ (* ?x6158 y13_1) (- y13_1_endpoint3_1 (* ?x6158 ?x6108))) ?x6205)))
 (let ((?x6213 (ite (> y13_1 (+ mean13 ?x867)) 0.0 (ite (< y13_1 ?x6108) 0.0 ?x6209))))
 (= likelihoody13_1 ?x6213))))))))))))))))))))))))))
(assert
 (let ((?x6389 (ite (< y13_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y13_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y13_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y13_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x6397 (ite (< y13_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y13_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y13_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y13_2) (/ 3989467804994813.0 100000000000000000.0)) ?x6389))))
 (let ((?x6405 (ite (< y13_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y13_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y13_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y13_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x6397))))
 (= likelihoody13_2 (ite (> y13_2 30.0) 0.0 (ite (< y13_2 (- 30.0)) 0.0 ?x6405)))))))
(assert
 (= likelihoodoutlier14 (ite (= outlier14 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x6463 (= y14_1_endpoint3_1 ?x918)))
 (=> |piecewise for y14_1_endpoint3_1| $x6463)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x6473 (= y14_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y14_1_endpoint2_1| $x6473)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x6482 (= y14_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y14_1_endpoint1_1| $x6482)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x6491 (= y14_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y14_1_endpoint0_2| $x6491)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x6501 (= y14_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y14_1_endpoint1_2| $x6501)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x6510 (= y14_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y14_1_endpoint2_2| $x6510)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x6518 (= y14_1_endpoint3_2 ?x918)))
 (=> |piecewise for y14_1_endpoint3_2| $x6518)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x6508 (+ mean14 ?x1072)))
 (let ((?x6552 (/ (- y14_1_endpoint3_2 y14_1_endpoint2_2) (- (+ mean14 (* ?x869 3.0)) ?x6508))))
 (let ((?x6558 (ite (< y14_1 (+ mean14 (* ?x869 3.0))) (+ (* ?x6552 y14_1) (- y14_1_endpoint2_2 (* ?x6552 ?x6508))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x6499 (+ mean14 ?x1219)))
 (let ((?x6547 (/ (- y14_1_endpoint2_2 y14_1_endpoint1_2) (- ?x6508 ?x6499))))
 (let ((?x6562 (ite (< y14_1 ?x6508) (+ (* ?x6547 y14_1) (- y14_1_endpoint1_2 (* ?x6547 ?x6499))) ?x6558)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x6489 (+ mean14 ?x1361)))
 (let ((?x6542 (/ (- y14_1_endpoint1_2 y14_1_endpoint0_2) (- ?x6499 ?x6489))))
 (let ((?x6566 (ite (< y14_1 ?x6499) (+ (* ?x6542 y14_1) (- y14_1_endpoint0_2 (* ?x6542 ?x6489))) ?x6562)))
 (let ((?x6480 (- mean14 ?x1219)))
 (let ((?x6537 (/ (- y14_1_endpoint0_2 y14_1_endpoint1_1) (- ?x6489 ?x6480))))
 (let ((?x6570 (ite (< y14_1 ?x6489) (+ (* ?x6537 y14_1) (- y14_1_endpoint1_1 (* ?x6537 ?x6480))) ?x6566)))
 (let ((?x6471 (- mean14 ?x1072)))
 (let ((?x6532 (/ (- y14_1_endpoint1_1 y14_1_endpoint2_1) (- ?x6480 ?x6471))))
 (let ((?x6574 (ite (< y14_1 ?x6480) (+ (* ?x6532 y14_1) (- y14_1_endpoint2_1 (* ?x6532 ?x6471))) ?x6570)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x6461 (- mean14 ?x867)))
 (let ((?x6527 (/ (- y14_1_endpoint2_1 y14_1_endpoint3_1) (- ?x6471 ?x6461))))
 (let ((?x6578 (ite (< y14_1 ?x6471) (+ (* ?x6527 y14_1) (- y14_1_endpoint3_1 (* ?x6527 ?x6461))) ?x6574)))
 (let ((?x6582 (ite (> y14_1 (+ mean14 ?x867)) 0.0 (ite (< y14_1 ?x6461) 0.0 ?x6578))))
 (= likelihoody14_1 ?x6582))))))))))))))))))))))))))
(assert
 (let ((?x6682 (ite (< y14_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y14_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y14_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y14_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x6690 (ite (< y14_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y14_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y14_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y14_2) (/ 3989467804994813.0 100000000000000000.0)) ?x6682))))
 (let ((?x6698 (ite (< y14_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y14_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y14_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y14_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x6690))))
 (= likelihoody14_2 (ite (> y14_2 30.0) 0.0 (ite (< y14_2 (- 30.0)) 0.0 ?x6698)))))))
(assert
 (= likelihoodoutlier15 (ite (= outlier15 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x6739 (= y15_1_endpoint3_1 ?x918)))
 (=> |piecewise for y15_1_endpoint3_1| $x6739)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x6749 (= y15_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y15_1_endpoint2_1| $x6749)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x6757 (= y15_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y15_1_endpoint1_1| $x6757)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x6763 (= y15_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y15_1_endpoint0_2| $x6763)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x6770 (= y15_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y15_1_endpoint1_2| $x6770)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x6776 (= y15_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y15_1_endpoint2_2| $x6776)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x6782 (= y15_1_endpoint3_2 ?x918)))
 (=> |piecewise for y15_1_endpoint3_2| $x6782)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x1758 (+ mean15 ?x1072)))
 (let ((?x6814 (/ (- y15_1_endpoint3_2 y15_1_endpoint2_2) (- (+ mean15 (* ?x869 3.0)) ?x1758))))
 (let ((?x6820 (ite (< y15_1 (+ mean15 (* ?x869 3.0))) (+ (* ?x6814 y15_1) (- y15_1_endpoint2_2 (* ?x6814 ?x1758))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x1753 (+ mean15 ?x1219)))
 (let ((?x6809 (/ (- y15_1_endpoint2_2 y15_1_endpoint1_2) (- ?x1758 ?x1753))))
 (let ((?x6824 (ite (< y15_1 ?x1758) (+ (* ?x6809 y15_1) (- y15_1_endpoint1_2 (* ?x6809 ?x1753))) ?x6820)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x1749 (+ mean15 ?x1361)))
 (let ((?x6804 (/ (- y15_1_endpoint1_2 y15_1_endpoint0_2) (- ?x1753 ?x1749))))
 (let ((?x6828 (ite (< y15_1 ?x1753) (+ (* ?x6804 y15_1) (- y15_1_endpoint0_2 (* ?x6804 ?x1749))) ?x6824)))
 (let ((?x6755 (- mean15 ?x1219)))
 (let ((?x6799 (/ (- y15_1_endpoint0_2 y15_1_endpoint1_1) (- ?x1749 ?x6755))))
 (let ((?x6832 (ite (< y15_1 ?x1749) (+ (* ?x6799 y15_1) (- y15_1_endpoint1_1 (* ?x6799 ?x6755))) ?x6828)))
 (let ((?x6747 (- mean15 ?x1072)))
 (let ((?x6794 (/ (- y15_1_endpoint1_1 y15_1_endpoint2_1) (- ?x6755 ?x6747))))
 (let ((?x6836 (ite (< y15_1 ?x6755) (+ (* ?x6794 y15_1) (- y15_1_endpoint2_1 (* ?x6794 ?x6747))) ?x6832)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x6737 (- mean15 ?x867)))
 (let ((?x6789 (/ (- y15_1_endpoint2_1 y15_1_endpoint3_1) (- ?x6747 ?x6737))))
 (let ((?x6840 (ite (< y15_1 ?x6747) (+ (* ?x6789 y15_1) (- y15_1_endpoint3_1 (* ?x6789 ?x6737))) ?x6836)))
 (let ((?x6844 (ite (> y15_1 (+ mean15 ?x867)) 0.0 (ite (< y15_1 ?x6737) 0.0 ?x6840))))
 (= likelihoody15_1 ?x6844))))))))))))))))))))))))))
(assert
 (let ((?x6945 (ite (< y15_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y15_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y15_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y15_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x6953 (ite (< y15_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y15_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y15_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y15_2) (/ 3989467804994813.0 100000000000000000.0)) ?x6945))))
 (let ((?x6961 (ite (< y15_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y15_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y15_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y15_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x6953))))
 (= likelihoody15_2 (ite (> y15_2 30.0) 0.0 (ite (< y15_2 (- 30.0)) 0.0 ?x6961)))))))
(assert
 (= likelihoodoutlier16 (ite (= outlier16 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7002 (= y16_1_endpoint3_1 ?x918)))
 (=> |piecewise for y16_1_endpoint3_1| $x7002)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7012 (= y16_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y16_1_endpoint2_1| $x7012)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7020 (= y16_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y16_1_endpoint1_1| $x7020)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x7026 (= y16_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y16_1_endpoint0_2| $x7026)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7033 (= y16_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y16_1_endpoint1_2| $x7033)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7039 (= y16_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y16_1_endpoint2_2| $x7039)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7045 (= y16_1_endpoint3_2 ?x918)))
 (=> |piecewise for y16_1_endpoint3_2| $x7045)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x2155 (+ mean16 ?x1072)))
 (let ((?x7077 (/ (- y16_1_endpoint3_2 y16_1_endpoint2_2) (- (+ mean16 (* ?x869 3.0)) ?x2155))))
 (let ((?x7083 (ite (< y16_1 (+ mean16 (* ?x869 3.0))) (+ (* ?x7077 y16_1) (- y16_1_endpoint2_2 (* ?x7077 ?x2155))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x2150 (+ mean16 ?x1219)))
 (let ((?x7072 (/ (- y16_1_endpoint2_2 y16_1_endpoint1_2) (- ?x2155 ?x2150))))
 (let ((?x7087 (ite (< y16_1 ?x2155) (+ (* ?x7072 y16_1) (- y16_1_endpoint1_2 (* ?x7072 ?x2150))) ?x7083)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x2146 (+ mean16 ?x1361)))
 (let ((?x7067 (/ (- y16_1_endpoint1_2 y16_1_endpoint0_2) (- ?x2150 ?x2146))))
 (let ((?x7091 (ite (< y16_1 ?x2150) (+ (* ?x7067 y16_1) (- y16_1_endpoint0_2 (* ?x7067 ?x2146))) ?x7087)))
 (let ((?x7018 (- mean16 ?x1219)))
 (let ((?x7062 (/ (- y16_1_endpoint0_2 y16_1_endpoint1_1) (- ?x2146 ?x7018))))
 (let ((?x7095 (ite (< y16_1 ?x2146) (+ (* ?x7062 y16_1) (- y16_1_endpoint1_1 (* ?x7062 ?x7018))) ?x7091)))
 (let ((?x7010 (- mean16 ?x1072)))
 (let ((?x7057 (/ (- y16_1_endpoint1_1 y16_1_endpoint2_1) (- ?x7018 ?x7010))))
 (let ((?x7099 (ite (< y16_1 ?x7018) (+ (* ?x7057 y16_1) (- y16_1_endpoint2_1 (* ?x7057 ?x7010))) ?x7095)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x7000 (- mean16 ?x867)))
 (let ((?x7052 (/ (- y16_1_endpoint2_1 y16_1_endpoint3_1) (- ?x7010 ?x7000))))
 (let ((?x7103 (ite (< y16_1 ?x7010) (+ (* ?x7052 y16_1) (- y16_1_endpoint3_1 (* ?x7052 ?x7000))) ?x7099)))
 (let ((?x7107 (ite (> y16_1 (+ mean16 ?x867)) 0.0 (ite (< y16_1 ?x7000) 0.0 ?x7103))))
 (= likelihoody16_1 ?x7107))))))))))))))))))))))))))
(assert
 (let ((?x7208 (ite (< y16_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y16_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y16_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y16_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x7216 (ite (< y16_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y16_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y16_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y16_2) (/ 3989467804994813.0 100000000000000000.0)) ?x7208))))
 (let ((?x7224 (ite (< y16_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y16_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y16_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y16_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x7216))))
 (= likelihoody16_2 (ite (> y16_2 30.0) 0.0 (ite (< y16_2 (- 30.0)) 0.0 ?x7224)))))))
(assert
 (= likelihoodoutlier17 (ite (= outlier17 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7265 (= y17_1_endpoint3_1 ?x918)))
 (=> |piecewise for y17_1_endpoint3_1| $x7265)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7275 (= y17_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y17_1_endpoint2_1| $x7275)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7283 (= y17_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y17_1_endpoint1_1| $x7283)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x7289 (= y17_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y17_1_endpoint0_2| $x7289)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7296 (= y17_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y17_1_endpoint1_2| $x7296)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7302 (= y17_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y17_1_endpoint2_2| $x7302)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7308 (= y17_1_endpoint3_2 ?x918)))
 (=> |piecewise for y17_1_endpoint3_2| $x7308)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x2552 (+ mean17 ?x1072)))
 (let ((?x7340 (/ (- y17_1_endpoint3_2 y17_1_endpoint2_2) (- (+ mean17 (* ?x869 3.0)) ?x2552))))
 (let ((?x7346 (ite (< y17_1 (+ mean17 (* ?x869 3.0))) (+ (* ?x7340 y17_1) (- y17_1_endpoint2_2 (* ?x7340 ?x2552))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x2547 (+ mean17 ?x1219)))
 (let ((?x7335 (/ (- y17_1_endpoint2_2 y17_1_endpoint1_2) (- ?x2552 ?x2547))))
 (let ((?x7350 (ite (< y17_1 ?x2552) (+ (* ?x7335 y17_1) (- y17_1_endpoint1_2 (* ?x7335 ?x2547))) ?x7346)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x2543 (+ mean17 ?x1361)))
 (let ((?x7330 (/ (- y17_1_endpoint1_2 y17_1_endpoint0_2) (- ?x2547 ?x2543))))
 (let ((?x7354 (ite (< y17_1 ?x2547) (+ (* ?x7330 y17_1) (- y17_1_endpoint0_2 (* ?x7330 ?x2543))) ?x7350)))
 (let ((?x7281 (- mean17 ?x1219)))
 (let ((?x7325 (/ (- y17_1_endpoint0_2 y17_1_endpoint1_1) (- ?x2543 ?x7281))))
 (let ((?x7358 (ite (< y17_1 ?x2543) (+ (* ?x7325 y17_1) (- y17_1_endpoint1_1 (* ?x7325 ?x7281))) ?x7354)))
 (let ((?x7273 (- mean17 ?x1072)))
 (let ((?x7320 (/ (- y17_1_endpoint1_1 y17_1_endpoint2_1) (- ?x7281 ?x7273))))
 (let ((?x7362 (ite (< y17_1 ?x7281) (+ (* ?x7320 y17_1) (- y17_1_endpoint2_1 (* ?x7320 ?x7273))) ?x7358)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x7263 (- mean17 ?x867)))
 (let ((?x7315 (/ (- y17_1_endpoint2_1 y17_1_endpoint3_1) (- ?x7273 ?x7263))))
 (let ((?x7366 (ite (< y17_1 ?x7273) (+ (* ?x7315 y17_1) (- y17_1_endpoint3_1 (* ?x7315 ?x7263))) ?x7362)))
 (let ((?x7370 (ite (> y17_1 (+ mean17 ?x867)) 0.0 (ite (< y17_1 ?x7263) 0.0 ?x7366))))
 (= likelihoody17_1 ?x7370))))))))))))))))))))))))))
(assert
 (let ((?x7471 (ite (< y17_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y17_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y17_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y17_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x7479 (ite (< y17_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y17_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y17_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y17_2) (/ 3989467804994813.0 100000000000000000.0)) ?x7471))))
 (let ((?x7487 (ite (< y17_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y17_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y17_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y17_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x7479))))
 (= likelihoody17_2 (ite (> y17_2 30.0) 0.0 (ite (< y17_2 (- 30.0)) 0.0 ?x7487)))))))
(assert
 (= likelihoodoutlier18 (ite (= outlier18 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7528 (= y18_1_endpoint3_1 ?x918)))
 (=> |piecewise for y18_1_endpoint3_1| $x7528)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7538 (= y18_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y18_1_endpoint2_1| $x7538)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7546 (= y18_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y18_1_endpoint1_1| $x7546)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x7552 (= y18_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y18_1_endpoint0_2| $x7552)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7559 (= y18_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y18_1_endpoint1_2| $x7559)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7565 (= y18_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y18_1_endpoint2_2| $x7565)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7571 (= y18_1_endpoint3_2 ?x918)))
 (=> |piecewise for y18_1_endpoint3_2| $x7571)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x2949 (+ mean18 ?x1072)))
 (let ((?x7603 (/ (- y18_1_endpoint3_2 y18_1_endpoint2_2) (- (+ mean18 (* ?x869 3.0)) ?x2949))))
 (let ((?x7609 (ite (< y18_1 (+ mean18 (* ?x869 3.0))) (+ (* ?x7603 y18_1) (- y18_1_endpoint2_2 (* ?x7603 ?x2949))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x2944 (+ mean18 ?x1219)))
 (let ((?x7598 (/ (- y18_1_endpoint2_2 y18_1_endpoint1_2) (- ?x2949 ?x2944))))
 (let ((?x7613 (ite (< y18_1 ?x2949) (+ (* ?x7598 y18_1) (- y18_1_endpoint1_2 (* ?x7598 ?x2944))) ?x7609)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x2940 (+ mean18 ?x1361)))
 (let ((?x7593 (/ (- y18_1_endpoint1_2 y18_1_endpoint0_2) (- ?x2944 ?x2940))))
 (let ((?x7617 (ite (< y18_1 ?x2944) (+ (* ?x7593 y18_1) (- y18_1_endpoint0_2 (* ?x7593 ?x2940))) ?x7613)))
 (let ((?x7544 (- mean18 ?x1219)))
 (let ((?x7588 (/ (- y18_1_endpoint0_2 y18_1_endpoint1_1) (- ?x2940 ?x7544))))
 (let ((?x7621 (ite (< y18_1 ?x2940) (+ (* ?x7588 y18_1) (- y18_1_endpoint1_1 (* ?x7588 ?x7544))) ?x7617)))
 (let ((?x7536 (- mean18 ?x1072)))
 (let ((?x7583 (/ (- y18_1_endpoint1_1 y18_1_endpoint2_1) (- ?x7544 ?x7536))))
 (let ((?x7625 (ite (< y18_1 ?x7544) (+ (* ?x7583 y18_1) (- y18_1_endpoint2_1 (* ?x7583 ?x7536))) ?x7621)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x7526 (- mean18 ?x867)))
 (let ((?x7578 (/ (- y18_1_endpoint2_1 y18_1_endpoint3_1) (- ?x7536 ?x7526))))
 (let ((?x7629 (ite (< y18_1 ?x7536) (+ (* ?x7578 y18_1) (- y18_1_endpoint3_1 (* ?x7578 ?x7526))) ?x7625)))
 (let ((?x7633 (ite (> y18_1 (+ mean18 ?x867)) 0.0 (ite (< y18_1 ?x7526) 0.0 ?x7629))))
 (= likelihoody18_1 ?x7633))))))))))))))))))))))))))
(assert
 (let ((?x7734 (ite (< y18_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y18_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y18_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y18_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x7742 (ite (< y18_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y18_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y18_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y18_2) (/ 3989467804994813.0 100000000000000000.0)) ?x7734))))
 (let ((?x7750 (ite (< y18_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y18_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y18_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y18_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x7742))))
 (= likelihoody18_2 (ite (> y18_2 30.0) 0.0 (ite (< y18_2 (- 30.0)) 0.0 ?x7750)))))))
(assert
 (= likelihoodoutlier19 (ite (= outlier19 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7791 (= y19_1_endpoint3_1 ?x918)))
 (=> |piecewise for y19_1_endpoint3_1| $x7791)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7801 (= y19_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y19_1_endpoint2_1| $x7801)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7809 (= y19_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y19_1_endpoint1_1| $x7809)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x7815 (= y19_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y19_1_endpoint0_2| $x7815)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x7822 (= y19_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y19_1_endpoint1_2| $x7822)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x7828 (= y19_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y19_1_endpoint2_2| $x7828)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x7834 (= y19_1_endpoint3_2 ?x918)))
 (=> |piecewise for y19_1_endpoint3_2| $x7834)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x3346 (+ mean19 ?x1072)))
 (let ((?x7866 (/ (- y19_1_endpoint3_2 y19_1_endpoint2_2) (- (+ mean19 (* ?x869 3.0)) ?x3346))))
 (let ((?x7872 (ite (< y19_1 (+ mean19 (* ?x869 3.0))) (+ (* ?x7866 y19_1) (- y19_1_endpoint2_2 (* ?x7866 ?x3346))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x3341 (+ mean19 ?x1219)))
 (let ((?x7861 (/ (- y19_1_endpoint2_2 y19_1_endpoint1_2) (- ?x3346 ?x3341))))
 (let ((?x7876 (ite (< y19_1 ?x3346) (+ (* ?x7861 y19_1) (- y19_1_endpoint1_2 (* ?x7861 ?x3341))) ?x7872)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x3337 (+ mean19 ?x1361)))
 (let ((?x7856 (/ (- y19_1_endpoint1_2 y19_1_endpoint0_2) (- ?x3341 ?x3337))))
 (let ((?x7880 (ite (< y19_1 ?x3341) (+ (* ?x7856 y19_1) (- y19_1_endpoint0_2 (* ?x7856 ?x3337))) ?x7876)))
 (let ((?x7807 (- mean19 ?x1219)))
 (let ((?x7851 (/ (- y19_1_endpoint0_2 y19_1_endpoint1_1) (- ?x3337 ?x7807))))
 (let ((?x7884 (ite (< y19_1 ?x3337) (+ (* ?x7851 y19_1) (- y19_1_endpoint1_1 (* ?x7851 ?x7807))) ?x7880)))
 (let ((?x7799 (- mean19 ?x1072)))
 (let ((?x7846 (/ (- y19_1_endpoint1_1 y19_1_endpoint2_1) (- ?x7807 ?x7799))))
 (let ((?x7888 (ite (< y19_1 ?x7807) (+ (* ?x7846 y19_1) (- y19_1_endpoint2_1 (* ?x7846 ?x7799))) ?x7884)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x7789 (- mean19 ?x867)))
 (let ((?x7841 (/ (- y19_1_endpoint2_1 y19_1_endpoint3_1) (- ?x7799 ?x7789))))
 (let ((?x7892 (ite (< y19_1 ?x7799) (+ (* ?x7841 y19_1) (- y19_1_endpoint3_1 (* ?x7841 ?x7789))) ?x7888)))
 (let ((?x7896 (ite (> y19_1 (+ mean19 ?x867)) 0.0 (ite (< y19_1 ?x7789) 0.0 ?x7892))))
 (= likelihoody19_1 ?x7896))))))))))))))))))))))))))
(assert
 (let ((?x7997 (ite (< y19_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y19_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y19_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y19_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x8005 (ite (< y19_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y19_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y19_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y19_2) (/ 3989467804994813.0 100000000000000000.0)) ?x7997))))
 (let ((?x8013 (ite (< y19_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y19_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y19_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y19_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x8005))))
 (= likelihoody19_2 (ite (> y19_2 30.0) 0.0 (ite (< y19_2 (- 30.0)) 0.0 ?x8013)))))))
(assert
 (= likelihoodoutlier20 (ite (= outlier20 1) proboutlier (- 1.0 proboutlier))))
(assert
 (> noise 0.0))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x8054 (= y20_1_endpoint3_1 ?x918)))
 (=> |piecewise for y20_1_endpoint3_1| $x8054)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x8064 (= y20_1_endpoint2_1 ?x1108)))
 (=> |piecewise for y20_1_endpoint2_1| $x8064)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x8072 (= y20_1_endpoint1_1 ?x1255)))
 (=> |piecewise for y20_1_endpoint1_1| $x8072)))))))))
(assert
 (let ((?x1366 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 0.0) 0.0) 8.0)))
 (let ((?x1372 (+ (+ 0.0 (/ (^ ?x1366 0.0) 1.0)) (/ (^ ?x1366 1.0) 1.0))))
 (let ((?x1381 (+ (+ (+ ?x1372 (/ (^ ?x1366 2.0) 2.0)) (/ (^ ?x1366 3.0) 6.0)) (/ (^ ?x1366 4.0) 24.0))))
 (let ((?x1390 (+ (+ (+ ?x1381 (/ (^ ?x1366 5.0) 120.0)) (/ (^ ?x1366 6.0) 720.0)) (/ (^ ?x1366 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1397 (* ?x873 (+ (+ ?x1390 (/ (^ ?x1366 8.0) 40320.0)) (/ (^ ?x1366 9.0) 362880.0)))))
 (let (($x8078 (= y20_1_endpoint0_2 ?x1397)))
 (=> |piecewise for y20_1_endpoint0_2| $x8078)))))))))
(assert
 (let ((?x1224 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 1.0) 1.0) 8.0)))
 (let ((?x1230 (+ (+ 0.0 (/ (^ ?x1224 0.0) 1.0)) (/ (^ ?x1224 1.0) 1.0))))
 (let ((?x1239 (+ (+ (+ ?x1230 (/ (^ ?x1224 2.0) 2.0)) (/ (^ ?x1224 3.0) 6.0)) (/ (^ ?x1224 4.0) 24.0))))
 (let ((?x1248 (+ (+ (+ ?x1239 (/ (^ ?x1224 5.0) 120.0)) (/ (^ ?x1224 6.0) 720.0)) (/ (^ ?x1224 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1255 (* ?x873 (+ (+ ?x1248 (/ (^ ?x1224 8.0) 40320.0)) (/ (^ ?x1224 9.0) 362880.0)))))
 (let (($x8085 (= y20_1_endpoint1_2 ?x1255)))
 (=> |piecewise for y20_1_endpoint1_2| $x8085)))))))))
(assert
 (let ((?x1077 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 2.0) 2.0) 8.0)))
 (let ((?x1083 (+ (+ 0.0 (/ (^ ?x1077 0.0) 1.0)) (/ (^ ?x1077 1.0) 1.0))))
 (let ((?x1092 (+ (+ (+ ?x1083 (/ (^ ?x1077 2.0) 2.0)) (/ (^ ?x1077 3.0) 6.0)) (/ (^ ?x1077 4.0) 24.0))))
 (let ((?x1101 (+ (+ (+ ?x1092 (/ (^ ?x1077 5.0) 120.0)) (/ (^ ?x1077 6.0) 720.0)) (/ (^ ?x1077 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x1108 (* ?x873 (+ (+ ?x1101 (/ (^ ?x1077 8.0) 40320.0)) (/ (^ ?x1077 9.0) 362880.0)))))
 (let (($x8091 (= y20_1_endpoint2_2 ?x1108)))
 (=> |piecewise for y20_1_endpoint2_2| $x8091)))))))))
(assert
 (let ((?x879 (/ (* (* (* (- (* noise 1.0)) (* noise 1.0)) 3.0) 3.0) 8.0)))
 (let ((?x885 (+ (+ 0.0 (/ (^ ?x879 0.0) 1.0)) (/ (^ ?x879 1.0) 1.0))))
 (let ((?x895 (+ (+ (+ ?x885 (/ (^ ?x879 2.0) 2.0)) (/ (^ ?x879 3.0) 6.0)) (/ (^ ?x879 4.0) 24.0))))
 (let ((?x908 (+ (+ (+ ?x895 (/ (^ ?x879 5.0) 120.0)) (/ (^ ?x879 6.0) 720.0)) (/ (^ ?x879 7.0) 5040.0))))
 (let ((?x873 (/ 1.0 (* noise (/ 12533.0 5000.0)))))
 (let ((?x918 (* ?x873 (+ (+ ?x908 (/ (^ ?x879 8.0) 40320.0)) (/ (^ ?x879 9.0) 362880.0)))))
 (let (($x8097 (= y20_1_endpoint3_2 ?x918)))
 (=> |piecewise for y20_1_endpoint3_2| $x8097)))))))))
(assert
 (let ((?x869 (* noise 1.0)))
 (let ((?x1072 (* ?x869 2.0)))
 (let ((?x3743 (+ mean20 ?x1072)))
 (let ((?x8129 (/ (- y20_1_endpoint3_2 y20_1_endpoint2_2) (- (+ mean20 (* ?x869 3.0)) ?x3743))))
 (let ((?x8135 (ite (< y20_1 (+ mean20 (* ?x869 3.0))) (+ (* ?x8129 y20_1) (- y20_1_endpoint2_2 (* ?x8129 ?x3743))) 0.0)))
 (let ((?x1219 (* ?x869 1.0)))
 (let ((?x3738 (+ mean20 ?x1219)))
 (let ((?x8124 (/ (- y20_1_endpoint2_2 y20_1_endpoint1_2) (- ?x3743 ?x3738))))
 (let ((?x8139 (ite (< y20_1 ?x3743) (+ (* ?x8124 y20_1) (- y20_1_endpoint1_2 (* ?x8124 ?x3738))) ?x8135)))
 (let ((?x1361 (* ?x869 0.0)))
 (let ((?x3734 (+ mean20 ?x1361)))
 (let ((?x8119 (/ (- y20_1_endpoint1_2 y20_1_endpoint0_2) (- ?x3738 ?x3734))))
 (let ((?x8143 (ite (< y20_1 ?x3738) (+ (* ?x8119 y20_1) (- y20_1_endpoint0_2 (* ?x8119 ?x3734))) ?x8139)))
 (let ((?x8070 (- mean20 ?x1219)))
 (let ((?x8114 (/ (- y20_1_endpoint0_2 y20_1_endpoint1_1) (- ?x3734 ?x8070))))
 (let ((?x8147 (ite (< y20_1 ?x3734) (+ (* ?x8114 y20_1) (- y20_1_endpoint1_1 (* ?x8114 ?x8070))) ?x8143)))
 (let ((?x8062 (- mean20 ?x1072)))
 (let ((?x8109 (/ (- y20_1_endpoint1_1 y20_1_endpoint2_1) (- ?x8070 ?x8062))))
 (let ((?x8151 (ite (< y20_1 ?x8070) (+ (* ?x8109 y20_1) (- y20_1_endpoint2_1 (* ?x8109 ?x8062))) ?x8147)))
 (let ((?x867 (* ?x869 3.0)))
 (let ((?x8052 (- mean20 ?x867)))
 (let ((?x8104 (/ (- y20_1_endpoint2_1 y20_1_endpoint3_1) (- ?x8062 ?x8052))))
 (let ((?x8155 (ite (< y20_1 ?x8062) (+ (* ?x8104 y20_1) (- y20_1_endpoint3_1 (* ?x8104 ?x8052))) ?x8151)))
 (let ((?x8159 (ite (> y20_1 (+ mean20 ?x867)) 0.0 (ite (< y20_1 ?x8052) 0.0 ?x8155))))
 (= likelihoody20_1 ?x8159))))))))))))))))))))))))))
(assert
 (let ((?x8260 (ite (< y20_2 20.0) (+ (* (- (/ 7433681425194827.0 500000000000000000000000.0)) y20_2) (/ 2973472570077931.0 10000000000000000000000.0)) (ite (< y20_2 30.0) (+ (* (- (/ 1923671355585173.0 2500000000000000000000000000000000000000.0)) y20_2) (/ 23084056267022073.0 1000000000000000000000000000000000000000.0)) 0.0))))
 (let ((?x8268 (ite (< y20_2 0.0) (+ (* (/ 3989452937631963.0 1000000000000000000.0) y20_2) (/ 3989467804994813.0 100000000000000000.0)) (ite (< y20_2 10.0) (+ (* (- (/ 3989452937631963.0 1000000000000000000.0)) y20_2) (/ 3989467804994813.0 100000000000000000.0)) ?x8260))))
 (let ((?x8276 (ite (< y20_2 (- 20.0)) (+ (* (/ 1923671355585173.0 2500000000000000000000000000000000000000.0) y20_2) (/ 5771014066755519.0 250000000000000000000000000000000000000.0)) (ite (< y20_2 (- 10.0)) (+ (* (/ 7433681425194827.0 500000000000000000000000.0) y20_2) (/ 2973472570077931.0 10000000000000000000000.0)) ?x8268))))
 (= likelihoody20_2 (ite (> y20_2 30.0) 0.0 (ite (< y20_2 (- 30.0)) 0.0 ?x8276)))))))
(assert
 (let (($x4082 (and (= likelihoody1 likelihoody1_1) (= y1 y1_1))))
 (ite (= alivey1_1 true) $x4082 true)))
(assert
 (let (($x8321 (and (= likelihoody1 likelihoody1_2) (= y1 y1_2))))
 (ite (= alivey1_2 true) $x8321 true)))
(assert
 (let (($x8325 (or (or false alivey1_1) alivey1_2)))
 (= alivey1 $x8325)))
(assert
 (let (($x8332 (and (= likelihoody2 likelihoody2_1) (= y2 y2_1))))
 (ite (= alivey2_1 true) $x8332 true)))
(assert
 (let (($x8340 (and (= likelihoody2 likelihoody2_2) (= y2 y2_2))))
 (ite (= alivey2_2 true) $x8340 true)))
(assert
 (let (($x8344 (or (or false alivey2_1) alivey2_2)))
 (= alivey2 $x8344)))
(assert
 (let (($x8350 (and (= likelihoody3 likelihoody3_1) (= y3 y3_1))))
 (ite (= alivey3_1 true) $x8350 true)))
(assert
 (let (($x8358 (and (= likelihoody3 likelihoody3_2) (= y3 y3_2))))
 (ite (= alivey3_2 true) $x8358 true)))
(assert
 (let (($x8362 (or (or false alivey3_1) alivey3_2)))
 (= alivey3 $x8362)))
(assert
 (let (($x8366 (and (= likelihoody4 likelihoody4_1) (= y4 y4_1))))
 (ite (= alivey4_1 true) $x8366 true)))
(assert
 (let (($x8374 (and (= likelihoody4 likelihoody4_2) (= y4 y4_2))))
 (ite (= alivey4_2 true) $x8374 true)))
(assert
 (let (($x8378 (or (or false alivey4_1) alivey4_2)))
 (= alivey4 $x8378)))
(assert
 (let (($x8382 (and (= likelihoody5 likelihoody5_1) (= y5 y5_1))))
 (ite (= alivey5_1 true) $x8382 true)))
(assert
 (let (($x8390 (and (= likelihoody5 likelihoody5_2) (= y5 y5_2))))
 (ite (= alivey5_2 true) $x8390 true)))
(assert
 (let (($x8394 (or (or false alivey5_1) alivey5_2)))
 (= alivey5 $x8394)))
(assert
 (let (($x8398 (and (= likelihoody6 likelihoody6_1) (= y6 y6_1))))
 (ite (= alivey6_1 true) $x8398 true)))
(assert
 (let (($x8406 (and (= likelihoody6 likelihoody6_2) (= y6 y6_2))))
 (ite (= alivey6_2 true) $x8406 true)))
(assert
 (let (($x8410 (or (or false alivey6_1) alivey6_2)))
 (= alivey6 $x8410)))
(assert
 (let (($x8414 (and (= likelihoody7 likelihoody7_1) (= y7 y7_1))))
 (ite (= alivey7_1 true) $x8414 true)))
(assert
 (let (($x8422 (and (= likelihoody7 likelihoody7_2) (= y7 y7_2))))
 (ite (= alivey7_2 true) $x8422 true)))
(assert
 (let (($x8426 (or (or false alivey7_1) alivey7_2)))
 (= alivey7 $x8426)))
(assert
 (let (($x8430 (and (= likelihoody8 likelihoody8_1) (= y8 y8_1))))
 (ite (= alivey8_1 true) $x8430 true)))
(assert
 (let (($x8438 (and (= likelihoody8 likelihoody8_2) (= y8 y8_2))))
 (ite (= alivey8_2 true) $x8438 true)))
(assert
 (let (($x8442 (or (or false alivey8_1) alivey8_2)))
 (= alivey8 $x8442)))
(assert
 (let (($x8446 (and (= likelihoody9 likelihoody9_1) (= y9 y9_1))))
 (ite (= alivey9_1 true) $x8446 true)))
(assert
 (let (($x8454 (and (= likelihoody9 likelihoody9_2) (= y9 y9_2))))
 (ite (= alivey9_2 true) $x8454 true)))
(assert
 (let (($x8458 (or (or false alivey9_1) alivey9_2)))
 (= alivey9 $x8458)))
(assert
 (let (($x8462 (and (= likelihoody10 likelihoody10_1) (= y10 y10_1))))
 (ite (= alivey10_1 true) $x8462 true)))
(assert
 (let (($x8470 (and (= likelihoody10 likelihoody10_2) (= y10 y10_2))))
 (ite (= alivey10_2 true) $x8470 true)))
(assert
 (let (($x8474 (or (or false alivey10_1) alivey10_2)))
 (= alivey10 $x8474)))
(assert
 (let (($x8481 (and (= likelihoody11 likelihoody11_1) (= y11 y11_1))))
 (ite (= alivey11_1 true) $x8481 true)))
(assert
 (let (($x8489 (and (= likelihoody11 likelihoody11_2) (= y11 y11_2))))
 (ite (= alivey11_2 true) $x8489 true)))
(assert
 (let (($x8493 (or (or false alivey11_1) alivey11_2)))
 (= alivey11 $x8493)))
(assert
 (let (($x8500 (and (= likelihoody12 likelihoody12_1) (= y12 y12_1))))
 (ite (= alivey12_1 true) $x8500 true)))
(assert
 (let (($x8508 (and (= likelihoody12 likelihoody12_2) (= y12 y12_2))))
 (ite (= alivey12_2 true) $x8508 true)))
(assert
 (let (($x8512 (or (or false alivey12_1) alivey12_2)))
 (= alivey12 $x8512)))
(assert
 (let (($x8519 (and (= likelihoody13 likelihoody13_1) (= y13 y13_1))))
 (ite (= alivey13_1 true) $x8519 true)))
(assert
 (let (($x8527 (and (= likelihoody13 likelihoody13_2) (= y13 y13_2))))
 (ite (= alivey13_2 true) $x8527 true)))
(assert
 (let (($x8531 (or (or false alivey13_1) alivey13_2)))
 (= alivey13 $x8531)))
(assert
 (let (($x8538 (and (= likelihoody14 likelihoody14_1) (= y14 y14_1))))
 (ite (= alivey14_1 true) $x8538 true)))
(assert
 (let (($x8546 (and (= likelihoody14 likelihoody14_2) (= y14 y14_2))))
 (ite (= alivey14_2 true) $x8546 true)))
(assert
 (let (($x8550 (or (or false alivey14_1) alivey14_2)))
 (= alivey14 $x8550)))
(assert
 (let (($x8557 (and (= likelihoody15 likelihoody15_1) (= y15 y15_1))))
 (ite (= alivey15_1 true) $x8557 true)))
(assert
 (let (($x8565 (and (= likelihoody15 likelihoody15_2) (= y15 y15_2))))
 (ite (= alivey15_2 true) $x8565 true)))
(assert
 (let (($x8569 (or (or false alivey15_1) alivey15_2)))
 (= alivey15 $x8569)))
(assert
 (let (($x8576 (and (= likelihoody16 likelihoody16_1) (= y16 y16_1))))
 (ite (= alivey16_1 true) $x8576 true)))
(assert
 (let (($x8584 (and (= likelihoody16 likelihoody16_2) (= y16 y16_2))))
 (ite (= alivey16_2 true) $x8584 true)))
(assert
 (let (($x8588 (or (or false alivey16_1) alivey16_2)))
 (= alivey16 $x8588)))
(assert
 (let (($x8595 (and (= likelihoody17 likelihoody17_1) (= y17 y17_1))))
 (ite (= alivey17_1 true) $x8595 true)))
(assert
 (let (($x8603 (and (= likelihoody17 likelihoody17_2) (= y17 y17_2))))
 (ite (= alivey17_2 true) $x8603 true)))
(assert
 (let (($x8607 (or (or false alivey17_1) alivey17_2)))
 (= alivey17 $x8607)))
(assert
 (let (($x8614 (and (= likelihoody18 likelihoody18_1) (= y18 y18_1))))
 (ite (= alivey18_1 true) $x8614 true)))
(assert
 (let (($x8622 (and (= likelihoody18 likelihoody18_2) (= y18 y18_2))))
 (ite (= alivey18_2 true) $x8622 true)))
(assert
 (let (($x8626 (or (or false alivey18_1) alivey18_2)))
 (= alivey18 $x8626)))
(assert
 (let (($x8630 (and (= likelihoody19 likelihoody19_1) (= y19 y19_1))))
 (ite (= alivey19_1 true) $x8630 true)))
(assert
 (let (($x8638 (and (= likelihoody19 likelihoody19_2) (= y19 y19_2))))
 (ite (= alivey19_2 true) $x8638 true)))
(assert
 (let (($x8642 (or (or false alivey19_1) alivey19_2)))
 (= alivey19 $x8642)))
(assert
 (let (($x8648 (and (= likelihoody20 likelihoody20_1) (= y20 y20_1))))
 (ite (= alivey20_1 true) $x8648 true)))
(assert
 (let (($x8656 (and (= likelihoody20 likelihoody20_2) (= y20 y20_2))))
 (ite (= alivey20_2 true) $x8656 true)))
(assert
 (let (($x8660 (or (or false alivey20_1) alivey20_2)))
 (= alivey20 $x8660)))
(assert
 (= y17 (- (/ 1619619172753147.0 2500000000000000.0))))
(assert
 (= y12 (/ 1579562816549691.0 1000000000000000.0)))
(assert
 (= y11 (/ 44568357884803.0 40000000000000.0)))
(assert
 (= y8 (/ 3581811690993659.0 1000000000000000.0)))
(assert
 (= y16 (- (/ 11333844328209919.0 10000000000000000.0))))
(assert
 (= y7 (/ 38408261728807407.0 10000000000000000.0)))
(assert
 (= y18 (- (/ 17134940283536377.0 10000000000000000.0))))
(assert
 (= y14 (/ 12188854648088319.0 10000000000000000.0)))
(assert
 (= y15 (- (/ 425391557062329.0 400000000000000.0))))
(assert
 (= y19 (/ 1826288809344431.0 625000000000000.0)))
(assert
 (= y10 (/ 23093030917112363.0 10000000000000000.0)))
(assert
 (= y6 (/ 2479771202165829.0 500000000000000.0)))
(assert
 (= y3 (/ 3040575315183537.0 500000000000000.0)))
(assert
 (= y9 (/ 10122966946595927.0 100000000000000000.0)))
(assert
 (= y1 (/ 13286918844579907.0 5000000000000000.0)))
(assert
 (= y13 (/ 1460511864881077.0 1000000000000000.0)))
(assert
 (= y20 (- (/ 7992466952018953.0 1000000000000000.0))))
(assert
 (= y4 (/ 2504021117809649.0 500000000000000.0)))
(assert
 (= y5 (/ 2365084959588531.0 500000000000000.0)))
(assert
 (= y2 (/ 3851089938758981.0 500000000000000.0)))
(assert
 (= (to_real outlier20) 0.0))
(assert
 (= (to_real outlier19) 0.0))
(assert
 (= (to_real outlier5) 0.0))
(assert
 (= (to_real outlier9) 1.0))
(assert
 (= (to_real outlier10) 1.0))
(assert
 (= (to_real outlier8) 1.0))
(assert
 (= noise (/ 579594513116931.0 1562500000000000.0)))
(assert
 (= (to_real outlier2) 0.0))
(assert
 (>= intercept (- 6.0)))
(assert
 (<= intercept 6.0))
(assert
 (>= slope (- 6.0)))
(assert
 (<= slope 6.0))
(assert
 (>= proboutlier 0.0))
(assert
 (<= proboutlier 1.0))
(assert
 (let (($x858 (= outlier1 1)))
 (let (($x18 (= outlier1 0)))
 (or $x18 $x858))))
(assert
 (>= y1_1 (- mean1 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x1497 (+ mean1 ?x1496)))
 (<= y1_1 ?x1497))))
(assert
 (>= y1_2 (- 30.0)))
(assert
 (<= y1_2 30.0))
(assert
 (>= y2_1 (- mean2 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x1921 (+ mean2 ?x1496)))
 (<= y2_1 ?x1921))))
(assert
 (>= y2_2 (- 30.0)))
(assert
 (<= y2_2 30.0))
(assert
 (let (($x2188 (= outlier3 1)))
 (let (($x36 (= outlier3 0)))
 (or $x36 $x2188))))
(assert
 (>= y3_1 (- mean3 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x2318 (+ mean3 ?x1496)))
 (<= y3_1 ?x2318))))
(assert
 (>= y3_2 (- 30.0)))
(assert
 (<= y3_2 30.0))
(assert
 (let (($x2585 (= outlier4 1)))
 (let (($x45 (= outlier4 0)))
 (or $x45 $x2585))))
(assert
 (>= y4_1 (- mean4 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x2715 (+ mean4 ?x1496)))
 (<= y4_1 ?x2715))))
(assert
 (>= y4_2 (- 30.0)))
(assert
 (<= y4_2 30.0))
(assert
 (>= y5_1 (- mean5 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x3112 (+ mean5 ?x1496)))
 (<= y5_1 ?x3112))))
(assert
 (>= y5_2 (- 30.0)))
(assert
 (<= y5_2 30.0))
(assert
 (let (($x3379 (= outlier6 1)))
 (let (($x63 (= outlier6 0)))
 (or $x63 $x3379))))
(assert
 (>= y6_1 (- mean6 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x3509 (+ mean6 ?x1496)))
 (<= y6_1 ?x3509))))
(assert
 (>= y6_2 (- 30.0)))
(assert
 (<= y6_2 30.0))
(assert
 (let (($x3776 (= outlier7 1)))
 (let (($x72 (= outlier7 0)))
 (or $x72 $x3776))))
(assert
 (>= y7_1 (- mean7 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x3906 (+ mean7 ?x1496)))
 (<= y7_1 ?x3906))))
(assert
 (>= y7_2 (- 30.0)))
(assert
 (<= y7_2 30.0))
(assert
 (>= y8_1 (- mean8 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x4303 (+ mean8 ?x1496)))
 (<= y8_1 ?x4303))))
(assert
 (>= y8_2 (- 30.0)))
(assert
 (<= y8_2 30.0))
(assert
 (>= y9_1 (- mean9 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x4700 (+ mean9 ?x1496)))
 (<= y9_1 ?x4700))))
(assert
 (>= y9_2 (- 30.0)))
(assert
 (<= y9_2 30.0))
(assert
 (>= y10_1 (- mean10 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x5097 (+ mean10 ?x1496)))
 (<= y10_1 ?x5097))))
(assert
 (>= y10_2 (- 30.0)))
(assert
 (<= y10_2 30.0))
(assert
 (let (($x5364 (= outlier11 1)))
 (let (($x108 (= outlier11 0)))
 (or $x108 $x5364))))
(assert
 (>= y11_1 (- mean11 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x5494 (+ mean11 ?x1496)))
 (<= y11_1 ?x5494))))
(assert
 (>= y11_2 (- 30.0)))
(assert
 (<= y11_2 30.0))
(assert
 (let (($x5761 (= outlier12 1)))
 (let (($x117 (= outlier12 0)))
 (or $x117 $x5761))))
(assert
 (>= y12_1 (- mean12 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x5890 (+ mean12 ?x1496)))
 (<= y12_1 ?x5890))))
(assert
 (>= y12_2 (- 30.0)))
(assert
 (<= y12_2 30.0))
(assert
 (let (($x806 (= outlier13 1)))
 (let (($x126 (= outlier13 0)))
 (or $x126 $x806))))
(assert
 (>= y13_1 (- mean13 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x6215 (+ mean13 ?x1496)))
 (<= y13_1 ?x6215))))
(assert
 (>= y13_2 (- 30.0)))
(assert
 (<= y13_2 30.0))
(assert
 (let (($x6456 (= outlier14 1)))
 (let (($x135 (= outlier14 0)))
 (or $x135 $x6456))))
(assert
 (>= y14_1 (- mean14 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x6584 (+ mean14 ?x1496)))
 (<= y14_1 ?x6584))))
(assert
 (>= y14_2 (- 30.0)))
(assert
 (<= y14_2 30.0))
(assert
 (let (($x1681 (= outlier15 1)))
 (let (($x144 (= outlier15 0)))
 (or $x144 $x1681))))
(assert
 (>= y15_1 (- mean15 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x6846 (+ mean15 ?x1496)))
 (<= y15_1 ?x6846))))
(assert
 (>= y15_2 (- 30.0)))
(assert
 (<= y15_2 30.0))
(assert
 (let (($x2094 (= outlier16 1)))
 (let (($x153 (= outlier16 0)))
 (or $x153 $x2094))))
(assert
 (>= y16_1 (- mean16 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x7109 (+ mean16 ?x1496)))
 (<= y16_1 ?x7109))))
(assert
 (>= y16_2 (- 30.0)))
(assert
 (<= y16_2 30.0))
(assert
 (let (($x2491 (= outlier17 1)))
 (let (($x162 (= outlier17 0)))
 (or $x162 $x2491))))
(assert
 (>= y17_1 (- mean17 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x7372 (+ mean17 ?x1496)))
 (<= y17_1 ?x7372))))
(assert
 (>= y17_2 (- 30.0)))
(assert
 (<= y17_2 30.0))
(assert
 (let (($x2888 (= outlier18 1)))
 (let (($x171 (= outlier18 0)))
 (or $x171 $x2888))))
(assert
 (>= y18_1 (- mean18 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x7635 (+ mean18 ?x1496)))
 (<= y18_1 ?x7635))))
(assert
 (>= y18_2 (- 30.0)))
(assert
 (<= y18_2 30.0))
(assert
 (>= y19_1 (- mean19 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x7898 (+ mean19 ?x1496)))
 (<= y19_1 ?x7898))))
(assert
 (>= y19_2 (- 30.0)))
(assert
 (<= y19_2 30.0))
(assert
 (>= y20_1 (- mean20 (* 3.0 noise))))
(assert
 (let ((?x1496 (* 3.0 noise)))
 (let ((?x8161 (+ mean20 ?x1496)))
 (<= y20_1 ?x8161))))
(assert
 (>= y20_2 (- 30.0)))
(assert
 (<= y20_2 30.0))
(assert
 (let ((?x8809 (ite alivey20 likelihoody20 0.0)))
 (let ((?x8807 (ite alivey19 likelihoody19 0.0)))
 (let ((?x8805 (ite alivey18 likelihoody18 0.0)))
 (let ((?x8803 (ite aliveoutlier18 likelihoodoutlier18 0.0)))
 (let ((?x8801 (ite alivey17 likelihoody17 0.0)))
 (let ((?x8799 (ite aliveoutlier17 likelihoodoutlier17 0.0)))
 (let ((?x8797 (ite alivey16 likelihoody16 0.0)))
 (let ((?x8795 (ite aliveoutlier16 likelihoodoutlier16 0.0)))
 (let ((?x8793 (ite alivey15 likelihoody15 0.0)))
 (let ((?x8791 (ite aliveoutlier15 likelihoodoutlier15 0.0)))
 (let ((?x8789 (ite alivey14 likelihoody14 0.0)))
 (let ((?x8787 (ite aliveoutlier14 likelihoodoutlier14 0.0)))
 (let ((?x8785 (ite alivey13 likelihoody13 0.0)))
 (let ((?x8783 (ite aliveoutlier13 likelihoodoutlier13 0.0)))
 (let ((?x8781 (ite alivey12 likelihoody12 0.0)))
 (let ((?x8779 (ite aliveoutlier12 likelihoodoutlier12 0.0)))
 (let ((?x8777 (ite alivey11 likelihoody11 0.0)))
 (let ((?x8775 (ite aliveoutlier11 likelihoodoutlier11 0.0)))
 (let ((?x8773 (ite alivey10 likelihoody10 0.0)))
 (let ((?x8771 (ite alivey9 likelihoody9 0.0)))
 (let ((?x8769 (ite alivey8 likelihoody8 0.0)))
 (let ((?x8767 (ite alivey7 likelihoody7 0.0)))
 (let ((?x8765 (ite aliveoutlier7 likelihoodoutlier7 0.0)))
 (let ((?x8763 (ite alivey6 likelihoody6 0.0)))
 (let ((?x8761 (ite aliveoutlier6 likelihoodoutlier6 0.0)))
 (let ((?x8759 (ite alivey5 likelihoody5 0.0)))
 (let ((?x8757 (ite alivey4 likelihoody4 0.0)))
 (let ((?x8755 (ite aliveoutlier4 likelihoodoutlier4 0.0)))
 (let ((?x8753 (ite alivey3 likelihoody3 0.0)))
 (let ((?x8751 (ite aliveoutlier3 likelihoodoutlier3 0.0)))
 (let ((?x8749 (ite alivey2 likelihoody2 0.0)))
 (let ((?x8747 (ite alivey1 likelihoody1 0.0)))
 (let ((?x8745 (ite aliveoutlier1 likelihoodoutlier1 0.0)))
 (let ((?x8743 (ite aliveproboutlier likelihoodproboutlier 0.0)))
 (let ((?x8741 (ite aliveslope likelihoodslope 0.0)))
 (let ((?x8744 (+ (+ (+ 0.0 (ite aliveintercept likelihoodintercept 0.0)) ?x8741) ?x8743)))
 (let ((?x8758 (+ (+ (+ (+ (+ (+ (+ ?x8744 ?x8745) ?x8747) ?x8749) ?x8751) ?x8753) ?x8755) ?x8757)))
 (let ((?x8772 (+ (+ (+ (+ (+ (+ (+ ?x8758 ?x8759) ?x8761) ?x8763) ?x8765) ?x8767) ?x8769) ?x8771)))
 (let ((?x8786 (+ (+ (+ (+ (+ (+ (+ ?x8772 ?x8773) ?x8775) ?x8777) ?x8779) ?x8781) ?x8783) ?x8785)))
 (let ((?x8800 (+ (+ (+ (+ (+ (+ (+ ?x8786 ?x8787) ?x8789) ?x8791) ?x8793) ?x8795) ?x8797) ?x8799)))
 (let ((?x8810 (+ (+ (+ (+ (+ ?x8800 ?x8801) ?x8803) ?x8805) ?x8807) ?x8809)))
 (= trace_prob ?x8810)))))))))))))))))))))))))))))))))))))))))))
(check-sat)
