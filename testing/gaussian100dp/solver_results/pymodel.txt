
[alivemu == True,
 alivesigma == True,
 alivey1 == True,
 alivey2 == True,
 alivey3 == True,
 alivey4 == True,
 alivey5 == True,
 alivey6 == True,
 alivey7 == True,
 alivey8 == True,
 alivey9 == True,
 alivey10 == True,
 alivey11 == True,
 alivey12 == True,
 alivey13 == True,
 alivey14 == True,
 alivey15 == True,
 alivey16 == True,
 alivey17 == True,
 alivey18 == True,
 alivey19 == True,
 alivey20 == True,
 alivey21 == True,
 alivey22 == True,
 alivey23 == True,
 alivey24 == True,
 alivey25 == True,
 alivey26 == True,
 alivey27 == True,
 alivey28 == True,
 alivey29 == True,
 alivey30 == True,
 alivey31 == True,
 alivey32 == True,
 alivey33 == True,
 alivey34 == True,
 alivey35 == True,
 alivey36 == True,
 alivey37 == True,
 alivey38 == True,
 alivey39 == True,
 alivey40 == True,
 alivey41 == True,
 alivey42 == True,
 alivey43 == True,
 alivey44 == True,
 alivey45 == True,
 alivey46 == True,
 alivey47 == True,
 alivey48 == True,
 alivey49 == True,
 alivey50 == True,
 alivey51 == True,
 alivey52 == True,
 alivey53 == True,
 alivey54 == True,
 alivey55 == True,
 alivey56 == True,
 alivey57 == True,
 alivey58 == True,
 alivey59 == True,
 alivey60 == True,
 alivey61 == True,
 alivey62 == True,
 alivey63 == True,
 alivey64 == True,
 alivey65 == True,
 alivey66 == True,
 alivey67 == True,
 alivey68 == True,
 alivey69 == True,
 alivey70 == True,
 alivey71 == True,
 alivey72 == True,
 alivey73 == True,
 alivey74 == True,
 alivey75 == True,
 alivey76 == True,
 alivey77 == True,
 alivey78 == True,
 alivey79 == True,
 alivey80 == True,
 alivey81 == True,
 alivey82 == True,
 alivey83 == True,
 alivey84 == True,
 alivey85 == True,
 alivey86 == True,
 alivey87 == True,
 alivey88 == True,
 alivey89 == True,
 alivey90 == True,
 alivey91 == True,
 alivey92 == True,
 alivey93 == True,
 alivey94 == True,
 alivey95 == True,
 alivey96 == True,
 alivey97 == True,
 alivey98 == True,
 alivey99 == True,
 alivey100 == True,
 sigma_div == 510204081632653/25000000000000000,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 sigma > 0,
 y36 == 14677487853979873/1000000000000000,
 y43 == 1234330514461337/500000000000000,
 y51 == 4183250125649453/500000000000000,
 y33 == 9860121971803121/500000000000000,
 y34 == 2546409924955377/100000000000000,
 y58 == 1255095195085471/50000000000000,
 y22 == -2452663162861663/1000000000000000,
 y75 == 27398087749367097/1000000000000000,
 y63 == 472038729804283/25000000000000,
 y83 == -5420911772114393/250000000000000,
 y18 == 5101229669465959/500000000000000,
 y70 == 11736699411479059/1000000000000000,
 y91 == 14528049828924491/500000000000000,
 y15 == 2434612551713917/100000000000000,
 y29 == -2864661514787281/500000000000000,
 y49 == 1837621953081523/125000000000000,
 y60 == 2171875373521727/250000000000000,
 y37 == 6084799169563041/1000000000000000,
 y48 == 15839150961926693/1000000000000000,
 y90 == -8255687963629077/5000000000000000,
 y95 == 31215722414367697/10000000000000000,
 y50 == -1333108093176837/200000000000000,
 y86 == 12145816231983353/1000000000000000,
 y88 == -344789561404521/31250000000000,
 y6 == 12675644186288851/1000000000000000,
 y65 == 14459465799819851/2000000000000000,
 y9 == -42752417891096783/100000000000000000,
 y59 == 12147027965600383/5000000000000000,
 y64 == 1810516017330277/100000000000000,
 y89 == 5369348531285167/200000000000000,
 y100 == 1852457450389759/500000000000000,
 y87 == 2466698317153147/500000000000000,
 y76 == 8426375666241551/1000000000000000,
 y2 == 7657383768915981/500000000000000,
 y17 == 3109621683809631/250000000000000,
 y99 == 19736902116708027/1000000000000000,
 y32 == 5227048185685429/1000000000000000,
 y41 == 23405068460383083/10000000000000000,
 y79 == 6696973333584067/500000000000000,
 y97 == 14519211679323593/1000000000000000,
 y12 == 4364485406800317/200000000000000,
 y11 == 1294370211477211/250000000000000,
 y40 == -2992466952018953/500000000000000,
 y16 == 7660222173094483/500000000000000,
 y73 == 11617236627484523/500000000000000,
 y26 == 5105205354261151/200000000000000,
 y69 == 1753052363925761/100000000000000,
 y45 == 1701877964611253/200000000000000,
 y19 == 1616352349534873/250000000000000,
 y81 == -2814432445817399/1000000000000000,
 y67 == -4955056280674597/500000000000000,
 y93 == 2758281805983513/125000000000000,
 y3 == 9657383699664299/5000000000000000,
 y55 == -3453878777949299/500000000000000,
 y38 == 7922062094951089/500000000000000,
 y30 == -3901156800484877/1000000000000000,
 y28 == 3121981455933453/100000000000000,
 y31 == 9336807282162283/500000000000000,
 y94 == -2248850367110471/2500000000000000,
 y98 == 11655777022678603/1000000000000000,
 y35 == 4158019518914291/1000000000000000,
 y8 == 8698960404035123/5000000000000000,
 y25 == 1232481963930473/250000000000000,
 y24 == 347614600304087/20000000000000,
 y84 == 6701417321830653/500000000000000,
 y96 == 3448944446122253/5000000000000000,
 y23 == 991272854503059/200000000000000,
 y7 == 27499336925282453/1000000000000000,
 y27 == 9137378632314011/500000000000000,
 y77 == 15771329085720803/1000000000000000,
 y80 == 9956933208789549/1000000000000000,
 y44 == 8042232779561271/2000000000000000,
 y54 == -18963316129646177/5000000000000000,
 y68 == 13330351460153697/500000000000000,
 y10 == 13417323082871917/2000000000000000,
 y21 == 449482263640301/25000000000000,
 y57 == 23943528549573/1250000000000,
 y1 == 9294168610461021/1000000000000000,
 y46 == 925947081657273/100000000000000,
 y61 == 3957909565029701/1000000000000000,
 y4 == 3456991333983293/100000000000000,
 y5 == 21648740735275197/1000000000000000,
 y39 == 9686840521400013/1000000000000000,
 y74 == 2690107573778589/250000000000000,
 y66 == 1730560123154163/100000000000000,
 y71 == 6864853425218543/500000000000000,
 y53 == 7619854550235823/1000000000000000,
 y82 == 88692413543807/20000000000000,
 y47 == 2076246060033249/100000000000000,
 y72 == 14461412969144067/1000000000000000,
 y78 == 2931380868513127/200000000000000,
 y56 == -175814931960099/12500000000000,
 y92 == 18786078641203403/5000000000000000,
 y14 == 9974418194456923/1000000000000000,
 y62 == -3024189595470089/250000000000000,
 y52 == -3957257584570053/1000000000000000,
 y85 == 243393356493951/62500000000000,
 y42 == 5521550038378157/250000000000000,
 y20 == 2184580787897577/200000000000000,
 y13 == 14806914145449797/1000000000000000,
 sigma == 273532069189589/15625000000000,
 mu >= 10,
 mu <= 190,
 sigma >= 1,
 sigma <= 50,
 likelihoodmu ==
 If(mu > 190,
    0,
    If(mu < 10,
       0,
       If(mu < 40,
          8187015320636311/50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*
          mu +
          -818701532063631/500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
          If(mu < 70,
             1536325537958867/25000000000000000000000000000000000000000000000000000000000000000000*
             mu +
             -1536325537958867/625000000000000000000000000000000000000000000000000000000000000000,
             If(mu < 100,
                44327420055497927/100000000000000000000*mu +
                -620583880776971/20000000000000000,
                If(mu < 130,
                   -44327420055497927/100000000000000000000*
                   mu +
                   11525129214429461/200000000000000000,
                   If(mu < 160,
                      -1536325537958867/25000000000000000000000000000000000000000000000000000000000000000000*
                      mu +
                      2458120860734187/250000000000000000000000000000000000000000000000000000000000000000,
                      If(mu < 190,
                         -8187015320636311/50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*
                         mu +
                         1555532910920899/50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                         0)))))))),
 likelihoodsigma ==
 If(sigma < 1, 0, If(sigma <= 50, sigma_div, 0)),
 sigma > 0,
 Implies(piecewise for y1_endpoint3_1,
         y1_endpoint3_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*3*3)/8)**0/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**1/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**2/2 +
          ((-(sigma*1)*sigma*1*3*3)/8)**3/6 +
          ((-(sigma*1)*sigma*1*3*3)/8)**4/24 +
          ((-(sigma*1)*sigma*1*3*3)/8)**5/120 +
          ((-(sigma*1)*sigma*1*3*3)/8)**6/720 +
          ((-(sigma*1)*sigma*1*3*3)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*3*3)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*3*3)/8)**9/362880)),
 Implies(piecewise for y1_endpoint2_1,
         y1_endpoint2_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*2*2)/8)**0/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**1/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**2/2 +
          ((-(sigma*1)*sigma*1*2*2)/8)**3/6 +
          ((-(sigma*1)*sigma*1*2*2)/8)**4/24 +
          ((-(sigma*1)*sigma*1*2*2)/8)**5/120 +
          ((-(sigma*1)*sigma*1*2*2)/8)**6/720 +
          ((-(sigma*1)*sigma*1*2*2)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*2*2)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*2*2)/8)**9/362880)),
 Implies(piecewise for y1_endpoint1_1,
         y1_endpoint1_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*1*1)/8)**0/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**1/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**2/2 +
          ((-(sigma*1)*sigma*1*1*1)/8)**3/6 +
          ((-(sigma*1)*sigma*1*1*1)/8)**4/24 +
          ((-(sigma*1)*sigma*1*1*1)/8)**5/120 +
          ((-(sigma*1)*sigma*1*1*1)/8)**6/720 +
          ((-(sigma*1)*sigma*1*1*1)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*1*1)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*1*1)/8)**9/362880)),
 Implies(piecewise for y1_endpoint0_2,
         y1_endpoint0_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*0*0)/8)**0/1 +
          ((-(sigma*1)*sigma*1*0*0)/8)**1/1 +
          ((-(sigma*1)*sigma*1*0*0)/8)**2/2 +
          ((-(sigma*1)*sigma*1*0*0)/8)**3/6 +
          ((-(sigma*1)*sigma*1*0*0)/8)**4/24 +
          ((-(sigma*1)*sigma*1*0*0)/8)**5/120 +
          ((-(sigma*1)*sigma*1*0*0)/8)**6/720 +
          ((-(sigma*1)*sigma*1*0*0)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*0*0)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*0*0)/8)**9/362880)),
 Implies(piecewise for y1_endpoint1_2,
         y1_endpoint1_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*1*1)/8)**0/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**1/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**2/2 +
          ((-(sigma*1)*sigma*1*1*1)/8)**3/6 +
          ((-(sigma*1)*sigma*1*1*1)/8)**4/24 +
          ((-(sigma*1)*sigma*1*1*1)/8)**5/120 +
          ((-(sigma*1)*sigma*1*1*1)/8)**6/720 +
          ((-(sigma*1)*sigma*1*1*1)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*1*1)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*1*1)/8)**9/362880)),
 Implies(piecewise for y1_endpoint2_2,
         y1_endpoint2_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*2*2)/8)**0/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**1/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**2/2 +
          ((-(sigma*1)*sigma*1*2*2)/8)**3/6 +
          ((-(sigma*1)*sigma*1*2*2)/8)**4/24 +
          ((-(sigma*1)*sigma*1*2*2)/8)**5/120 +
          ((-(sigma*1)*sigma*1*2*2)/8)**6/720 +
          ((-(sigma*1)*sigma*1*2*2)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*2*2)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*2*2)/8)**9/362880)),
 Implies(piecewise for y1_endpoint3_2,
         y1_endpoint3_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*3*3)/8)**0/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**1/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**2/2 +
          ((-(sigma*1)*sigma*1*3*3)/8)**3/6 +
          ((-(sigma*1)*sigma*1*3*3)/8)**4/24 +
          ((-(sigma*1)*sigma*1*3*3)/8)**5/120 +
          ((-(sigma*1)*sigma*1*3*3)/8)**6/720 +
          ((-(sigma*1)*sigma*1*3*3)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*3*3)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*3*3)/8)**9/362880)),
 likelihoody1 ==
 If(y1 > mu + sigma*1*3,
    0,
    If(y1 < mu - sigma*1*3,
       0,
       If(y1 < mu - sigma*1*2,
          ((y1_endpoint2_1 - y1_endpoint3_1)/
           (mu - sigma*1*2 - (mu - sigma*1*3)))*
          y1 +
          y1_endpoint3_1 -
          ((y1_endpoint2_1 - y1_endpoint3_1)/
           (mu - sigma*1*2 - (mu - sigma*1*3)))*
          (mu - sigma*1*3),
          If(y1 < mu - sigma*1*1,
             ((y1_endpoint1_1 - y1_endpoint2_1)/
              (mu - sigma*1*1 - (mu - sigma*1*2)))*
             y1 +
             y1_endpoint2_1 -
             ((y1_endpoint1_1 - y1_endpoint2_1)/
              (mu - sigma*1*1 - (mu - sigma*1*2)))*
             (mu - sigma*1*2),
             If(y1 < mu + sigma*1*0,
                ((y1_endpoint0_2 - y1_endpoint1_1)/
                 (mu + sigma*1*0 - (mu - sigma*1*1)))*
                y1 +
                y1_endpoint1_1 -
                ((y1_endpoint0_2 - y1_endpoint1_1)/
                 (mu + sigma*1*0 - (mu - sigma*1*1)))*
                (mu - sigma*1*1),
                If(y1 < mu + sigma*1*1,
                   ((y1_endpoint1_2 - y1_endpoint0_2)/
                    (mu + sigma*1*1 - (mu + sigma*1*0)))*
                   y1 +
                   y1_endpoint0_2 -
                   ((y1_endpoint1_2 - y1_endpoint0_2)/
                    (mu + sigma*1*1 - (mu + sigma*1*0)))*
                   (mu + sigma*1*0),
                   If(y1 < mu + sigma*1*2,
                      ((y1_endpoint2_2 - y1_endpoint1_2)/
                       (mu + sigma*1*2 - (mu + sigma*1*1)))*
                      y1 +
                      y1_endpoint1_2 -
                      ((y1_endpoint2_2 - y1_endpoint1_2)/
                       (mu + sigma*1*2 - (mu + sigma*1*1)))*
                      (mu + sigma*1*1),
                      If(y1 < mu + sigma*1*3,
                         ((y1_endpoint3_2 - y1_endpoint2_2)/
                          (mu + sigma*1*3 - (mu + sigma*1*2)))*
                         y1 +
                         y1_endpoint2_2 -
                         ((y1_endpoint3_2 - y1_endpoint2_2)/
                          (mu + sigma*1*3 - (mu + sigma*1*2)))*
                         (mu + sigma*1*2),
                         0)))))))),
 sigma > 0,
 Implies(piecewise for y2_endpoint3_1,
         y2_endpoint3_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*3*3)/8)**0/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**1/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**2/2 +
          ((-(sigma*1)*sigma*1*3*3)/8)**3/6 +
          ((-(sigma*1)*sigma*1*3*3)/8)**4/24 +
          ((-(sigma*1)*sigma*1*3*3)/8)**5/120 +
          ((-(sigma*1)*sigma*1*3*3)/8)**6/720 +
          ((-(sigma*1)*sigma*1*3*3)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*3*3)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*3*3)/8)**9/362880)),
 Implies(piecewise for y2_endpoint2_1,
         y2_endpoint2_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*2*2)/8)**0/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**1/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**2/2 +
          ((-(sigma*1)*sigma*1*2*2)/8)**3/6 +
          ((-(sigma*1)*sigma*1*2*2)/8)**4/24 +
          ((-(sigma*1)*sigma*1*2*2)/8)**5/120 +
          ((-(sigma*1)*sigma*1*2*2)/8)**6/720 +
          ((-(sigma*1)*sigma*1*2*2)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*2*2)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*2*2)/8)**9/362880)),
 Implies(piecewise for y2_endpoint1_1,
         y2_endpoint1_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*1*1)/8)**0/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**1/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**2/2 +
          ((-(sigma*1)*sigma*1*1*1)/8)**3/6 +
          ((-(sigma*1)*sigma*1*1*1)/8)**4/24 +
          ((-(sigma*1)*sigma*1*1*1)/8)**5/120 +
          ((-(sigma*1)*sigma*1*1*1)/8)**6/720 +
          ((-(sigma*1)*sigma*1*1*1)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*1*1)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*1*1)/8)**9/362880)),
 Implies(piecewise for y2_endpoint0_2,
         y2_endpoint0_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*0*0)/8)**0/1 +
          ((-(sigma*1)*sigma*1*0*0)/8)**1/1 +
          ((-(sigma*1)*sigma*1*0*0)/8)**2/2 +
          ((-(sigma*1)*sigma*1*0*0)/8)**3/6 +
          ((-(sigma*1)*sigma*1*0*0)/8)**4/24 +
          ((-(sigma*1)*sigma*1*0*0)/8)**5/120 +
          ((-(sigma*1)*sigma*1*0*0)/8)**6/720 +
          ((-(sigma*1)*sigma*1*0*0)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*0*0)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*0*0)/8)**9/362880)),
 Implies(piecewise for y2_endpoint1_2,
         y2_endpoint1_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*1*1)/8)**0/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**1/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**2/2 +
          ((-(sigma*1)*sigma*1*1*1)/8)**3/6 +
          ((-(sigma*1)*sigma*1*1*1)/8)**4/24 +
          ((-(sigma*1)*sigma*1*1*1)/8)**5/120 +
          ((-(sigma*1)*sigma*1*1*1)/8)**6/720 +
          ((-(sigma*1)*sigma*1*1*1)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*1*1)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*1*1)/8)**9/362880)),
 Implies(piecewise for y2_endpoint2_2,
         y2_endpoint2_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*2*2)/8)**0/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**1/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**2/2 +
          ((-(sigma*1)*sigma*1*2*2)/8)**3/6 +
          ((-(sigma*1)*sigma*1*2*2)/8)**4/24 +
          ((-(sigma*1)*sigma*1*2*2)/8)**5/120 +
          ((-(sigma*1)*sigma*1*2*2)/8)**6/720 +
          ((-(sigma*1)*sigma*1*2*2)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*2*2)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*2*2)/8)**9/362880)),
 Implies(piecewise for y2_endpoint3_2,
         y2_endpoint3_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*3*3)/8)**0/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**1/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**2/2 +
          ((-(sigma*1)*sigma*1*3*3)/8)**3/6 +
          ((-(sigma*1)*sigma*1*3*3)/8)**4/24 +
          ((-(sigma*1)*sigma*1*3*3)/8)**5/120 +
          ((-(sigma*1)*sigma*1*3*3)/8)**6/720 +
          ((-(sigma*1)*sigma*1*3*3)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*3*3)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*3*3)/8)**9/362880)),
 likelihoody2 ==
 If(y2 > mu + sigma*1*3,
    0,
    If(y2 < mu - sigma*1*3,
       0,
       If(y2 < mu - sigma*1*2,
          ((y2_endpoint2_1 - y2_endpoint3_1)/
           (mu - sigma*1*2 - (mu - sigma*1*3)))*
          y2 +
          y2_endpoint3_1 -
          ((y2_endpoint2_1 - y2_endpoint3_1)/
           (mu - sigma*1*2 - (mu - sigma*1*3)))*
          (mu - sigma*1*3),
          If(y2 < mu - sigma*1*1,
             ((y2_endpoint1_1 - y2_endpoint2_1)/
              (mu - sigma*1*1 - (mu - sigma*1*2)))*
             y2 +
             y2_endpoint2_1 -
             ((y2_endpoint1_1 - y2_endpoint2_1)/
              (mu - sigma*1*1 - (mu - sigma*1*2)))*
             (mu - sigma*1*2),
             If(y2 < mu + sigma*1*0,
                ((y2_endpoint0_2 - y2_endpoint1_1)/
                 (mu + sigma*1*0 - (mu - sigma*1*1)))*
                y2 +
                y2_endpoint1_1 -
                ((y2_endpoint0_2 - y2_endpoint1_1)/
                 (mu + sigma*1*0 - (mu - sigma*1*1)))*
                (mu - sigma*1*1),
                If(y2 < mu + sigma*1*1,
                   ((y2_endpoint1_2 - y2_endpoint0_2)/
                    (mu + sigma*1*1 - (mu + sigma*1*0)))*
                   y2 +
                   y2_endpoint0_2 -
                   ((y2_endpoint1_2 - y2_endpoint0_2)/
                    (mu + sigma*1*1 - (mu + sigma*1*0)))*
                   (mu + sigma*1*0),
                   If(y2 < mu + sigma*1*2,
                      ((y2_endpoint2_2 - y2_endpoint1_2)/
                       (mu + sigma*1*2 - (mu + sigma*1*1)))*
                      y2 +
                      y2_endpoint1_2 -
                      ((y2_endpoint2_2 - y2_endpoint1_2)/
                       (mu + sigma*1*2 - (mu + sigma*1*1)))*
                      (mu + sigma*1*1),
                      If(y2 < mu + sigma*1*3,
                         ((y2_endpoint3_2 - y2_endpoint2_2)/
                          (mu + sigma*1*3 - (mu + sigma*1*2)))*
                         y2 +
                         y2_endpoint2_2 -
                         ((y2_endpoint3_2 - y2_endpoint2_2)/
                          (mu + sigma*1*3 - (mu + sigma*1*2)))*
                         (mu + sigma*1*2),
                         0)))))))),
 sigma > 0,
 Implies(piecewise for y3_endpoint3_1,
         y3_endpoint3_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*3*3)/8)**0/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**1/1 +
          ((-(sigma*1)*sigma*1*3*3)/8)**2/2 +
          ((-(sigma*1)*sigma*1*3*3)/8)**3/6 +
          ((-(sigma*1)*sigma*1*3*3)/8)**4/24 +
          ((-(sigma*1)*sigma*1*3*3)/8)**5/120 +
          ((-(sigma*1)*sigma*1*3*3)/8)**6/720 +
          ((-(sigma*1)*sigma*1*3*3)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*3*3)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*3*3)/8)**9/362880)),
 Implies(piecewise for y3_endpoint2_1,
         y3_endpoint2_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*2*2)/8)**0/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**1/1 +
          ((-(sigma*1)*sigma*1*2*2)/8)**2/2 +
          ((-(sigma*1)*sigma*1*2*2)/8)**3/6 +
          ((-(sigma*1)*sigma*1*2*2)/8)**4/24 +
          ((-(sigma*1)*sigma*1*2*2)/8)**5/120 +
          ((-(sigma*1)*sigma*1*2*2)/8)**6/720 +
          ((-(sigma*1)*sigma*1*2*2)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*2*2)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*2*2)/8)**9/362880)),
 Implies(piecewise for y3_endpoint1_1,
         y3_endpoint1_1 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*1*1)/8)**0/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**1/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**2/2 +
          ((-(sigma*1)*sigma*1*1*1)/8)**3/6 +
          ((-(sigma*1)*sigma*1*1*1)/8)**4/24 +
          ((-(sigma*1)*sigma*1*1*1)/8)**5/120 +
          ((-(sigma*1)*sigma*1*1*1)/8)**6/720 +
          ((-(sigma*1)*sigma*1*1*1)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*1*1)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*1*1)/8)**9/362880)),
 Implies(piecewise for y3_endpoint0_2,
         y3_endpoint0_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*0*0)/8)**0/1 +
          ((-(sigma*1)*sigma*1*0*0)/8)**1/1 +
          ((-(sigma*1)*sigma*1*0*0)/8)**2/2 +
          ((-(sigma*1)*sigma*1*0*0)/8)**3/6 +
          ((-(sigma*1)*sigma*1*0*0)/8)**4/24 +
          ((-(sigma*1)*sigma*1*0*0)/8)**5/120 +
          ((-(sigma*1)*sigma*1*0*0)/8)**6/720 +
          ((-(sigma*1)*sigma*1*0*0)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*0*0)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*0*0)/8)**9/362880)),
 Implies(piecewise for y3_endpoint1_2,
         y3_endpoint1_2 ==
         (1/(sigma*12533/5000))*
         (0 +
          ((-(sigma*1)*sigma*1*1*1)/8)**0/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**1/1 +
          ((-(sigma*1)*sigma*1*1*1)/8)**2/2 +
          ((-(sigma*1)*sigma*1*1*1)/8)**3/6 +
          ((-(sigma*1)*sigma*1*1*1)/8)**4/24 +
          ((-(sigma*1)*sigma*1*1*1)/8)**5/120 +
          ((-(sigma*1)*sigma*1*1*1)/8)**6/720 +
          ((-(sigma*1)*sigma*1*1*1)/8)**7/5040 +
          ((-(sigma*1)*sigma*1*1*1)/8)**8/40320 +
          ((-(sigma*1)*sigma*1*1*1)/8)**9/362880)),
 Implies(piecewise for y3_endpoint2_2,
         y3_endpoint2_2 ==
         (1/(sigma*12533/5000))*
         (... +
          ... +
          ... +
          ... +
          ... +
          ... +
          ... +
          ... +
          ... +
          ... +
          ...)),
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...,
 ...]